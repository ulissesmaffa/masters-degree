// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="SA_top,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.470000,HLS_SYN_LAT=36,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=3,HLS_SYN_FF=192,HLS_SYN_LUT=1026,HLS_VERSION=2019_2}" *)

module SA_top (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        SA_ba_sa_address0,
        SA_ba_sa_ce0,
        SA_ba_sa_we0,
        SA_ba_sa_d0,
        SA_pe_li_address0,
        SA_pe_li_ce0,
        SA_pe_li_we0,
        SA_pe_li_d0,
        SA_pe_li_q0,
        SA_pe_tw_address0,
        SA_pe_tw_ce0,
        SA_pe_tw_we0,
        SA_pe_tw_d0,
        SA_pe_tw_q0,
        SA_pe_ri_address0,
        SA_pe_ri_ce0,
        SA_pe_ri_we0,
        SA_pe_ri_d0,
        SA_pe_ri_q0,
        SA_pe_bw_address0,
        SA_pe_bw_ce0,
        SA_pe_bw_we0,
        SA_pe_bw_d0,
        SA_pe_bw_q0,
        SA_pe_ba_address0,
        SA_pe_ba_ce0,
        SA_pe_ba_we0,
        SA_pe_ba_d0,
        SA_pe_ba_q0,
        SA_buffer_a_li_ready_address0,
        SA_buffer_a_li_ready_ce0,
        SA_buffer_a_li_ready_we0,
        SA_buffer_a_li_ready_d0,
        SA_buffer_a_li_ready_q0,
        SA_buffer_a_li_value_address0,
        SA_buffer_a_li_value_ce0,
        SA_buffer_a_li_value_we0,
        SA_buffer_a_li_value_d0,
        SA_buffer_a_li_value_q0,
        SA_buffer_b_tw_ready_address0,
        SA_buffer_b_tw_ready_ce0,
        SA_buffer_b_tw_ready_we0,
        SA_buffer_b_tw_ready_d0,
        SA_buffer_b_tw_ready_q0,
        SA_buffer_b_tw_value_address0,
        SA_buffer_b_tw_value_ce0,
        SA_buffer_b_tw_value_we0,
        SA_buffer_b_tw_value_d0,
        SA_buffer_b_tw_value_q0,
        i,
        value_a,
        j,
        value_b
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] SA_ba_sa_address0;
output   SA_ba_sa_ce0;
output   SA_ba_sa_we0;
output  [31:0] SA_ba_sa_d0;
output  [1:0] SA_pe_li_address0;
output   SA_pe_li_ce0;
output   SA_pe_li_we0;
output  [31:0] SA_pe_li_d0;
input  [31:0] SA_pe_li_q0;
output  [1:0] SA_pe_tw_address0;
output   SA_pe_tw_ce0;
output   SA_pe_tw_we0;
output  [31:0] SA_pe_tw_d0;
input  [31:0] SA_pe_tw_q0;
output  [1:0] SA_pe_ri_address0;
output   SA_pe_ri_ce0;
output   SA_pe_ri_we0;
output  [31:0] SA_pe_ri_d0;
input  [31:0] SA_pe_ri_q0;
output  [1:0] SA_pe_bw_address0;
output   SA_pe_bw_ce0;
output   SA_pe_bw_we0;
output  [31:0] SA_pe_bw_d0;
input  [31:0] SA_pe_bw_q0;
output  [1:0] SA_pe_ba_address0;
output   SA_pe_ba_ce0;
output   SA_pe_ba_we0;
output  [31:0] SA_pe_ba_d0;
input  [31:0] SA_pe_ba_q0;
output  [0:0] SA_buffer_a_li_ready_address0;
output   SA_buffer_a_li_ready_ce0;
output   SA_buffer_a_li_ready_we0;
output  [0:0] SA_buffer_a_li_ready_d0;
input  [0:0] SA_buffer_a_li_ready_q0;
output  [0:0] SA_buffer_a_li_value_address0;
output   SA_buffer_a_li_value_ce0;
output   SA_buffer_a_li_value_we0;
output  [31:0] SA_buffer_a_li_value_d0;
input  [31:0] SA_buffer_a_li_value_q0;
output  [0:0] SA_buffer_b_tw_ready_address0;
output   SA_buffer_b_tw_ready_ce0;
output   SA_buffer_b_tw_ready_we0;
output  [0:0] SA_buffer_b_tw_ready_d0;
input  [0:0] SA_buffer_b_tw_ready_q0;
output  [0:0] SA_buffer_b_tw_value_address0;
output   SA_buffer_b_tw_value_ce0;
output   SA_buffer_b_tw_value_we0;
output  [31:0] SA_buffer_b_tw_value_d0;
input  [31:0] SA_buffer_b_tw_value_q0;
input  [31:0] i;
input  [31:0] value_a;
input  [31:0] j;
input  [31:0] value_b;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[1:0] SA_pe_ba_address0;
reg SA_pe_ba_ce0;
reg SA_pe_ba_we0;
reg[31:0] SA_pe_ba_d0;
reg[0:0] SA_buffer_a_li_ready_address0;
reg SA_buffer_a_li_ready_ce0;
reg SA_buffer_a_li_ready_we0;
reg[0:0] SA_buffer_a_li_ready_d0;
reg[0:0] SA_buffer_a_li_value_address0;
reg SA_buffer_a_li_value_ce0;
reg SA_buffer_a_li_value_we0;
reg[0:0] SA_buffer_b_tw_ready_address0;
reg SA_buffer_b_tw_ready_ce0;
reg SA_buffer_b_tw_ready_we0;
reg[0:0] SA_buffer_b_tw_ready_d0;
reg[0:0] SA_buffer_b_tw_value_address0;
reg SA_buffer_b_tw_value_ce0;
reg SA_buffer_b_tw_value_we0;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire    grp_compute_fu_198_ap_ready;
wire    grp_compute_fu_198_ap_done;
wire   [0:0] icmp_ln14_fu_232_p2;
reg   [0:0] icmp_ln14_reg_340;
wire   [1:0] i_9_fu_269_p2;
reg   [1:0] i_9_reg_350;
wire    ap_CS_fsm_state4;
wire   [3:0] zext_ln97_1_fu_289_p1;
reg   [3:0] zext_ln97_1_reg_355;
wire   [0:0] icmp_ln96_fu_263_p2;
wire   [1:0] j_7_fu_299_p2;
wire    ap_CS_fsm_state5;
wire    grp_compute_fu_198_ap_start;
wire    grp_compute_fu_198_ap_idle;
wire   [1:0] grp_compute_fu_198_SA_ba_sa_address0;
wire    grp_compute_fu_198_SA_ba_sa_ce0;
wire    grp_compute_fu_198_SA_ba_sa_we0;
wire   [31:0] grp_compute_fu_198_SA_ba_sa_d0;
wire   [1:0] grp_compute_fu_198_SA_pe_li_address0;
wire    grp_compute_fu_198_SA_pe_li_ce0;
wire    grp_compute_fu_198_SA_pe_li_we0;
wire   [31:0] grp_compute_fu_198_SA_pe_li_d0;
wire   [1:0] grp_compute_fu_198_SA_pe_tw_address0;
wire    grp_compute_fu_198_SA_pe_tw_ce0;
wire    grp_compute_fu_198_SA_pe_tw_we0;
wire   [31:0] grp_compute_fu_198_SA_pe_tw_d0;
wire   [1:0] grp_compute_fu_198_SA_pe_ri_address0;
wire    grp_compute_fu_198_SA_pe_ri_ce0;
wire    grp_compute_fu_198_SA_pe_ri_we0;
wire   [31:0] grp_compute_fu_198_SA_pe_ri_d0;
wire   [1:0] grp_compute_fu_198_SA_pe_bw_address0;
wire    grp_compute_fu_198_SA_pe_bw_ce0;
wire    grp_compute_fu_198_SA_pe_bw_we0;
wire   [31:0] grp_compute_fu_198_SA_pe_bw_d0;
wire   [1:0] grp_compute_fu_198_SA_pe_ba_address0;
wire    grp_compute_fu_198_SA_pe_ba_ce0;
wire    grp_compute_fu_198_SA_pe_ba_we0;
wire   [31:0] grp_compute_fu_198_SA_pe_ba_d0;
wire   [0:0] grp_compute_fu_198_SA_buffer_a_li_ready_address0;
wire    grp_compute_fu_198_SA_buffer_a_li_ready_ce0;
wire    grp_compute_fu_198_SA_buffer_a_li_ready_we0;
wire   [0:0] grp_compute_fu_198_SA_buffer_a_li_ready_d0;
wire   [0:0] grp_compute_fu_198_SA_buffer_a_li_value_address0;
wire    grp_compute_fu_198_SA_buffer_a_li_value_ce0;
wire   [0:0] grp_compute_fu_198_SA_buffer_b_tw_ready_address0;
wire    grp_compute_fu_198_SA_buffer_b_tw_ready_ce0;
wire    grp_compute_fu_198_SA_buffer_b_tw_ready_we0;
wire   [0:0] grp_compute_fu_198_SA_buffer_b_tw_ready_d0;
wire   [0:0] grp_compute_fu_198_SA_buffer_b_tw_value_address0;
wire    grp_compute_fu_198_SA_buffer_b_tw_value_ce0;
reg   [1:0] i_0_i_reg_176;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln99_fu_293_p2;
reg   [1:0] j_0_i_reg_187;
reg    grp_compute_fu_198_ap_start_reg;
wire  signed [63:0] sext_ln16_fu_238_p1;
wire  signed [63:0] sext_ln25_fu_258_p1;
wire   [0:0] icmp_ln23_fu_252_p2;
wire   [63:0] zext_ln97_fu_275_p1;
wire   [63:0] zext_ln100_1_fu_314_p1;
wire  signed [31:0] tmp_1_fu_222_p1;
wire   [30:0] tmp_1_fu_222_p4;
wire  signed [31:0] sext_ln16_fu_238_p0;
wire  signed [31:0] tmp_2_fu_243_p1;
wire   [30:0] tmp_2_fu_243_p4;
wire  signed [31:0] sext_ln25_fu_258_p0;
wire   [2:0] tmp_fu_281_p3;
wire   [3:0] zext_ln100_fu_305_p1;
wire   [3:0] add_ln100_fu_309_p2;
reg   [4:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 grp_compute_fu_198_ap_start_reg = 1'b0;
end

compute grp_compute_fu_198(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_compute_fu_198_ap_start),
    .ap_done(grp_compute_fu_198_ap_done),
    .ap_idle(grp_compute_fu_198_ap_idle),
    .ap_ready(grp_compute_fu_198_ap_ready),
    .SA_ba_sa_address0(grp_compute_fu_198_SA_ba_sa_address0),
    .SA_ba_sa_ce0(grp_compute_fu_198_SA_ba_sa_ce0),
    .SA_ba_sa_we0(grp_compute_fu_198_SA_ba_sa_we0),
    .SA_ba_sa_d0(grp_compute_fu_198_SA_ba_sa_d0),
    .SA_pe_li_address0(grp_compute_fu_198_SA_pe_li_address0),
    .SA_pe_li_ce0(grp_compute_fu_198_SA_pe_li_ce0),
    .SA_pe_li_we0(grp_compute_fu_198_SA_pe_li_we0),
    .SA_pe_li_d0(grp_compute_fu_198_SA_pe_li_d0),
    .SA_pe_li_q0(SA_pe_li_q0),
    .SA_pe_tw_address0(grp_compute_fu_198_SA_pe_tw_address0),
    .SA_pe_tw_ce0(grp_compute_fu_198_SA_pe_tw_ce0),
    .SA_pe_tw_we0(grp_compute_fu_198_SA_pe_tw_we0),
    .SA_pe_tw_d0(grp_compute_fu_198_SA_pe_tw_d0),
    .SA_pe_tw_q0(SA_pe_tw_q0),
    .SA_pe_ri_address0(grp_compute_fu_198_SA_pe_ri_address0),
    .SA_pe_ri_ce0(grp_compute_fu_198_SA_pe_ri_ce0),
    .SA_pe_ri_we0(grp_compute_fu_198_SA_pe_ri_we0),
    .SA_pe_ri_d0(grp_compute_fu_198_SA_pe_ri_d0),
    .SA_pe_ri_q0(SA_pe_ri_q0),
    .SA_pe_bw_address0(grp_compute_fu_198_SA_pe_bw_address0),
    .SA_pe_bw_ce0(grp_compute_fu_198_SA_pe_bw_ce0),
    .SA_pe_bw_we0(grp_compute_fu_198_SA_pe_bw_we0),
    .SA_pe_bw_d0(grp_compute_fu_198_SA_pe_bw_d0),
    .SA_pe_bw_q0(SA_pe_bw_q0),
    .SA_pe_ba_address0(grp_compute_fu_198_SA_pe_ba_address0),
    .SA_pe_ba_ce0(grp_compute_fu_198_SA_pe_ba_ce0),
    .SA_pe_ba_we0(grp_compute_fu_198_SA_pe_ba_we0),
    .SA_pe_ba_d0(grp_compute_fu_198_SA_pe_ba_d0),
    .SA_pe_ba_q0(SA_pe_ba_q0),
    .SA_buffer_a_li_ready_address0(grp_compute_fu_198_SA_buffer_a_li_ready_address0),
    .SA_buffer_a_li_ready_ce0(grp_compute_fu_198_SA_buffer_a_li_ready_ce0),
    .SA_buffer_a_li_ready_we0(grp_compute_fu_198_SA_buffer_a_li_ready_we0),
    .SA_buffer_a_li_ready_d0(grp_compute_fu_198_SA_buffer_a_li_ready_d0),
    .SA_buffer_a_li_ready_q0(SA_buffer_a_li_ready_q0),
    .SA_buffer_a_li_value_address0(grp_compute_fu_198_SA_buffer_a_li_value_address0),
    .SA_buffer_a_li_value_ce0(grp_compute_fu_198_SA_buffer_a_li_value_ce0),
    .SA_buffer_a_li_value_q0(SA_buffer_a_li_value_q0),
    .SA_buffer_b_tw_ready_address0(grp_compute_fu_198_SA_buffer_b_tw_ready_address0),
    .SA_buffer_b_tw_ready_ce0(grp_compute_fu_198_SA_buffer_b_tw_ready_ce0),
    .SA_buffer_b_tw_ready_we0(grp_compute_fu_198_SA_buffer_b_tw_ready_we0),
    .SA_buffer_b_tw_ready_d0(grp_compute_fu_198_SA_buffer_b_tw_ready_d0),
    .SA_buffer_b_tw_ready_q0(SA_buffer_b_tw_ready_q0),
    .SA_buffer_b_tw_value_address0(grp_compute_fu_198_SA_buffer_b_tw_value_address0),
    .SA_buffer_b_tw_value_ce0(grp_compute_fu_198_SA_buffer_b_tw_value_ce0),
    .SA_buffer_b_tw_value_q0(SA_buffer_b_tw_value_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_compute_fu_198_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_compute_fu_198_ap_start_reg <= 1'b1;
        end else if ((grp_compute_fu_198_ap_ready == 1'b1)) begin
            grp_compute_fu_198_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln99_fu_293_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        i_0_i_reg_176 <= i_9_reg_350;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i_0_i_reg_176 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln99_fu_293_p2 == 1'd0))) begin
        j_0_i_reg_187 <= j_7_fu_299_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln96_fu_263_p2 == 1'd0))) begin
        j_0_i_reg_187 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_9_reg_350 <= i_9_fu_269_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_compute_fu_198_ap_done == 1'b1))) begin
        icmp_ln14_reg_340 <= icmp_ln14_fu_232_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln96_fu_263_p2 == 1'd0))) begin
        zext_ln97_1_reg_355[2 : 1] <= zext_ln97_1_fu_289_p1[2 : 1];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        SA_buffer_a_li_ready_address0 = zext_ln97_fu_275_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        SA_buffer_a_li_ready_address0 = sext_ln16_fu_238_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        SA_buffer_a_li_ready_address0 = grp_compute_fu_198_SA_buffer_a_li_ready_address0;
    end else begin
        SA_buffer_a_li_ready_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4))) begin
        SA_buffer_a_li_ready_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        SA_buffer_a_li_ready_ce0 = grp_compute_fu_198_SA_buffer_a_li_ready_ce0;
    end else begin
        SA_buffer_a_li_ready_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        SA_buffer_a_li_ready_d0 = 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        SA_buffer_a_li_ready_d0 = 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        SA_buffer_a_li_ready_d0 = grp_compute_fu_198_SA_buffer_a_li_ready_d0;
    end else begin
        SA_buffer_a_li_ready_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state3) & (icmp_ln14_reg_340 == 1'd1)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln96_fu_263_p2 == 1'd0)))) begin
        SA_buffer_a_li_ready_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        SA_buffer_a_li_ready_we0 = grp_compute_fu_198_SA_buffer_a_li_ready_we0;
    end else begin
        SA_buffer_a_li_ready_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        SA_buffer_a_li_value_address0 = sext_ln16_fu_238_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        SA_buffer_a_li_value_address0 = grp_compute_fu_198_SA_buffer_a_li_value_address0;
    end else begin
        SA_buffer_a_li_value_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        SA_buffer_a_li_value_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        SA_buffer_a_li_value_ce0 = grp_compute_fu_198_SA_buffer_a_li_value_ce0;
    end else begin
        SA_buffer_a_li_value_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln14_reg_340 == 1'd1))) begin
        SA_buffer_a_li_value_we0 = 1'b1;
    end else begin
        SA_buffer_a_li_value_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        SA_buffer_b_tw_ready_address0 = zext_ln97_fu_275_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        SA_buffer_b_tw_ready_address0 = sext_ln25_fu_258_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        SA_buffer_b_tw_ready_address0 = grp_compute_fu_198_SA_buffer_b_tw_ready_address0;
    end else begin
        SA_buffer_b_tw_ready_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state4))) begin
        SA_buffer_b_tw_ready_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        SA_buffer_b_tw_ready_ce0 = grp_compute_fu_198_SA_buffer_b_tw_ready_ce0;
    end else begin
        SA_buffer_b_tw_ready_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        SA_buffer_b_tw_ready_d0 = 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        SA_buffer_b_tw_ready_d0 = 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        SA_buffer_b_tw_ready_d0 = grp_compute_fu_198_SA_buffer_b_tw_ready_d0;
    end else begin
        SA_buffer_b_tw_ready_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln23_fu_252_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln96_fu_263_p2 == 1'd0)))) begin
        SA_buffer_b_tw_ready_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        SA_buffer_b_tw_ready_we0 = grp_compute_fu_198_SA_buffer_b_tw_ready_we0;
    end else begin
        SA_buffer_b_tw_ready_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        SA_buffer_b_tw_value_address0 = sext_ln25_fu_258_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        SA_buffer_b_tw_value_address0 = grp_compute_fu_198_SA_buffer_b_tw_value_address0;
    end else begin
        SA_buffer_b_tw_value_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        SA_buffer_b_tw_value_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        SA_buffer_b_tw_value_ce0 = grp_compute_fu_198_SA_buffer_b_tw_value_ce0;
    end else begin
        SA_buffer_b_tw_value_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_252_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        SA_buffer_b_tw_value_we0 = 1'b1;
    end else begin
        SA_buffer_b_tw_value_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        SA_pe_ba_address0 = zext_ln100_1_fu_314_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        SA_pe_ba_address0 = grp_compute_fu_198_SA_pe_ba_address0;
    end else begin
        SA_pe_ba_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        SA_pe_ba_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        SA_pe_ba_ce0 = grp_compute_fu_198_SA_pe_ba_ce0;
    end else begin
        SA_pe_ba_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        SA_pe_ba_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        SA_pe_ba_d0 = grp_compute_fu_198_SA_pe_ba_d0;
    end else begin
        SA_pe_ba_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln99_fu_293_p2 == 1'd0))) begin
        SA_pe_ba_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        SA_pe_ba_we0 = grp_compute_fu_198_SA_pe_ba_we0;
    end else begin
        SA_pe_ba_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln96_fu_263_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln96_fu_263_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_compute_fu_198_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln96_fu_263_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln99_fu_293_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign SA_ba_sa_address0 = grp_compute_fu_198_SA_ba_sa_address0;

assign SA_ba_sa_ce0 = grp_compute_fu_198_SA_ba_sa_ce0;

assign SA_ba_sa_d0 = grp_compute_fu_198_SA_ba_sa_d0;

assign SA_ba_sa_we0 = grp_compute_fu_198_SA_ba_sa_we0;

assign SA_buffer_a_li_value_d0 = value_a;

assign SA_buffer_b_tw_value_d0 = value_b;

assign SA_pe_bw_address0 = grp_compute_fu_198_SA_pe_bw_address0;

assign SA_pe_bw_ce0 = grp_compute_fu_198_SA_pe_bw_ce0;

assign SA_pe_bw_d0 = grp_compute_fu_198_SA_pe_bw_d0;

assign SA_pe_bw_we0 = grp_compute_fu_198_SA_pe_bw_we0;

assign SA_pe_li_address0 = grp_compute_fu_198_SA_pe_li_address0;

assign SA_pe_li_ce0 = grp_compute_fu_198_SA_pe_li_ce0;

assign SA_pe_li_d0 = grp_compute_fu_198_SA_pe_li_d0;

assign SA_pe_li_we0 = grp_compute_fu_198_SA_pe_li_we0;

assign SA_pe_ri_address0 = grp_compute_fu_198_SA_pe_ri_address0;

assign SA_pe_ri_ce0 = grp_compute_fu_198_SA_pe_ri_ce0;

assign SA_pe_ri_d0 = grp_compute_fu_198_SA_pe_ri_d0;

assign SA_pe_ri_we0 = grp_compute_fu_198_SA_pe_ri_we0;

assign SA_pe_tw_address0 = grp_compute_fu_198_SA_pe_tw_address0;

assign SA_pe_tw_ce0 = grp_compute_fu_198_SA_pe_tw_ce0;

assign SA_pe_tw_d0 = grp_compute_fu_198_SA_pe_tw_d0;

assign SA_pe_tw_we0 = grp_compute_fu_198_SA_pe_tw_we0;

assign add_ln100_fu_309_p2 = (zext_ln97_1_reg_355 + zext_ln100_fu_305_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign grp_compute_fu_198_ap_start = grp_compute_fu_198_ap_start_reg;

assign i_9_fu_269_p2 = (i_0_i_reg_176 + 2'd1);

assign icmp_ln14_fu_232_p2 = (($signed(tmp_1_fu_222_p4) < $signed(31'd1)) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_252_p2 = (($signed(tmp_2_fu_243_p4) < $signed(31'd1)) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_263_p2 = ((i_0_i_reg_176 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_293_p2 = ((j_0_i_reg_187 == 2'd2) ? 1'b1 : 1'b0);

assign j_7_fu_299_p2 = (j_0_i_reg_187 + 2'd1);

assign sext_ln16_fu_238_p0 = i;

assign sext_ln16_fu_238_p1 = sext_ln16_fu_238_p0;

assign sext_ln25_fu_258_p0 = j;

assign sext_ln25_fu_258_p1 = sext_ln25_fu_258_p0;

assign tmp_1_fu_222_p1 = i;

assign tmp_1_fu_222_p4 = {{tmp_1_fu_222_p1[31:1]}};

assign tmp_2_fu_243_p1 = j;

assign tmp_2_fu_243_p4 = {{tmp_2_fu_243_p1[31:1]}};

assign tmp_fu_281_p3 = {{i_0_i_reg_176}, {1'd0}};

assign zext_ln100_1_fu_314_p1 = add_ln100_fu_309_p2;

assign zext_ln100_fu_305_p1 = j_0_i_reg_187;

assign zext_ln97_1_fu_289_p1 = tmp_fu_281_p3;

assign zext_ln97_fu_275_p1 = i_0_i_reg_176;

always @ (posedge ap_clk) begin
    zext_ln97_1_reg_355[0] <= 1'b0;
    zext_ln97_1_reg_355[3] <= 1'b0;
end

endmodule //SA_top
