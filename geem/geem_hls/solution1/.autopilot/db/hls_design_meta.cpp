#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("sa_pe_li_address0", 2, hls_out, 0, "ap_memory", "mem_address", 1),
	Port_Property("sa_pe_li_ce0", 1, hls_out, 0, "ap_memory", "mem_ce", 1),
	Port_Property("sa_pe_li_we0", 1, hls_out, 0, "ap_memory", "mem_we", 1),
	Port_Property("sa_pe_li_d0", 32, hls_out, 0, "ap_memory", "mem_din", 1),
	Port_Property("sa_pe_li_q0", 32, hls_in, 0, "ap_memory", "mem_dout", 1),
	Port_Property("sa_pe_tw_address0", 2, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("sa_pe_tw_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("sa_pe_tw_we0", 1, hls_out, 1, "ap_memory", "mem_we", 1),
	Port_Property("sa_pe_tw_d0", 32, hls_out, 1, "ap_memory", "mem_din", 1),
	Port_Property("sa_pe_tw_q0", 32, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("sa_pe_ri_address0", 2, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("sa_pe_ri_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("sa_pe_ri_we0", 1, hls_out, 2, "ap_memory", "mem_we", 1),
	Port_Property("sa_pe_ri_d0", 32, hls_out, 2, "ap_memory", "mem_din", 1),
	Port_Property("sa_pe_ri_q0", 32, hls_in, 2, "ap_memory", "mem_dout", 1),
	Port_Property("sa_pe_bw_address0", 2, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("sa_pe_bw_ce0", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("sa_pe_bw_we0", 1, hls_out, 3, "ap_memory", "mem_we", 1),
	Port_Property("sa_pe_bw_d0", 32, hls_out, 3, "ap_memory", "mem_din", 1),
	Port_Property("sa_pe_bw_q0", 32, hls_in, 3, "ap_memory", "mem_dout", 1),
	Port_Property("sa_pe_ba_address0", 2, hls_out, 4, "ap_memory", "mem_address", 1),
	Port_Property("sa_pe_ba_ce0", 1, hls_out, 4, "ap_memory", "mem_ce", 1),
	Port_Property("sa_pe_ba_we0", 1, hls_out, 4, "ap_memory", "mem_we", 1),
	Port_Property("sa_pe_ba_d0", 32, hls_out, 4, "ap_memory", "mem_din", 1),
	Port_Property("sa_pe_ba_q0", 32, hls_in, 4, "ap_memory", "mem_dout", 1),
	Port_Property("sa_buffer_a_li_ready_address0", 1, hls_out, 5, "ap_memory", "mem_address", 1),
	Port_Property("sa_buffer_a_li_ready_ce0", 1, hls_out, 5, "ap_memory", "mem_ce", 1),
	Port_Property("sa_buffer_a_li_ready_we0", 1, hls_out, 5, "ap_memory", "mem_we", 1),
	Port_Property("sa_buffer_a_li_ready_d0", 1, hls_out, 5, "ap_memory", "mem_din", 1),
	Port_Property("sa_buffer_a_li_ready_q0", 1, hls_in, 5, "ap_memory", "mem_dout", 1),
	Port_Property("sa_buffer_a_li_value_address0", 1, hls_out, 6, "ap_memory", "mem_address", 1),
	Port_Property("sa_buffer_a_li_value_ce0", 1, hls_out, 6, "ap_memory", "mem_ce", 1),
	Port_Property("sa_buffer_a_li_value_q0", 32, hls_in, 6, "ap_memory", "mem_dout", 1),
	Port_Property("sa_buffer_b_tw_ready_address0", 1, hls_out, 7, "ap_memory", "mem_address", 1),
	Port_Property("sa_buffer_b_tw_ready_ce0", 1, hls_out, 7, "ap_memory", "mem_ce", 1),
	Port_Property("sa_buffer_b_tw_ready_we0", 1, hls_out, 7, "ap_memory", "mem_we", 1),
	Port_Property("sa_buffer_b_tw_ready_d0", 1, hls_out, 7, "ap_memory", "mem_din", 1),
	Port_Property("sa_buffer_b_tw_ready_q0", 1, hls_in, 7, "ap_memory", "mem_dout", 1),
	Port_Property("sa_buffer_b_tw_value_address0", 1, hls_out, 8, "ap_memory", "mem_address", 1),
	Port_Property("sa_buffer_b_tw_value_ce0", 1, hls_out, 8, "ap_memory", "mem_ce", 1),
	Port_Property("sa_buffer_b_tw_value_q0", 32, hls_in, 8, "ap_memory", "mem_dout", 1),
	Port_Property("sa_ba_sa_address0", 2, hls_out, 9, "ap_memory", "mem_address", 1),
	Port_Property("sa_ba_sa_ce0", 1, hls_out, 9, "ap_memory", "mem_ce", 1),
	Port_Property("sa_ba_sa_we0", 1, hls_out, 9, "ap_memory", "mem_we", 1),
	Port_Property("sa_ba_sa_d0", 32, hls_out, 9, "ap_memory", "mem_din", 1),
	Port_Property("sa_ba_sa_q0", 32, hls_in, 9, "ap_memory", "mem_dout", 1),
	Port_Property("sa_ba_sa_address1", 2, hls_out, 9, "ap_memory", "MemPortADDR2", 1),
	Port_Property("sa_ba_sa_ce1", 1, hls_out, 9, "ap_memory", "MemPortCE2", 1),
	Port_Property("sa_ba_sa_we1", 1, hls_out, 9, "ap_memory", "MemPortWE2", 1),
	Port_Property("sa_ba_sa_d1", 32, hls_out, 9, "ap_memory", "MemPortDIN2", 1),
	Port_Property("sa_ba_sa_q1", 32, hls_in, 9, "ap_memory", "MemPortDOUT2", 1),
};
const char* HLS_Design_Meta::dut_name = "sa_compute";
