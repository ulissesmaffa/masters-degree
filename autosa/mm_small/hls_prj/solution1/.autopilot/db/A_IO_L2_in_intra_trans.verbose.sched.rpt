

================================================================
== Vivado HLS Report for 'A_IO_L2_in_intra_trans'
================================================================
* Date:           Sat Sep 14 23:31:18 2024

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        hls_prj
* Solution:       solution1
* Product family: virtexuplus
* Target device:  xcu200-fsgd2104-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 5.00 ns | 3.032 ns |   0.62 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        1|      514| 5.000 ns | 2.570 us |    1|  514|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |      512|      512|         2|          1|          1|   512|    yes   |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 4 2 
2 --> 4 3 
3 --> 2 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.60>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %fifo_A_local_out_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 5 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore([8 x i512]* %local_A_V, [1 x i8]* @p_str, [12 x i8]* @p_str9, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 6 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecMemCore(i64* %fifo_A_local_out_V_V, [1 x i8]* @p_str, [9 x i8]* @p_str40, [1 x i8]* @p_str, i32 -1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 7 'specmemcore' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%intra_trans_en_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %intra_trans_en)" [src/kernel_kernel.cpp:48]   --->   Operation 8 'read' 'intra_trans_en_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "br i1 %intra_trans_en_read, label %.preheader.preheader, label %.loopexit" [src/kernel_kernel.cpp:56]   --->   Operation 9 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.60ns)   --->   "br label %.preheader" [src/kernel_kernel.cpp:62]   --->   Operation 10 'br' <Predicate = (intra_trans_en_read)> <Delay = 0.60>

State 2 <SV = 1> <Delay = 2.50>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%indvar_flatten11 = phi i10 [ %add_ln62, %hls_label_2 ], [ 0, %.preheader.preheader ]" [src/kernel_kernel.cpp:62]   --->   Operation 11 'phi' 'indvar_flatten11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%p_088_0 = phi i4 [ %select_ln1371, %hls_label_2 ], [ 0, %.preheader.preheader ]" [src/kernel_kernel.cpp:72]   --->   Operation 12 'phi' 'p_088_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i8 [ %select_ln64, %hls_label_2 ], [ 0, %.preheader.preheader ]" [src/kernel_kernel.cpp:64]   --->   Operation 13 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%p_066_0 = phi i4 [ %c7_V, %hls_label_2 ], [ 0, %.preheader.preheader ]"   --->   Operation 14 'phi' 'p_066_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.60ns)   --->   "%icmp_ln62 = icmp eq i10 %indvar_flatten11, -512" [src/kernel_kernel.cpp:62]   --->   Operation 15 'icmp' 'icmp_ln62' <Predicate = true> <Delay = 0.60> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.54ns)   --->   "%add_ln62 = add i10 %indvar_flatten11, 1" [src/kernel_kernel.cpp:62]   --->   Operation 16 'add' 'add_ln62' <Predicate = true> <Delay = 0.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "br i1 %icmp_ln62, label %.loopexit.loopexit, label %hls_label_2" [src/kernel_kernel.cpp:62]   --->   Operation 17 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.33ns)   --->   "%c5_V = add i4 1, %p_088_0" [src/kernel_kernel.cpp:62]   --->   Operation 18 'add' 'c5_V' <Predicate = (!icmp_ln62)> <Delay = 0.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.58ns)   --->   "%icmp_ln64 = icmp eq i8 %indvar_flatten, 64" [src/kernel_kernel.cpp:64]   --->   Operation 19 'icmp' 'icmp_ln64' <Predicate = (!icmp_ln62)> <Delay = 0.58> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (0.35ns)   --->   "%select_ln1371 = select i1 %icmp_ln64, i4 %c5_V, i4 %p_088_0" [src/kernel_kernel.cpp:72]   --->   Operation 20 'select' 'select_ln1371' <Predicate = (!icmp_ln62)> <Delay = 0.35> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%tmp_10 = call i1 @_ssdm_op_BitSelect.i1.i4.i32(i4 %select_ln1371, i32 3)" [src/kernel_kernel.cpp:72]   --->   Operation 21 'bitselect' 'tmp_10' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln1371 = zext i1 %tmp_10 to i5" [src/kernel_kernel.cpp:72]   --->   Operation 22 'zext' 'zext_ln1371' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%trunc_ln1371 = trunc i4 %select_ln1371 to i3" [src/kernel_kernel.cpp:72]   --->   Operation 23 'trunc' 'trunc_ln1371' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node select_ln66)   --->   "%xor_ln1371 = xor i1 %icmp_ln64, true" [src/kernel_kernel.cpp:72]   --->   Operation 24 'xor' 'xor_ln1371' <Predicate = (!icmp_ln62)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.65ns)   --->   "%icmp_ln66 = icmp eq i4 %p_066_0, -8" [src/kernel_kernel.cpp:66]   --->   Operation 25 'icmp' 'icmp_ln66' <Predicate = (!icmp_ln62)> <Delay = 0.65> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.65> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node select_ln66)   --->   "%and_ln1371 = and i1 %icmp_ln66, %xor_ln1371" [src/kernel_kernel.cpp:72]   --->   Operation 26 'and' 'and_ln1371' <Predicate = (!icmp_ln62)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node select_ln66)   --->   "%or_ln66 = or i1 %and_ln1371, %icmp_ln64" [src/kernel_kernel.cpp:66]   --->   Operation 27 'or' 'or_ln66' <Predicate = (!icmp_ln62)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.35ns) (out node of the LUT)   --->   "%select_ln66 = select i1 %or_ln66, i4 0, i4 %p_066_0" [src/kernel_kernel.cpp:66]   --->   Operation 28 'select' 'select_ln66' <Predicate = (!icmp_ln62)> <Delay = 0.35> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln321 = zext i4 %select_ln66 to i5" [src/kernel_kernel.cpp:72]   --->   Operation 29 'zext' 'zext_ln321' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.33ns)   --->   "%add_ln321 = add i5 %zext_ln321, %zext_ln1371" [src/kernel_kernel.cpp:72]   --->   Operation 30 'add' 'add_ln321' <Predicate = (!icmp_ln62)> <Delay = 0.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln321_7 = zext i5 %add_ln321 to i64" [src/kernel_kernel.cpp:72]   --->   Operation 31 'zext' 'zext_ln321_7' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%local_A_V_addr = getelementptr [8 x i512]* %local_A_V, i64 0, i64 %zext_ln321_7" [src/kernel_kernel.cpp:72]   --->   Operation 32 'getelementptr' 'local_A_V_addr' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_2 : Operation 33 [2/2] (1.15ns)   --->   "%in_data_V = load i512* %local_A_V_addr, align 64" [src/kernel_kernel.cpp:72]   --->   Operation 33 'load' 'in_data_V' <Predicate = (!icmp_ln62)> <Delay = 1.15> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 512> <Depth = 8> <RAM>
ST_2 : Operation 34 [1/1] (0.33ns)   --->   "%c7_V = add i4 1, %select_ln66" [src/kernel_kernel.cpp:66]   --->   Operation 34 'add' 'c7_V' <Predicate = (!icmp_ln62)> <Delay = 0.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.48ns)   --->   "%add_ln64 = add i8 1, %indvar_flatten" [src/kernel_kernel.cpp:64]   --->   Operation 35 'add' 'add_ln64' <Predicate = (!icmp_ln62)> <Delay = 0.48> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (0.30ns)   --->   "%select_ln64 = select i1 %icmp_ln64, i8 1, i8 %add_ln64" [src/kernel_kernel.cpp:64]   --->   Operation 36 'select' 'select_ln64' <Predicate = (!icmp_ln62)> <Delay = 0.30> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 3 <SV = 2> <Delay = 3.03>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 512, i64 512, i64 512)"   --->   Operation 37 'speclooptripcount' 'empty' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4)" [src/kernel_kernel.cpp:66]   --->   Operation 38 'specregionbegin' 'tmp' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [src/kernel_kernel.cpp:67]   --->   Operation 39 'specpipeline' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 40 [1/2] (1.15ns)   --->   "%in_data_V = load i512* %local_A_V_addr, align 64" [src/kernel_kernel.cpp:72]   --->   Operation 40 'load' 'in_data_V' <Predicate = (!icmp_ln62)> <Delay = 1.15> <Core = "RAM_2P_BRAM">   --->   Core 42 'RAM_2P_BRAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 512> <Depth = 8> <RAM>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%data_split_0_V = trunc i512 %in_data_V to i64" [src/kernel_kernel.cpp:75]   --->   Operation 41 'trunc' 'data_split_0_V' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%data_split_1_V = call i64 @_ssdm_op_PartSelect.i64.i512.i32.i32(i512 %in_data_V, i32 64, i32 127)" [src/kernel_kernel.cpp:75]   --->   Operation 42 'partselect' 'data_split_1_V' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%data_split_2_V = call i64 @_ssdm_op_PartSelect.i64.i512.i32.i32(i512 %in_data_V, i32 128, i32 191)" [src/kernel_kernel.cpp:75]   --->   Operation 43 'partselect' 'data_split_2_V' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%data_split_3_V = call i64 @_ssdm_op_PartSelect.i64.i512.i32.i32(i512 %in_data_V, i32 192, i32 255)" [src/kernel_kernel.cpp:75]   --->   Operation 44 'partselect' 'data_split_3_V' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%data_split_4_V = call i64 @_ssdm_op_PartSelect.i64.i512.i32.i32(i512 %in_data_V, i32 256, i32 319)" [src/kernel_kernel.cpp:75]   --->   Operation 45 'partselect' 'data_split_4_V' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%data_split_5_V = call i64 @_ssdm_op_PartSelect.i64.i512.i32.i32(i512 %in_data_V, i32 320, i32 383)" [src/kernel_kernel.cpp:75]   --->   Operation 46 'partselect' 'data_split_5_V' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%data_split_6_V = call i64 @_ssdm_op_PartSelect.i64.i512.i32.i32(i512 %in_data_V, i32 384, i32 447)" [src/kernel_kernel.cpp:75]   --->   Operation 47 'partselect' 'data_split_6_V' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%data_split_7_V = call i64 @_ssdm_op_PartSelect.i64.i512.i32.i32(i512 %in_data_V, i32 448, i32 511)" [src/kernel_kernel.cpp:75]   --->   Operation 48 'partselect' 'data_split_7_V' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.41ns)   --->   "%out_data_V = call i64 @_ssdm_op_Mux.ap_auto.8i64.i3(i64 %data_split_0_V, i64 %data_split_1_V, i64 %data_split_2_V, i64 %data_split_3_V, i64 %data_split_4_V, i64 %data_split_5_V, i64 %data_split_6_V, i64 %data_split_7_V, i3 %trunc_ln1371)" [src/kernel_kernel.cpp:79]   --->   Operation 49 'mux' 'out_data_V' <Predicate = (!icmp_ln62)> <Delay = 0.41> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (1.45ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i64P(i64* %fifo_A_local_out_V_V, i64 %out_data_V)" [src/kernel_kernel.cpp:80]   --->   Operation 50 'write' <Predicate = (!icmp_ln62)> <Delay = 1.45> <Core = "FIFO_SRL">   --->   Core 36 'FIFO_SRL' <Latency = 0> <II = 1> <Delay = 1.45> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 64> <Depth = 0> <FIFO>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%empty_123 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp)" [src/kernel_kernel.cpp:82]   --->   Operation 51 'specregionend' 'empty_123' <Predicate = (!icmp_ln62)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "br label %.preheader" [src/kernel_kernel.cpp:66]   --->   Operation 52 'br' <Predicate = (!icmp_ln62)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 53 'br' <Predicate = (intra_trans_en_read)> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "ret void" [src/kernel_kernel.cpp:85]   --->   Operation 54 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 0.603ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten11', src/kernel_kernel.cpp:62) with incoming values : ('add_ln62', src/kernel_kernel.cpp:62) [12]  (0.603 ns)

 <State 2>: 2.5ns
The critical path consists of the following:
	'phi' operation ('c7.V') with incoming values : ('c7.V', src/kernel_kernel.cpp:66) [15]  (0 ns)
	'icmp' operation ('icmp_ln66', src/kernel_kernel.cpp:66) [28]  (0.656 ns)
	'and' operation ('and_ln1371', src/kernel_kernel.cpp:72) [29]  (0 ns)
	'or' operation ('or_ln66', src/kernel_kernel.cpp:66) [30]  (0 ns)
	'select' operation ('select_ln66', src/kernel_kernel.cpp:66) [31]  (0.351 ns)
	'add' operation ('add_ln321', src/kernel_kernel.cpp:72) [35]  (0.336 ns)
	'getelementptr' operation ('local_A_V_addr', src/kernel_kernel.cpp:72) [37]  (0 ns)
	'load' operation ('in_data.V', src/kernel_kernel.cpp:72) on array 'local_A_V' [38]  (1.16 ns)

 <State 3>: 3.03ns
The critical path consists of the following:
	'load' operation ('in_data.V', src/kernel_kernel.cpp:72) on array 'local_A_V' [38]  (1.16 ns)
	'mux' operation ('out_data.V', src/kernel_kernel.cpp:79) [47]  (0.416 ns)
	fifo write on port 'fifo_A_local_out_V_V' (src/kernel_kernel.cpp:80) [48]  (1.46 ns)

 <State 4>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
