-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity C_drain_IO_L2_out is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    fifo_C_drain_in_V_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    fifo_C_drain_in_V_V_empty_n : IN STD_LOGIC;
    fifo_C_drain_in_V_V_read : OUT STD_LOGIC;
    fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
    fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
    fifo_C_drain_local_in_V_V_dout : IN STD_LOGIC_VECTOR (127 downto 0);
    fifo_C_drain_local_in_V_V_empty_n : IN STD_LOGIC;
    fifo_C_drain_local_in_V_V_read : OUT STD_LOGIC );
end;


architecture behav of C_drain_IO_L2_out is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal fifo_C_drain_in_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln1067_reg_262 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_C_drain_out_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln1050_reg_281 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_C_drain_local_in_V_V_blk_n : STD_LOGIC;
    signal indvar_flatten30_reg_119 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten11_reg_130 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1043_fu_141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln1043_fu_147_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln1043_reg_243 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1044_fu_153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1044_reg_248 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1047_fu_183_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln1047_reg_253 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln879_fu_191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1067_fu_197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln1067_fu_203_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal c3_V_fu_209_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal select_ln1044_fu_220_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln1050_fu_227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal add_ln1050_fu_233_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state6 : STD_LOGIC;
    signal indvar_flatten49_reg_85 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal indvar_flatten37_reg_96 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_026_0_reg_108 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal icmp_ln1047_fu_165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1044_fu_159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1044_fu_171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1047_fu_177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1044_fu_214_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln1043_fu_141_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln1043_fu_141_p2 = ap_const_lv1_0) and (icmp_ln879_fu_191_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((icmp_ln1043_fu_141_p2 = ap_const_lv1_0) and (icmp_ln879_fu_191_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln1043_fu_141_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln879_fu_191_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state6);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((icmp_ln1043_fu_141_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln879_fu_191_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten11_reg_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1043_fu_141_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln879_fu_191_p2 = ap_const_lv1_1))) then 
                indvar_flatten11_reg_130 <= ap_const_lv6_0;
            elsif (((icmp_ln1050_fu_227_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                indvar_flatten11_reg_130 <= add_ln1050_fu_233_p2;
            end if; 
        end if;
    end process;

    indvar_flatten30_reg_119_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1043_fu_141_p2 = ap_const_lv1_0) and (icmp_ln879_fu_191_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten30_reg_119 <= ap_const_lv6_0;
            elsif (((icmp_ln1067_fu_197_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten30_reg_119 <= add_ln1067_fu_203_p2;
            end if; 
        end if;
    end process;

    indvar_flatten37_reg_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                indvar_flatten37_reg_96 <= select_ln1044_fu_220_p3;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten37_reg_96 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten49_reg_85_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                indvar_flatten49_reg_85 <= add_ln1043_reg_243;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten49_reg_85 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    p_026_0_reg_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                p_026_0_reg_108 <= c3_V_fu_209_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_026_0_reg_108 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln1043_reg_243 <= add_ln1043_fu_147_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1043_fu_141_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                icmp_ln1044_reg_248 <= icmp_ln1044_fu_153_p2;
                select_ln1047_reg_253 <= select_ln1047_fu_183_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln1050_reg_281 <= icmp_ln1050_fu_227_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln1067_reg_262 <= icmp_ln1067_fu_197_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln1043_fu_141_p2, ap_CS_fsm_state2, icmp_ln879_fu_191_p2, icmp_ln1067_fu_197_p2, ap_enable_reg_pp0_iter0, icmp_ln1050_fu_227_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln1043_fu_141_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((icmp_ln1043_fu_141_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln879_fu_191_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln1067_fu_197_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln1067_fu_197_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln1050_fu_227_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln1050_fu_227_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln1043_fu_147_p2 <= std_logic_vector(unsigned(indvar_flatten49_reg_85) + unsigned(ap_const_lv6_1));
    add_ln1044_fu_214_p2 <= std_logic_vector(unsigned(indvar_flatten37_reg_96) + unsigned(ap_const_lv5_1));
    add_ln1050_fu_233_p2 <= std_logic_vector(unsigned(indvar_flatten11_reg_130) + unsigned(ap_const_lv6_1));
    add_ln1067_fu_203_p2 <= std_logic_vector(unsigned(indvar_flatten30_reg_119) + unsigned(ap_const_lv6_1));
    and_ln1044_fu_171_p2 <= (xor_ln1044_fu_159_p2 and icmp_ln1047_fu_165_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(fifo_C_drain_in_V_V_empty_n, fifo_C_drain_out_V_V_full_n, ap_enable_reg_pp0_iter1, icmp_ln1067_reg_262)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln1067_reg_262 = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0)) or ((icmp_ln1067_reg_262 = ap_const_lv1_0) and (fifo_C_drain_in_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(fifo_C_drain_in_V_V_empty_n, fifo_C_drain_out_V_V_full_n, ap_enable_reg_pp0_iter1, icmp_ln1067_reg_262)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln1067_reg_262 = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0)) or ((icmp_ln1067_reg_262 = ap_const_lv1_0) and (fifo_C_drain_in_V_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(fifo_C_drain_in_V_V_empty_n, fifo_C_drain_out_V_V_full_n, ap_enable_reg_pp0_iter1, icmp_ln1067_reg_262)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln1067_reg_262 = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0)) or ((icmp_ln1067_reg_262 = ap_const_lv1_0) and (fifo_C_drain_in_V_V_empty_n = ap_const_logic_0))));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(fifo_C_drain_out_V_V_full_n, fifo_C_drain_local_in_V_V_empty_n, ap_enable_reg_pp1_iter1, icmp_ln1050_reg_281)
    begin
                ap_block_pp1_stage0_01001 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((icmp_ln1050_reg_281 = ap_const_lv1_0) and (fifo_C_drain_local_in_V_V_empty_n = ap_const_logic_0)) or ((icmp_ln1050_reg_281 = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0))));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(fifo_C_drain_out_V_V_full_n, fifo_C_drain_local_in_V_V_empty_n, ap_enable_reg_pp1_iter1, icmp_ln1050_reg_281)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((icmp_ln1050_reg_281 = ap_const_lv1_0) and (fifo_C_drain_local_in_V_V_empty_n = ap_const_logic_0)) or ((icmp_ln1050_reg_281 = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0))));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(fifo_C_drain_out_V_V_full_n, fifo_C_drain_local_in_V_V_empty_n, ap_enable_reg_pp1_iter1, icmp_ln1050_reg_281)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (((icmp_ln1050_reg_281 = ap_const_lv1_0) and (fifo_C_drain_local_in_V_V_empty_n = ap_const_logic_0)) or ((icmp_ln1050_reg_281 = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(fifo_C_drain_in_V_V_empty_n, fifo_C_drain_out_V_V_full_n, icmp_ln1067_reg_262)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((icmp_ln1067_reg_262 = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0)) or ((icmp_ln1067_reg_262 = ap_const_lv1_0) and (fifo_C_drain_in_V_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp1_stage0_iter1_assign_proc : process(fifo_C_drain_out_V_V_full_n, fifo_C_drain_local_in_V_V_empty_n, icmp_ln1050_reg_281)
    begin
                ap_block_state7_pp1_stage0_iter1 <= (((icmp_ln1050_reg_281 = ap_const_lv1_0) and (fifo_C_drain_local_in_V_V_empty_n = ap_const_logic_0)) or ((icmp_ln1050_reg_281 = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0)));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln1067_fu_197_p2)
    begin
        if ((icmp_ln1067_fu_197_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state6_assign_proc : process(icmp_ln1050_fu_227_p2)
    begin
        if ((icmp_ln1050_fu_227_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln1043_fu_141_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln1043_fu_141_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    c3_V_fu_209_p2 <= std_logic_vector(unsigned(select_ln1047_reg_253) + unsigned(ap_const_lv2_1));

    fifo_C_drain_in_V_V_blk_n_assign_proc : process(fifo_C_drain_in_V_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1067_reg_262)
    begin
        if (((icmp_ln1067_reg_262 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_C_drain_in_V_V_blk_n <= fifo_C_drain_in_V_V_empty_n;
        else 
            fifo_C_drain_in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_in_V_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1067_reg_262, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln1067_reg_262 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_C_drain_in_V_V_read <= ap_const_logic_1;
        else 
            fifo_C_drain_in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_local_in_V_V_blk_n_assign_proc : process(fifo_C_drain_local_in_V_V_empty_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln1050_reg_281)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln1050_reg_281 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            fifo_C_drain_local_in_V_V_blk_n <= fifo_C_drain_local_in_V_V_empty_n;
        else 
            fifo_C_drain_local_in_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_local_in_V_V_read_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln1050_reg_281, ap_block_pp1_stage0_11001)
    begin
        if (((icmp_ln1050_reg_281 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            fifo_C_drain_local_in_V_V_read <= ap_const_logic_1;
        else 
            fifo_C_drain_local_in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_out_V_V_blk_n_assign_proc : process(fifo_C_drain_out_V_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln1067_reg_262, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln1050_reg_281)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln1050_reg_281 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln1067_reg_262 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            fifo_C_drain_out_V_V_blk_n <= fifo_C_drain_out_V_V_full_n;
        else 
            fifo_C_drain_out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_out_V_V_din_assign_proc : process(fifo_C_drain_in_V_V_dout, fifo_C_drain_local_in_V_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1067_reg_262, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln1050_reg_281, ap_block_pp0_stage0_01001, ap_block_pp1_stage0_01001)
    begin
        if (((icmp_ln1050_reg_281 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            fifo_C_drain_out_V_V_din <= fifo_C_drain_local_in_V_V_dout;
        elsif (((icmp_ln1067_reg_262 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_C_drain_out_V_V_din <= fifo_C_drain_in_V_V_dout;
        else 
            fifo_C_drain_out_V_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    fifo_C_drain_out_V_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln1067_reg_262, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln1050_reg_281, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001)
    begin
        if ((((icmp_ln1050_reg_281 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln1067_reg_262 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            fifo_C_drain_out_V_V_write <= ap_const_logic_1;
        else 
            fifo_C_drain_out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1043_fu_141_p2 <= "1" when (indvar_flatten49_reg_85 = ap_const_lv6_20) else "0";
    icmp_ln1044_fu_153_p2 <= "1" when (indvar_flatten37_reg_96 = ap_const_lv5_8) else "0";
    icmp_ln1047_fu_165_p2 <= "1" when (p_026_0_reg_108 = ap_const_lv2_2) else "0";
    icmp_ln1050_fu_227_p2 <= "1" when (indvar_flatten11_reg_130 = ap_const_lv6_20) else "0";
    icmp_ln1067_fu_197_p2 <= "1" when (indvar_flatten30_reg_119 = ap_const_lv6_20) else "0";
    icmp_ln879_fu_191_p2 <= "1" when (select_ln1047_fu_183_p3 = ap_const_lv2_0) else "0";

    internal_ap_ready_assign_proc : process(icmp_ln1043_fu_141_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln1043_fu_141_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    or_ln1047_fu_177_p2 <= (icmp_ln1044_fu_153_p2 or and_ln1044_fu_171_p2);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    select_ln1044_fu_220_p3 <= 
        ap_const_lv5_1 when (icmp_ln1044_reg_248(0) = '1') else 
        add_ln1044_fu_214_p2;
    select_ln1047_fu_183_p3 <= 
        ap_const_lv2_0 when (or_ln1047_fu_177_p2(0) = '1') else 
        p_026_0_reg_108;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln1044_fu_159_p2 <= (icmp_ln1044_fu_153_p2 xor ap_const_lv1_1);
end behav;
