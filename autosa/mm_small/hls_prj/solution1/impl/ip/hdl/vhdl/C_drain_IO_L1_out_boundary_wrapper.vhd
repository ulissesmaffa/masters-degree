-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity C_drain_IO_L1_out_boundary_wrapper is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fifo_C_drain_out_V_V_din : OUT STD_LOGIC_VECTOR (127 downto 0);
    fifo_C_drain_out_V_V_full_n : IN STD_LOGIC;
    fifo_C_drain_out_V_V_write : OUT STD_LOGIC;
    fifo_C_drain_local_in_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fifo_C_drain_local_in_V_empty_n : IN STD_LOGIC;
    fifo_C_drain_local_in_V_read : OUT STD_LOGIC );
end;


architecture behav of C_drain_IO_L1_out_boundary_wrapper is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal fifo_C_drain_out_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln927_reg_527 : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_C_drain_local_in_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln849_reg_498 : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_148 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_062_0_i_i_reg_159 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_076_0_i_i_reg_170 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten6_reg_233 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_064_0_i_i_0_reg_244 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_054_0_i_i_0_reg_255 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln1000_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln1000_fu_272_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln1000_reg_493 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln849_fu_278_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln849_fu_284_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln1371_2_fu_310_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1371_2_reg_507 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln1371_fu_326_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln1371_reg_512 : STD_LOGIC_VECTOR (1 downto 0);
    signal local_C_V_addr_1_reg_516 : STD_LOGIC_VECTOR (3 downto 0);
    signal c7_V_fu_343_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln927_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal add_ln927_fu_422_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal select_ln544_3_fu_448_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln544_3_reg_536 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln700_5_fu_483_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state6 : STD_LOGIC;
    signal local_C_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal local_C_V_ce0 : STD_LOGIC;
    signal local_C_V_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal local_C_V_ce1 : STD_LOGIC;
    signal local_C_V_we1 : STD_LOGIC;
    signal local_C_V_d1 : STD_LOGIC_VECTOR (127 downto 0);
    signal indvar_flatten13_reg_137 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_phi_mux_p_062_0_i_i_phi_fu_163_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_v1_V_phi_fu_184_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_split_0_V_4_fu_395_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_v1_V_reg_181 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_v2_V_10_phi_fu_197_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_v2_V_10_reg_194 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_v2_V_9_phi_fu_210_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_v2_V_9_reg_207 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_v2_V_phi_fu_223_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_split_0_V_fu_349_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_v2_V_reg_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_064_0_i_i_0_phi_fu_248_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln321_fu_338_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_4_fu_478_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal icmp_ln851_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c6_V_fu_290_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1371_fu_302_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_318_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_330_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln929_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln700_fu_428_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_456_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln544_fu_440_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln321_3_fu_468_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln929_fu_464_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln321_fu_472_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component C_drain_IO_L1_out_boundary_wrapper135_local_C_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (127 downto 0) );
    end component;



begin
    local_C_V_U : component C_drain_IO_L1_out_boundary_wrapper135_local_C_V
    generic map (
        DataWidth => 128,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => local_C_V_address0,
        ce0 => local_C_V_ce0,
        q0 => local_C_V_q0,
        address1 => local_C_V_addr_1_reg_516,
        ce1 => local_C_V_ce1,
        we1 => local_C_V_we1,
        d1 => local_C_V_d1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln1000_fu_266_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln1000_fu_266_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((icmp_ln1000_fu_266_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state6);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten13_reg_137_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                indvar_flatten13_reg_137 <= add_ln1000_reg_493;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten13_reg_137 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten6_reg_233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                indvar_flatten6_reg_233 <= ap_const_lv5_0;
            elsif (((icmp_ln927_fu_416_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                indvar_flatten6_reg_233 <= add_ln927_fu_422_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln849_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_148 <= add_ln849_fu_284_p2;
            elsif (((icmp_ln1000_fu_266_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten_reg_148 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    p_054_0_i_i_0_reg_255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                p_054_0_i_i_0_reg_255 <= ap_const_lv2_0;
            elsif (((icmp_ln927_fu_416_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_054_0_i_i_0_reg_255 <= add_ln700_5_fu_483_p2;
            end if; 
        end if;
    end process;

    p_062_0_i_i_reg_159_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln849_reg_498 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_062_0_i_i_reg_159 <= select_ln1371_2_reg_507;
            elsif (((icmp_ln1000_fu_266_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                p_062_0_i_i_reg_159 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    p_064_0_i_i_0_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                p_064_0_i_i_0_reg_244 <= ap_const_lv4_0;
            elsif (((icmp_ln927_reg_527 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_064_0_i_i_0_reg_244 <= select_ln544_3_reg_536;
            end if; 
        end if;
    end process;

    p_076_0_i_i_reg_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln849_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_076_0_i_i_reg_170 <= c7_V_fu_343_p2;
            elsif (((icmp_ln1000_fu_266_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                p_076_0_i_i_reg_170 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln1000_reg_493 <= add_ln1000_fu_272_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln849_reg_498 <= icmp_ln849_fu_278_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln927_reg_527 <= icmp_ln927_fu_416_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln849_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                local_C_V_addr_1_reg_516 <= zext_ln321_fu_338_p1(4 - 1 downto 0);
                trunc_ln1371_reg_512 <= trunc_ln1371_fu_326_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln849_fu_278_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln1371_2_reg_507 <= select_ln1371_2_fu_310_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln927_fu_416_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                select_ln544_3_reg_536 <= select_ln544_3_fu_448_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln1000_fu_266_p2, ap_CS_fsm_state2, icmp_ln849_fu_278_p2, ap_enable_reg_pp0_iter0, icmp_ln927_fu_416_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln1000_fu_266_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((icmp_ln849_fu_278_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln849_fu_278_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln927_fu_416_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln927_fu_416_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln1000_fu_272_p2 <= std_logic_vector(unsigned(indvar_flatten13_reg_137) + unsigned(ap_const_lv5_1));
    add_ln321_fu_472_p2 <= std_logic_vector(unsigned(zext_ln321_3_fu_468_p1) + unsigned(zext_ln929_fu_464_p1));
    add_ln700_5_fu_483_p2 <= std_logic_vector(unsigned(select_ln544_fu_440_p3) + unsigned(ap_const_lv2_1));
    add_ln700_fu_428_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_064_0_i_i_0_phi_fu_248_p4) + unsigned(ap_const_lv4_1));
    add_ln849_fu_284_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_148) + unsigned(ap_const_lv7_1));
    add_ln927_fu_422_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_233) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state8 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(fifo_C_drain_local_in_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln849_reg_498)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln849_reg_498 = ap_const_lv1_0) and (fifo_C_drain_local_in_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(fifo_C_drain_local_in_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln849_reg_498)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln849_reg_498 = ap_const_lv1_0) and (fifo_C_drain_local_in_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(fifo_C_drain_out_V_V_full_n, ap_enable_reg_pp1_iter1, icmp_ln927_reg_527)
    begin
                ap_block_pp1_stage0_01001 <= ((icmp_ln927_reg_527 = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(fifo_C_drain_out_V_V_full_n, ap_enable_reg_pp1_iter1, icmp_ln927_reg_527)
    begin
                ap_block_pp1_stage0_11001 <= ((icmp_ln927_reg_527 = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(fifo_C_drain_out_V_V_full_n, ap_enable_reg_pp1_iter1, icmp_ln927_reg_527)
    begin
                ap_block_pp1_stage0_subdone <= ((icmp_ln927_reg_527 = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(fifo_C_drain_local_in_V_empty_n, icmp_ln849_reg_498)
    begin
                ap_block_state4_pp0_stage0_iter1 <= ((icmp_ln849_reg_498 = ap_const_lv1_0) and (fifo_C_drain_local_in_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp1_stage0_iter1_assign_proc : process(fifo_C_drain_out_V_V_full_n, icmp_ln927_reg_527)
    begin
                ap_block_state7_pp1_stage0_iter1 <= ((icmp_ln927_reg_527 = ap_const_lv1_0) and (fifo_C_drain_out_V_V_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln849_fu_278_p2)
    begin
        if ((icmp_ln849_fu_278_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state6_assign_proc : process(icmp_ln927_fu_416_p2)
    begin
        if ((icmp_ln927_fu_416_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln1000_fu_266_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln1000_fu_266_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_062_0_i_i_phi_fu_163_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln849_reg_498, p_062_0_i_i_reg_159, select_ln1371_2_reg_507)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln849_reg_498 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_p_062_0_i_i_phi_fu_163_p4 <= select_ln1371_2_reg_507;
        else 
            ap_phi_mux_p_062_0_i_i_phi_fu_163_p4 <= p_062_0_i_i_reg_159;
        end if; 
    end process;


    ap_phi_mux_p_064_0_i_i_0_phi_fu_248_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln927_reg_527, p_064_0_i_i_0_reg_244, select_ln544_3_reg_536)
    begin
        if (((icmp_ln927_reg_527 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_p_064_0_i_i_0_phi_fu_248_p4 <= select_ln544_3_reg_536;
        else 
            ap_phi_mux_p_064_0_i_i_0_phi_fu_248_p4 <= p_064_0_i_i_0_reg_244;
        end if; 
    end process;


    ap_phi_mux_v1_V_phi_fu_184_p8_assign_proc : process(icmp_ln849_reg_498, trunc_ln1371_reg_512, local_C_V_q0, data_split_0_V_4_fu_395_p1, ap_phi_reg_pp0_iter1_v1_V_reg_181)
    begin
        if ((((icmp_ln849_reg_498 = ap_const_lv1_0) and (trunc_ln1371_reg_512 = ap_const_lv2_0)) or ((icmp_ln849_reg_498 = ap_const_lv1_0) and (trunc_ln1371_reg_512 = ap_const_lv2_1)) or ((icmp_ln849_reg_498 = ap_const_lv1_0) and (trunc_ln1371_reg_512 = ap_const_lv2_2)))) then 
            ap_phi_mux_v1_V_phi_fu_184_p8 <= local_C_V_q0(127 downto 96);
        elsif (((icmp_ln849_reg_498 = ap_const_lv1_0) and (trunc_ln1371_reg_512 = ap_const_lv2_3))) then 
            ap_phi_mux_v1_V_phi_fu_184_p8 <= data_split_0_V_4_fu_395_p1;
        else 
            ap_phi_mux_v1_V_phi_fu_184_p8 <= ap_phi_reg_pp0_iter1_v1_V_reg_181;
        end if; 
    end process;


    ap_phi_mux_v2_V_10_phi_fu_197_p8_assign_proc : process(icmp_ln849_reg_498, trunc_ln1371_reg_512, local_C_V_q0, data_split_0_V_4_fu_395_p1, ap_phi_reg_pp0_iter1_v2_V_10_reg_194)
    begin
        if (((icmp_ln849_reg_498 = ap_const_lv1_0) and (trunc_ln1371_reg_512 = ap_const_lv2_2))) then 
            ap_phi_mux_v2_V_10_phi_fu_197_p8 <= data_split_0_V_4_fu_395_p1;
        elsif ((((icmp_ln849_reg_498 = ap_const_lv1_0) and (trunc_ln1371_reg_512 = ap_const_lv2_0)) or ((icmp_ln849_reg_498 = ap_const_lv1_0) and (trunc_ln1371_reg_512 = ap_const_lv2_1)) or ((icmp_ln849_reg_498 = ap_const_lv1_0) and (trunc_ln1371_reg_512 = ap_const_lv2_3)))) then 
            ap_phi_mux_v2_V_10_phi_fu_197_p8 <= local_C_V_q0(95 downto 64);
        else 
            ap_phi_mux_v2_V_10_phi_fu_197_p8 <= ap_phi_reg_pp0_iter1_v2_V_10_reg_194;
        end if; 
    end process;


    ap_phi_mux_v2_V_9_phi_fu_210_p8_assign_proc : process(icmp_ln849_reg_498, trunc_ln1371_reg_512, local_C_V_q0, data_split_0_V_4_fu_395_p1, ap_phi_reg_pp0_iter1_v2_V_9_reg_207)
    begin
        if (((icmp_ln849_reg_498 = ap_const_lv1_0) and (trunc_ln1371_reg_512 = ap_const_lv2_1))) then 
            ap_phi_mux_v2_V_9_phi_fu_210_p8 <= data_split_0_V_4_fu_395_p1;
        elsif ((((icmp_ln849_reg_498 = ap_const_lv1_0) and (trunc_ln1371_reg_512 = ap_const_lv2_0)) or ((icmp_ln849_reg_498 = ap_const_lv1_0) and (trunc_ln1371_reg_512 = ap_const_lv2_2)) or ((icmp_ln849_reg_498 = ap_const_lv1_0) and (trunc_ln1371_reg_512 = ap_const_lv2_3)))) then 
            ap_phi_mux_v2_V_9_phi_fu_210_p8 <= local_C_V_q0(63 downto 32);
        else 
            ap_phi_mux_v2_V_9_phi_fu_210_p8 <= ap_phi_reg_pp0_iter1_v2_V_9_reg_207;
        end if; 
    end process;


    ap_phi_mux_v2_V_phi_fu_223_p8_assign_proc : process(icmp_ln849_reg_498, trunc_ln1371_reg_512, data_split_0_V_4_fu_395_p1, data_split_0_V_fu_349_p1, ap_phi_reg_pp0_iter1_v2_V_reg_220)
    begin
        if (((icmp_ln849_reg_498 = ap_const_lv1_0) and (trunc_ln1371_reg_512 = ap_const_lv2_0))) then 
            ap_phi_mux_v2_V_phi_fu_223_p8 <= data_split_0_V_4_fu_395_p1;
        elsif ((((icmp_ln849_reg_498 = ap_const_lv1_0) and (trunc_ln1371_reg_512 = ap_const_lv2_1)) or ((icmp_ln849_reg_498 = ap_const_lv1_0) and (trunc_ln1371_reg_512 = ap_const_lv2_2)) or ((icmp_ln849_reg_498 = ap_const_lv1_0) and (trunc_ln1371_reg_512 = ap_const_lv2_3)))) then 
            ap_phi_mux_v2_V_phi_fu_223_p8 <= data_split_0_V_fu_349_p1;
        else 
            ap_phi_mux_v2_V_phi_fu_223_p8 <= ap_phi_reg_pp0_iter1_v2_V_reg_220;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_v1_V_reg_181 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_v2_V_10_reg_194 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_v2_V_9_reg_207 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_v2_V_reg_220 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(icmp_ln1000_fu_266_p2, ap_CS_fsm_state2)
    begin
        if (((icmp_ln1000_fu_266_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c6_V_fu_290_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(ap_phi_mux_p_062_0_i_i_phi_fu_163_p4));
    c7_V_fu_343_p2 <= std_logic_vector(unsigned(select_ln1371_fu_302_p3) + unsigned(ap_const_lv4_1));
    data_split_0_V_4_fu_395_p1 <= fifo_C_drain_local_in_V_dout;
    data_split_0_V_fu_349_p1 <= local_C_V_q0(32 - 1 downto 0);

    fifo_C_drain_local_in_V_blk_n_assign_proc : process(fifo_C_drain_local_in_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln849_reg_498)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln849_reg_498 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fifo_C_drain_local_in_V_blk_n <= fifo_C_drain_local_in_V_empty_n;
        else 
            fifo_C_drain_local_in_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fifo_C_drain_local_in_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln849_reg_498, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln849_reg_498 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fifo_C_drain_local_in_V_read <= ap_const_logic_1;
        else 
            fifo_C_drain_local_in_V_read <= ap_const_logic_0;
        end if; 
    end process;


    fifo_C_drain_out_V_V_blk_n_assign_proc : process(fifo_C_drain_out_V_V_full_n, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln927_reg_527)
    begin
        if (((icmp_ln927_reg_527 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            fifo_C_drain_out_V_V_blk_n <= fifo_C_drain_out_V_V_full_n;
        else 
            fifo_C_drain_out_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fifo_C_drain_out_V_V_din <= local_C_V_q0;

    fifo_C_drain_out_V_V_write_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln927_reg_527, ap_block_pp1_stage0_11001)
    begin
        if (((icmp_ln927_reg_527 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            fifo_C_drain_out_V_V_write <= ap_const_logic_1;
        else 
            fifo_C_drain_out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1000_fu_266_p2 <= "1" when (indvar_flatten13_reg_137 = ap_const_lv5_10) else "0";
    icmp_ln849_fu_278_p2 <= "1" when (indvar_flatten_reg_148 = ap_const_lv7_40) else "0";
    icmp_ln851_fu_296_p2 <= "1" when (p_076_0_i_i_reg_170 = ap_const_lv4_8) else "0";
    icmp_ln927_fu_416_p2 <= "1" when (indvar_flatten6_reg_233 = ap_const_lv5_10) else "0";
    icmp_ln929_fu_434_p2 <= "1" when (p_054_0_i_i_0_reg_255 = ap_const_lv2_2) else "0";

    local_C_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter0, zext_ln321_fu_338_p1, zext_ln321_4_fu_478_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            local_C_V_address0 <= zext_ln321_4_fu_478_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            local_C_V_address0 <= zext_ln321_fu_338_p1(4 - 1 downto 0);
        else 
            local_C_V_address0 <= "XXXX";
        end if; 
    end process;


    local_C_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            local_C_V_ce0 <= ap_const_logic_1;
        else 
            local_C_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_C_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_V_ce1 <= ap_const_logic_1;
        else 
            local_C_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    local_C_V_d1 <= (((ap_phi_mux_v1_V_phi_fu_184_p8 & ap_phi_mux_v2_V_10_phi_fu_197_p8) & ap_phi_mux_v2_V_9_phi_fu_210_p8) & ap_phi_mux_v2_V_phi_fu_223_p8);

    local_C_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln849_reg_498, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln849_reg_498 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            local_C_V_we1 <= ap_const_logic_1;
        else 
            local_C_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1371_2_fu_310_p3 <= 
        c6_V_fu_290_p2 when (icmp_ln851_fu_296_p2(0) = '1') else 
        ap_phi_mux_p_062_0_i_i_phi_fu_163_p4;
    select_ln1371_fu_302_p3 <= 
        ap_const_lv4_0 when (icmp_ln851_fu_296_p2(0) = '1') else 
        p_076_0_i_i_reg_170;
    select_ln544_3_fu_448_p3 <= 
        add_ln700_fu_428_p2 when (icmp_ln929_fu_434_p2(0) = '1') else 
        ap_phi_mux_p_064_0_i_i_0_phi_fu_248_p4;
    select_ln544_fu_440_p3 <= 
        ap_const_lv2_0 when (icmp_ln929_fu_434_p2(0) = '1') else 
        p_054_0_i_i_0_reg_255;
    tmp_9_fu_330_p3 <= (select_ln1371_fu_302_p3 & tmp_fu_318_p3);
    tmp_fu_318_p3 <= select_ln1371_2_fu_310_p3(2 downto 2);
    tmp_s_fu_456_p3 <= (select_ln544_3_fu_448_p3 & ap_const_lv1_0);
    trunc_ln1371_fu_326_p1 <= select_ln1371_2_fu_310_p3(2 - 1 downto 0);
    zext_ln321_3_fu_468_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln544_fu_440_p3),6));
    zext_ln321_4_fu_478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_fu_472_p2),64));
    zext_ln321_fu_338_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_330_p3),64));
    zext_ln929_fu_464_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_456_p3),6));
end behav;
