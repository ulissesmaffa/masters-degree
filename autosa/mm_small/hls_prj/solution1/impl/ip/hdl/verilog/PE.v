// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module PE (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_A_in_V_V_dout,
        fifo_A_in_V_V_empty_n,
        fifo_A_in_V_V_read,
        fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n,
        fifo_A_out_V_V_write,
        fifo_B_in_V_V_dout,
        fifo_B_in_V_V_empty_n,
        fifo_B_in_V_V_read,
        fifo_B_out_V_V_din,
        fifo_B_out_V_V_full_n,
        fifo_B_out_V_V_write,
        fifo_C_drain_out_V_din,
        fifo_C_drain_out_V_full_n,
        fifo_C_drain_out_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state16 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] fifo_A_in_V_V_dout;
input   fifo_A_in_V_V_empty_n;
output   fifo_A_in_V_V_read;
output  [63:0] fifo_A_out_V_V_din;
input   fifo_A_out_V_V_full_n;
output   fifo_A_out_V_V_write;
input  [63:0] fifo_B_in_V_V_dout;
input   fifo_B_in_V_V_empty_n;
output   fifo_B_in_V_V_read;
output  [63:0] fifo_B_out_V_V_din;
input   fifo_B_out_V_V_full_n;
output   fifo_B_out_V_V_write;
output  [31:0] fifo_C_drain_out_V_din;
input   fifo_C_drain_out_V_full_n;
output   fifo_C_drain_out_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_A_in_V_V_read;
reg fifo_A_out_V_V_write;
reg fifo_B_in_V_V_read;
reg fifo_B_out_V_V_write;
reg fifo_C_drain_out_V_write;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_A_in_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln705_reg_750;
reg    fifo_A_out_V_V_blk_n;
reg    fifo_B_in_V_V_blk_n;
reg    fifo_B_out_V_V_blk_n;
reg    fifo_C_drain_out_V_blk_n;
reg    ap_enable_reg_pp0_iter13;
reg   [0:0] select_ln879_3_reg_764;
reg   [0:0] select_ln879_3_reg_764_pp0_iter12_reg;
reg   [15:0] indvar_flatten119_reg_162;
reg   [14:0] indvar_flatten75_reg_173;
reg   [12:0] indvar_flatten39_reg_184;
reg   [2:0] p_0137_0_reg_195;
reg   [10:0] indvar_flatten13_reg_206;
reg   [3:0] p_084_0_reg_217;
reg   [7:0] indvar_flatten_reg_228;
reg   [3:0] p_074_0_reg_239;
reg   [3:0] p_064_0_reg_250;
wire   [0:0] icmp_ln705_fu_295_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
wire    ap_block_state7_pp0_stage0_iter5;
wire    ap_block_state8_pp0_stage0_iter6;
wire    ap_block_state9_pp0_stage0_iter7;
wire    ap_block_state10_pp0_stage0_iter8;
wire    ap_block_state11_pp0_stage0_iter9;
wire    ap_block_state12_pp0_stage0_iter10;
wire    ap_block_state13_pp0_stage0_iter11;
wire    ap_block_state14_pp0_stage0_iter12;
reg    ap_block_state15_pp0_stage0_iter13;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln705_reg_750_pp0_iter1_reg;
reg   [0:0] icmp_ln705_reg_750_pp0_iter2_reg;
reg   [0:0] icmp_ln705_reg_750_pp0_iter3_reg;
reg   [0:0] icmp_ln705_reg_750_pp0_iter4_reg;
reg   [0:0] icmp_ln705_reg_750_pp0_iter5_reg;
reg   [0:0] icmp_ln705_reg_750_pp0_iter6_reg;
reg   [0:0] icmp_ln705_reg_750_pp0_iter7_reg;
reg   [0:0] icmp_ln705_reg_750_pp0_iter8_reg;
reg   [0:0] icmp_ln705_reg_750_pp0_iter9_reg;
reg   [0:0] icmp_ln705_reg_750_pp0_iter10_reg;
reg   [0:0] icmp_ln705_reg_750_pp0_iter11_reg;
reg   [0:0] icmp_ln705_reg_750_pp0_iter12_reg;
wire   [15:0] add_ln705_fu_301_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] select_ln707_1_fu_499_p3;
wire   [0:0] select_ln879_3_fu_545_p3;
reg   [0:0] select_ln879_3_reg_764_pp0_iter1_reg;
reg   [0:0] select_ln879_3_reg_764_pp0_iter2_reg;
reg   [0:0] select_ln879_3_reg_764_pp0_iter3_reg;
reg   [0:0] select_ln879_3_reg_764_pp0_iter4_reg;
reg   [0:0] select_ln879_3_reg_764_pp0_iter5_reg;
reg   [0:0] select_ln879_3_reg_764_pp0_iter6_reg;
reg   [0:0] select_ln879_3_reg_764_pp0_iter7_reg;
reg   [0:0] select_ln879_3_reg_764_pp0_iter8_reg;
reg   [0:0] select_ln879_3_reg_764_pp0_iter9_reg;
reg   [0:0] select_ln879_3_reg_764_pp0_iter10_reg;
reg   [0:0] select_ln879_3_reg_764_pp0_iter11_reg;
wire   [3:0] select_ln710_fu_571_p3;
wire   [3:0] select_ln544_fu_603_p3;
reg   [3:0] select_ln544_reg_773;
wire   [3:0] select_ln544_1_fu_611_p3;
reg   [3:0] select_ln544_1_reg_778;
wire   [3:0] c7_V_fu_619_p2;
wire   [7:0] select_ln712_fu_631_p3;
wire   [10:0] select_ln710_1_fu_645_p3;
wire   [12:0] select_ln707_2_fu_659_p3;
wire   [14:0] select_ln706_fu_673_p3;
wire   [31:0] p_Repl2_2_fu_684_p1;
reg   [31:0] p_Repl2_2_reg_809;
reg   [31:0] p_Repl2_3_reg_814;
wire   [31:0] p_Repl2_s_fu_698_p1;
reg   [31:0] p_Repl2_s_reg_819;
reg   [31:0] p_Repl2_1_reg_824;
reg   [5:0] local_C_addr_reg_829;
reg   [5:0] local_C_addr_reg_829_pp0_iter2_reg;
reg   [5:0] local_C_addr_reg_829_pp0_iter3_reg;
reg   [5:0] local_C_addr_reg_829_pp0_iter4_reg;
reg   [5:0] local_C_addr_reg_829_pp0_iter5_reg;
reg   [5:0] local_C_addr_reg_829_pp0_iter6_reg;
reg   [5:0] local_C_addr_reg_829_pp0_iter7_reg;
reg   [5:0] local_C_addr_reg_829_pp0_iter8_reg;
reg   [5:0] local_C_addr_reg_829_pp0_iter9_reg;
reg   [5:0] local_C_addr_reg_829_pp0_iter10_reg;
reg   [5:0] local_C_addr_reg_829_pp0_iter11_reg;
reg   [5:0] local_C_addr_reg_829_pp0_iter12_reg;
wire   [31:0] local_C_q0;
reg   [31:0] local_C_load_reg_855;
reg    ap_enable_reg_pp0_iter4;
wire   [31:0] grp_fu_269_p2;
reg   [31:0] tmp1_reg_860;
wire   [31:0] grp_fu_273_p2;
reg   [31:0] tmp_s_reg_865;
reg   [31:0] tmp_s_reg_865_pp0_iter5_reg;
reg   [31:0] tmp_s_reg_865_pp0_iter6_reg;
reg   [31:0] tmp_s_reg_865_pp0_iter7_reg;
reg   [31:0] tmp_s_reg_865_pp0_iter8_reg;
wire   [31:0] grp_fu_261_p2;
reg   [31:0] tmp_1_reg_870;
wire   [31:0] grp_fu_265_p2;
reg   [31:0] tmp_2_reg_875;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    local_C_ce0;
reg    local_C_ce1;
reg    local_C_we1;
reg   [3:0] ap_phi_mux_p_074_0_phi_fu_243_p4;
wire   [63:0] zext_ln742_1_fu_729_p1;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_269_p0;
wire   [31:0] grp_fu_269_p1;
wire   [31:0] grp_fu_273_p0;
wire   [31:0] grp_fu_273_p1;
wire   [0:0] icmp_ln879_fu_277_p2;
wire   [0:0] icmp_ln879_1_fu_283_p2;
wire   [0:0] icmp_ln706_fu_307_p2;
wire   [0:0] xor_ln706_fu_313_p2;
wire   [0:0] and_ln744_fu_289_p2;
wire   [0:0] icmp_ln714_fu_331_p2;
wire   [0:0] icmp_ln712_fu_343_p2;
wire   [0:0] icmp_ln710_fu_355_p2;
wire   [0:0] icmp_ln707_fu_367_p2;
wire   [0:0] and_ln706_5_fu_373_p2;
wire   [0:0] or_ln707_fu_379_p2;
wire   [0:0] xor_ln707_fu_393_p2;
wire   [0:0] and_ln706_fu_319_p2;
wire   [0:0] or_ln707_1_fu_399_p2;
wire   [0:0] and_ln706_1_fu_325_p2;
wire   [0:0] and_ln706_2_fu_337_p2;
wire   [0:0] and_ln706_3_fu_349_p2;
wire   [0:0] and_ln706_4_fu_361_p2;
wire   [2:0] select_ln707_fu_385_p3;
wire   [0:0] and_ln707_4_fu_429_p2;
wire   [0:0] or_ln879_fu_441_p2;
wire   [0:0] or_ln879_1_fu_447_p2;
wire   [2:0] c2_V_fu_435_p2;
wire   [0:0] icmp_ln879_2_fu_461_p2;
wire   [0:0] and_ln707_fu_405_p2;
wire   [0:0] and_ln707_1_fu_411_p2;
wire   [0:0] xor_ln879_fu_475_p2;
wire   [0:0] and_ln707_2_fu_417_p2;
wire   [0:0] and_ln707_3_fu_423_p2;
wire   [3:0] select_ln879_fu_453_p3;
wire   [0:0] and_ln879_2_fu_493_p2;
wire   [0:0] or_ln879_2_fu_513_p2;
wire   [0:0] or_ln879_3_fu_519_p2;
wire   [3:0] c5_V_fu_507_p2;
wire   [0:0] select_ln879_1_fu_467_p3;
wire   [0:0] icmp_ln879_3_fu_533_p2;
wire   [0:0] and_ln744_1_fu_539_p2;
wire   [0:0] and_ln879_fu_481_p2;
wire   [0:0] xor_ln879_1_fu_553_p2;
wire   [0:0] and_ln879_1_fu_487_p2;
wire   [0:0] or_ln879_4_fu_559_p2;
wire   [3:0] select_ln879_2_fu_525_p3;
wire   [0:0] and_ln879_3_fu_565_p2;
wire   [0:0] or_ln544_fu_585_p2;
wire   [0:0] or_ln544_1_fu_591_p2;
wire   [0:0] or_ln544_2_fu_597_p2;
wire   [3:0] c6_V_fu_579_p2;
wire   [7:0] add_ln712_fu_625_p2;
wire   [10:0] add_ln710_fu_639_p2;
wire   [12:0] add_ln707_fu_653_p2;
wire   [14:0] add_ln706_fu_667_p2;
wire   [6:0] tmp_4_fu_712_p3;
wire   [7:0] zext_ln544_fu_681_p1;
wire   [7:0] zext_ln742_fu_719_p1;
wire   [7:0] add_ln742_fu_723_p2;
reg    grp_fu_261_ce;
reg    grp_fu_265_ce;
reg    grp_fu_269_ce;
reg    grp_fu_273_ce;
wire    ap_CS_fsm_state16;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
end

PE_local_C #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
local_C_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_addr_reg_829_pp0_iter2_reg),
    .ce0(local_C_ce0),
    .q0(local_C_q0),
    .address1(local_C_addr_reg_829_pp0_iter12_reg),
    .ce1(local_C_ce1),
    .we1(local_C_we1),
    .d1(tmp_2_reg_875)
);

kernel0_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel0_fadd_32ns_32ns_32_4_full_dsp_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(local_C_load_reg_855),
    .din1(tmp1_reg_860),
    .ce(grp_fu_261_ce),
    .dout(grp_fu_261_p2)
);

kernel0_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel0_fadd_32ns_32ns_32_4_full_dsp_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_reg_870),
    .din1(tmp_s_reg_865_pp0_iter8_reg),
    .ce(grp_fu_265_ce),
    .dout(grp_fu_265_p2)
);

kernel0_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel0_fmul_32ns_32ns_32_3_max_dsp_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_269_p0),
    .din1(grp_fu_269_p1),
    .ce(grp_fu_269_ce),
    .dout(grp_fu_269_p2)
);

kernel0_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
kernel0_fmul_32ns_32ns_32_3_max_dsp_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_273_p0),
    .din1(grp_fu_273_p1),
    .ce(grp_fu_273_ce),
    .dout(grp_fu_273_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter13 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten119_reg_162 <= add_ln705_fu_301_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten119_reg_162 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten13_reg_206 <= select_ln710_1_fu_645_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten13_reg_206 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten39_reg_184 <= select_ln707_2_fu_659_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten39_reg_184 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten75_reg_173 <= select_ln706_fu_673_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten75_reg_173 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_228 <= select_ln712_fu_631_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_228 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0137_0_reg_195 <= select_ln707_1_fu_499_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0137_0_reg_195 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_064_0_reg_250 <= c7_V_fu_619_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_064_0_reg_250 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_reg_750 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_074_0_reg_239 <= select_ln544_1_reg_778;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_074_0_reg_239 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_084_0_reg_217 <= select_ln710_fu_571_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_084_0_reg_217 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln705_reg_750 <= icmp_ln705_fu_295_p2;
        icmp_ln705_reg_750_pp0_iter1_reg <= icmp_ln705_reg_750;
        select_ln879_3_reg_764_pp0_iter1_reg <= select_ln879_3_reg_764;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln705_reg_750_pp0_iter10_reg <= icmp_ln705_reg_750_pp0_iter9_reg;
        icmp_ln705_reg_750_pp0_iter11_reg <= icmp_ln705_reg_750_pp0_iter10_reg;
        icmp_ln705_reg_750_pp0_iter12_reg <= icmp_ln705_reg_750_pp0_iter11_reg;
        icmp_ln705_reg_750_pp0_iter2_reg <= icmp_ln705_reg_750_pp0_iter1_reg;
        icmp_ln705_reg_750_pp0_iter3_reg <= icmp_ln705_reg_750_pp0_iter2_reg;
        icmp_ln705_reg_750_pp0_iter4_reg <= icmp_ln705_reg_750_pp0_iter3_reg;
        icmp_ln705_reg_750_pp0_iter5_reg <= icmp_ln705_reg_750_pp0_iter4_reg;
        icmp_ln705_reg_750_pp0_iter6_reg <= icmp_ln705_reg_750_pp0_iter5_reg;
        icmp_ln705_reg_750_pp0_iter7_reg <= icmp_ln705_reg_750_pp0_iter6_reg;
        icmp_ln705_reg_750_pp0_iter8_reg <= icmp_ln705_reg_750_pp0_iter7_reg;
        icmp_ln705_reg_750_pp0_iter9_reg <= icmp_ln705_reg_750_pp0_iter8_reg;
        local_C_addr_reg_829_pp0_iter10_reg <= local_C_addr_reg_829_pp0_iter9_reg;
        local_C_addr_reg_829_pp0_iter11_reg <= local_C_addr_reg_829_pp0_iter10_reg;
        local_C_addr_reg_829_pp0_iter12_reg <= local_C_addr_reg_829_pp0_iter11_reg;
        local_C_addr_reg_829_pp0_iter2_reg <= local_C_addr_reg_829;
        local_C_addr_reg_829_pp0_iter3_reg <= local_C_addr_reg_829_pp0_iter2_reg;
        local_C_addr_reg_829_pp0_iter4_reg <= local_C_addr_reg_829_pp0_iter3_reg;
        local_C_addr_reg_829_pp0_iter5_reg <= local_C_addr_reg_829_pp0_iter4_reg;
        local_C_addr_reg_829_pp0_iter6_reg <= local_C_addr_reg_829_pp0_iter5_reg;
        local_C_addr_reg_829_pp0_iter7_reg <= local_C_addr_reg_829_pp0_iter6_reg;
        local_C_addr_reg_829_pp0_iter8_reg <= local_C_addr_reg_829_pp0_iter7_reg;
        local_C_addr_reg_829_pp0_iter9_reg <= local_C_addr_reg_829_pp0_iter8_reg;
        select_ln879_3_reg_764_pp0_iter10_reg <= select_ln879_3_reg_764_pp0_iter9_reg;
        select_ln879_3_reg_764_pp0_iter11_reg <= select_ln879_3_reg_764_pp0_iter10_reg;
        select_ln879_3_reg_764_pp0_iter12_reg <= select_ln879_3_reg_764_pp0_iter11_reg;
        select_ln879_3_reg_764_pp0_iter2_reg <= select_ln879_3_reg_764_pp0_iter1_reg;
        select_ln879_3_reg_764_pp0_iter3_reg <= select_ln879_3_reg_764_pp0_iter2_reg;
        select_ln879_3_reg_764_pp0_iter4_reg <= select_ln879_3_reg_764_pp0_iter3_reg;
        select_ln879_3_reg_764_pp0_iter5_reg <= select_ln879_3_reg_764_pp0_iter4_reg;
        select_ln879_3_reg_764_pp0_iter6_reg <= select_ln879_3_reg_764_pp0_iter5_reg;
        select_ln879_3_reg_764_pp0_iter7_reg <= select_ln879_3_reg_764_pp0_iter6_reg;
        select_ln879_3_reg_764_pp0_iter8_reg <= select_ln879_3_reg_764_pp0_iter7_reg;
        select_ln879_3_reg_764_pp0_iter9_reg <= select_ln879_3_reg_764_pp0_iter8_reg;
        tmp_s_reg_865_pp0_iter5_reg <= tmp_s_reg_865;
        tmp_s_reg_865_pp0_iter6_reg <= tmp_s_reg_865_pp0_iter5_reg;
        tmp_s_reg_865_pp0_iter7_reg <= tmp_s_reg_865_pp0_iter6_reg;
        tmp_s_reg_865_pp0_iter8_reg <= tmp_s_reg_865_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_reg_750 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_C_addr_reg_829 <= zext_ln742_1_fu_729_p1;
        p_Repl2_1_reg_824 <= {{fifo_B_in_V_V_dout[63:32]}};
        p_Repl2_2_reg_809 <= p_Repl2_2_fu_684_p1;
        p_Repl2_3_reg_814 <= {{fifo_A_in_V_V_dout[63:32]}};
        p_Repl2_s_reg_819 <= p_Repl2_s_fu_698_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_reg_750_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_C_load_reg_855 <= local_C_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln544_1_reg_778 <= select_ln544_1_fu_611_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_fu_295_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln544_reg_773 <= select_ln544_fu_603_p3;
        select_ln879_3_reg_764 <= select_ln879_3_fu_545_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_reg_750_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp1_reg_860 <= grp_fu_269_p2;
        tmp_s_reg_865 <= grp_fu_273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_reg_750_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_reg_870 <= grp_fu_261_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_reg_750_pp0_iter11_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_2_reg_875 <= grp_fu_265_p2;
    end
end

always @ (*) begin
    if ((icmp_ln705_fu_295_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_750 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_p_074_0_phi_fu_243_p4 = select_ln544_1_reg_778;
    end else begin
        ap_phi_mux_p_074_0_phi_fu_243_p4 = p_074_0_reg_239;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_750 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_in_V_V_blk_n = fifo_A_in_V_V_empty_n;
    end else begin
        fifo_A_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_750 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_A_in_V_V_read = 1'b1;
    end else begin
        fifo_A_in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_750 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_A_out_V_V_blk_n = fifo_A_out_V_V_full_n;
    end else begin
        fifo_A_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_750 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_A_out_V_V_write = 1'b1;
    end else begin
        fifo_A_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_750 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_in_V_V_blk_n = fifo_B_in_V_V_empty_n;
    end else begin
        fifo_B_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_750 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_B_in_V_V_read = 1'b1;
    end else begin
        fifo_B_in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_750 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_B_out_V_V_blk_n = fifo_B_out_V_V_full_n;
    end else begin
        fifo_B_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_750 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_B_out_V_V_write = 1'b1;
    end else begin
        fifo_B_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((select_ln879_3_reg_764_pp0_iter12_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter13 == 1'b1))) begin
        fifo_C_drain_out_V_blk_n = fifo_C_drain_out_V_full_n;
    end else begin
        fifo_C_drain_out_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((select_ln879_3_reg_764_pp0_iter12_reg == 1'd1) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_C_drain_out_V_write = 1'b1;
    end else begin
        fifo_C_drain_out_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_261_ce = 1'b1;
    end else begin
        grp_fu_261_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_265_ce = 1'b1;
    end else begin
        grp_fu_265_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_269_ce = 1'b1;
    end else begin
        grp_fu_269_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_273_ce = 1'b1;
    end else begin
        grp_fu_273_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_C_ce0 = 1'b1;
    end else begin
        local_C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_C_ce1 = 1'b1;
    end else begin
        local_C_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_750_pp0_iter12_reg == 1'd0) & (ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_C_we1 = 1'b1;
    end else begin
        local_C_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln705_fu_295_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter12 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter13 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter12 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((icmp_ln705_fu_295_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln705_fu_301_p2 = (indvar_flatten119_reg_162 + 16'd1);

assign add_ln706_fu_667_p2 = (indvar_flatten75_reg_173 + 15'd1);

assign add_ln707_fu_653_p2 = (indvar_flatten39_reg_184 + 13'd1);

assign add_ln710_fu_639_p2 = (indvar_flatten13_reg_206 + 11'd1);

assign add_ln712_fu_625_p2 = (indvar_flatten_reg_228 + 8'd1);

assign add_ln742_fu_723_p2 = (zext_ln544_fu_681_p1 + zext_ln742_fu_719_p1);

assign and_ln706_1_fu_325_p2 = (xor_ln706_fu_313_p2 & and_ln744_fu_289_p2);

assign and_ln706_2_fu_337_p2 = (xor_ln706_fu_313_p2 & icmp_ln714_fu_331_p2);

assign and_ln706_3_fu_349_p2 = (xor_ln706_fu_313_p2 & icmp_ln712_fu_343_p2);

assign and_ln706_4_fu_361_p2 = (xor_ln706_fu_313_p2 & icmp_ln710_fu_355_p2);

assign and_ln706_5_fu_373_p2 = (xor_ln706_fu_313_p2 & icmp_ln707_fu_367_p2);

assign and_ln706_fu_319_p2 = (xor_ln706_fu_313_p2 & icmp_ln879_fu_277_p2);

assign and_ln707_1_fu_411_p2 = (or_ln707_1_fu_399_p2 & and_ln706_1_fu_325_p2);

assign and_ln707_2_fu_417_p2 = (or_ln707_1_fu_399_p2 & and_ln706_2_fu_337_p2);

assign and_ln707_3_fu_423_p2 = (or_ln707_1_fu_399_p2 & and_ln706_3_fu_349_p2);

assign and_ln707_4_fu_429_p2 = (or_ln707_1_fu_399_p2 & and_ln706_4_fu_361_p2);

assign and_ln707_fu_405_p2 = (or_ln707_1_fu_399_p2 & and_ln706_fu_319_p2);

assign and_ln744_1_fu_539_p2 = (select_ln879_1_fu_467_p3 & icmp_ln879_3_fu_533_p2);

assign and_ln744_fu_289_p2 = (icmp_ln879_fu_277_p2 & icmp_ln879_1_fu_283_p2);

assign and_ln879_1_fu_487_p2 = (xor_ln879_fu_475_p2 & and_ln707_2_fu_417_p2);

assign and_ln879_2_fu_493_p2 = (xor_ln879_fu_475_p2 & and_ln707_3_fu_423_p2);

assign and_ln879_3_fu_565_p2 = (or_ln879_4_fu_559_p2 & and_ln879_1_fu_487_p2);

assign and_ln879_fu_481_p2 = (xor_ln879_fu_475_p2 & and_ln707_1_fu_411_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((select_ln879_3_reg_764_pp0_iter12_reg == 1'd1) & (fifo_C_drain_out_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln705_reg_750 == 1'd0) & (fifo_B_out_V_V_full_n == 1'b0)) | ((icmp_ln705_reg_750 == 1'd0) & (fifo_B_in_V_V_empty_n == 1'b0)) | ((icmp_ln705_reg_750 == 1'd0) & (fifo_A_in_V_V_empty_n == 1'b0)) | ((icmp_ln705_reg_750 == 1'd0) & (fifo_A_out_V_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((select_ln879_3_reg_764_pp0_iter12_reg == 1'd1) & (fifo_C_drain_out_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln705_reg_750 == 1'd0) & (fifo_B_out_V_V_full_n == 1'b0)) | ((icmp_ln705_reg_750 == 1'd0) & (fifo_B_in_V_V_empty_n == 1'b0)) | ((icmp_ln705_reg_750 == 1'd0) & (fifo_A_in_V_V_empty_n == 1'b0)) | ((icmp_ln705_reg_750 == 1'd0) & (fifo_A_out_V_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((select_ln879_3_reg_764_pp0_iter12_reg == 1'd1) & (fifo_C_drain_out_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((icmp_ln705_reg_750 == 1'd0) & (fifo_B_out_V_V_full_n == 1'b0)) | ((icmp_ln705_reg_750 == 1'd0) & (fifo_B_in_V_V_empty_n == 1'b0)) | ((icmp_ln705_reg_750 == 1'd0) & (fifo_A_in_V_V_empty_n == 1'b0)) | ((icmp_ln705_reg_750 == 1'd0) & (fifo_A_out_V_V_full_n == 1'b0)))));
end

assign ap_block_state10_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp0_stage0_iter13 = ((select_ln879_3_reg_764_pp0_iter12_reg == 1'd1) & (fifo_C_drain_out_V_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((icmp_ln705_reg_750 == 1'd0) & (fifo_B_out_V_V_full_n == 1'b0)) | ((icmp_ln705_reg_750 == 1'd0) & (fifo_B_in_V_V_empty_n == 1'b0)) | ((icmp_ln705_reg_750 == 1'd0) & (fifo_A_in_V_V_empty_n == 1'b0)) | ((icmp_ln705_reg_750 == 1'd0) & (fifo_A_out_V_V_full_n == 1'b0)));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign c2_V_fu_435_p2 = (3'd1 + select_ln707_fu_385_p3);

assign c5_V_fu_507_p2 = (4'd1 + select_ln879_fu_453_p3);

assign c6_V_fu_579_p2 = (4'd1 + select_ln879_2_fu_525_p3);

assign c7_V_fu_619_p2 = (select_ln544_fu_603_p3 + 4'd1);

assign fifo_A_out_V_V_din = fifo_A_in_V_V_dout;

assign fifo_B_out_V_V_din = fifo_B_in_V_V_dout;

assign fifo_C_drain_out_V_din = tmp_2_reg_875;

assign grp_fu_269_p0 = p_Repl2_2_reg_809;

assign grp_fu_269_p1 = p_Repl2_s_reg_819;

assign grp_fu_273_p0 = p_Repl2_3_reg_814;

assign grp_fu_273_p1 = p_Repl2_1_reg_824;

assign icmp_ln705_fu_295_p2 = ((indvar_flatten119_reg_162 == 16'd32768) ? 1'b1 : 1'b0);

assign icmp_ln706_fu_307_p2 = ((indvar_flatten75_reg_173 == 15'd8192) ? 1'b1 : 1'b0);

assign icmp_ln707_fu_367_p2 = ((indvar_flatten39_reg_184 == 13'd2048) ? 1'b1 : 1'b0);

assign icmp_ln710_fu_355_p2 = ((indvar_flatten13_reg_206 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln712_fu_343_p2 = ((indvar_flatten_reg_228 == 8'd64) ? 1'b1 : 1'b0);

assign icmp_ln714_fu_331_p2 = ((p_064_0_reg_250 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln879_1_fu_283_p2 = ((p_084_0_reg_217 == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_2_fu_461_p2 = ((c2_V_fu_435_p2 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln879_3_fu_533_p2 = ((c5_V_fu_507_p2 == 4'd7) ? 1'b1 : 1'b0);

assign icmp_ln879_fu_277_p2 = ((p_0137_0_reg_195 == 3'd3) ? 1'b1 : 1'b0);

assign or_ln544_1_fu_591_p2 = (or_ln879_fu_441_p2 | or_ln544_fu_585_p2);

assign or_ln544_2_fu_597_p2 = (or_ln544_1_fu_591_p2 | icmp_ln706_fu_307_p2);

assign or_ln544_fu_585_p2 = (and_ln879_3_fu_565_p2 | and_ln879_2_fu_493_p2);

assign or_ln707_1_fu_399_p2 = (xor_ln707_fu_393_p2 | icmp_ln706_fu_307_p2);

assign or_ln707_fu_379_p2 = (icmp_ln706_fu_307_p2 | and_ln706_5_fu_373_p2);

assign or_ln879_1_fu_447_p2 = (or_ln879_fu_441_p2 | icmp_ln706_fu_307_p2);

assign or_ln879_2_fu_513_p2 = (and_ln879_2_fu_493_p2 | and_ln707_4_fu_429_p2);

assign or_ln879_3_fu_519_p2 = (or_ln879_2_fu_513_p2 | or_ln707_fu_379_p2);

assign or_ln879_4_fu_559_p2 = (xor_ln879_1_fu_553_p2 | and_ln707_4_fu_429_p2);

assign or_ln879_fu_441_p2 = (and_ln707_4_fu_429_p2 | and_ln706_5_fu_373_p2);

assign p_Repl2_2_fu_684_p1 = fifo_A_in_V_V_dout[31:0];

assign p_Repl2_s_fu_698_p1 = fifo_B_in_V_V_dout[31:0];

assign select_ln544_1_fu_611_p3 = ((and_ln879_3_fu_565_p2[0:0] === 1'b1) ? c6_V_fu_579_p2 : select_ln879_2_fu_525_p3);

assign select_ln544_fu_603_p3 = ((or_ln544_2_fu_597_p2[0:0] === 1'b1) ? 4'd0 : p_064_0_reg_250);

assign select_ln706_fu_673_p3 = ((icmp_ln706_fu_307_p2[0:0] === 1'b1) ? 15'd1 : add_ln706_fu_667_p2);

assign select_ln707_1_fu_499_p3 = ((and_ln707_4_fu_429_p2[0:0] === 1'b1) ? c2_V_fu_435_p2 : select_ln707_fu_385_p3);

assign select_ln707_2_fu_659_p3 = ((or_ln707_fu_379_p2[0:0] === 1'b1) ? 13'd1 : add_ln707_fu_653_p2);

assign select_ln707_fu_385_p3 = ((or_ln707_fu_379_p2[0:0] === 1'b1) ? 3'd0 : p_0137_0_reg_195);

assign select_ln710_1_fu_645_p3 = ((or_ln879_1_fu_447_p2[0:0] === 1'b1) ? 11'd1 : add_ln710_fu_639_p2);

assign select_ln710_fu_571_p3 = ((and_ln879_2_fu_493_p2[0:0] === 1'b1) ? c5_V_fu_507_p2 : select_ln879_fu_453_p3);

assign select_ln712_fu_631_p3 = ((or_ln879_3_fu_519_p2[0:0] === 1'b1) ? 8'd1 : add_ln712_fu_625_p2);

assign select_ln879_1_fu_467_p3 = ((and_ln707_4_fu_429_p2[0:0] === 1'b1) ? icmp_ln879_2_fu_461_p2 : and_ln707_fu_405_p2);

assign select_ln879_2_fu_525_p3 = ((or_ln879_3_fu_519_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_p_074_0_phi_fu_243_p4);

assign select_ln879_3_fu_545_p3 = ((and_ln879_2_fu_493_p2[0:0] === 1'b1) ? and_ln744_1_fu_539_p2 : and_ln879_fu_481_p2);

assign select_ln879_fu_453_p3 = ((or_ln879_1_fu_447_p2[0:0] === 1'b1) ? 4'd0 : p_084_0_reg_217);

assign tmp_4_fu_712_p3 = {{select_ln544_reg_773}, {3'd0}};

assign xor_ln706_fu_313_p2 = (icmp_ln706_fu_307_p2 ^ 1'd1);

assign xor_ln707_fu_393_p2 = (icmp_ln707_fu_367_p2 ^ 1'd1);

assign xor_ln879_1_fu_553_p2 = (1'd1 ^ and_ln707_3_fu_423_p2);

assign xor_ln879_fu_475_p2 = (1'd1 ^ and_ln707_4_fu_429_p2);

assign zext_ln544_fu_681_p1 = select_ln544_1_reg_778;

assign zext_ln742_1_fu_729_p1 = add_ln742_fu_723_p2;

assign zext_ln742_fu_719_p1 = tmp_4_fu_712_p3;

endmodule //PE
