// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module C_drain_IO_L1_out_boundary_wrapper (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        fifo_C_drain_out_V_V_din,
        fifo_C_drain_out_V_V_full_n,
        fifo_C_drain_out_V_V_write,
        fifo_C_drain_local_in_V_dout,
        fifo_C_drain_local_in_V_empty_n,
        fifo_C_drain_local_in_V_read
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_pp0_stage0 = 6'd4;
parameter    ap_ST_fsm_state5 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state8 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [127:0] fifo_C_drain_out_V_V_din;
input   fifo_C_drain_out_V_V_full_n;
output   fifo_C_drain_out_V_V_write;
input  [31:0] fifo_C_drain_local_in_V_dout;
input   fifo_C_drain_local_in_V_empty_n;
output   fifo_C_drain_local_in_V_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg fifo_C_drain_out_V_V_write;
reg fifo_C_drain_local_in_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    fifo_C_drain_out_V_V_blk_n;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln927_reg_527;
reg    fifo_C_drain_local_in_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln849_reg_498;
reg   [6:0] indvar_flatten_reg_148;
reg   [3:0] p_062_0_i_i_reg_159;
reg   [3:0] p_076_0_i_i_reg_170;
reg   [4:0] indvar_flatten6_reg_233;
reg   [3:0] p_064_0_i_i_0_reg_244;
reg   [1:0] p_054_0_i_i_0_reg_255;
wire   [0:0] icmp_ln1000_fu_266_p2;
wire    ap_CS_fsm_state2;
wire   [4:0] add_ln1000_fu_272_p2;
reg   [4:0] add_ln1000_reg_493;
wire   [0:0] icmp_ln849_fu_278_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [6:0] add_ln849_fu_284_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [3:0] select_ln1371_2_fu_310_p3;
reg   [3:0] select_ln1371_2_reg_507;
wire   [1:0] trunc_ln1371_fu_326_p1;
reg   [1:0] trunc_ln1371_reg_512;
reg   [3:0] local_C_V_addr_1_reg_516;
wire   [3:0] c7_V_fu_343_p2;
wire   [0:0] icmp_ln927_fu_416_p2;
wire    ap_block_state6_pp1_stage0_iter0;
reg    ap_block_state7_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
wire   [4:0] add_ln927_fu_422_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [3:0] select_ln544_3_fu_448_p3;
reg   [3:0] select_ln544_3_reg_536;
wire   [1:0] add_ln700_5_fu_483_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire    ap_CS_fsm_state5;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg   [3:0] local_C_V_address0;
reg    local_C_V_ce0;
wire   [127:0] local_C_V_q0;
reg    local_C_V_ce1;
reg    local_C_V_we1;
wire   [127:0] local_C_V_d1;
reg   [4:0] indvar_flatten13_reg_137;
reg    ap_block_state1;
wire    ap_CS_fsm_state8;
reg   [3:0] ap_phi_mux_p_062_0_i_i_phi_fu_163_p4;
reg   [31:0] ap_phi_mux_v1_V_phi_fu_184_p8;
wire   [31:0] data_split_0_V_4_fu_395_p1;
wire   [31:0] ap_phi_reg_pp0_iter1_v1_V_reg_181;
reg   [31:0] ap_phi_mux_v2_V_10_phi_fu_197_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_v2_V_10_reg_194;
reg   [31:0] ap_phi_mux_v2_V_9_phi_fu_210_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_v2_V_9_reg_207;
reg   [31:0] ap_phi_mux_v2_V_phi_fu_223_p8;
wire   [31:0] data_split_0_V_fu_349_p1;
wire   [31:0] ap_phi_reg_pp0_iter1_v2_V_reg_220;
reg   [3:0] ap_phi_mux_p_064_0_i_i_0_phi_fu_248_p4;
wire   [63:0] zext_ln321_fu_338_p1;
wire   [63:0] zext_ln321_4_fu_478_p1;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln851_fu_296_p2;
wire   [3:0] c6_V_fu_290_p2;
wire   [3:0] select_ln1371_fu_302_p3;
wire   [0:0] tmp_fu_318_p3;
wire   [4:0] tmp_9_fu_330_p3;
wire   [0:0] icmp_ln929_fu_434_p2;
wire   [3:0] add_ln700_fu_428_p2;
wire   [4:0] tmp_s_fu_456_p3;
wire   [1:0] select_ln544_fu_440_p3;
wire   [5:0] zext_ln321_3_fu_468_p1;
wire   [5:0] zext_ln929_fu_464_p1;
wire   [5:0] add_ln321_fu_472_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
end

C_drain_IO_L1_out_boundary_wrapper135_local_C_V #(
    .DataWidth( 128 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
local_C_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_V_address0),
    .ce0(local_C_V_ce0),
    .q0(local_C_V_q0),
    .address1(local_C_V_addr_1_reg_516),
    .ce1(local_C_V_ce1),
    .we1(local_C_V_we1),
    .d1(local_C_V_d1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln1000_fu_266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln1000_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln1000_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state6) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state6) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten13_reg_137 <= add_ln1000_reg_493;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten13_reg_137 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        indvar_flatten6_reg_233 <= 5'd0;
    end else if (((icmp_ln927_fu_416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten6_reg_233 <= add_ln927_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln849_fu_278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_148 <= add_ln849_fu_284_p2;
    end else if (((icmp_ln1000_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_148 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_054_0_i_i_0_reg_255 <= 2'd0;
    end else if (((icmp_ln927_fu_416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_054_0_i_i_0_reg_255 <= add_ln700_5_fu_483_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln849_reg_498 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_062_0_i_i_reg_159 <= select_ln1371_2_reg_507;
    end else if (((icmp_ln1000_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_062_0_i_i_reg_159 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_064_0_i_i_0_reg_244 <= 4'd0;
    end else if (((icmp_ln927_reg_527 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_064_0_i_i_0_reg_244 <= select_ln544_3_reg_536;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln849_fu_278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_076_0_i_i_reg_170 <= c7_V_fu_343_p2;
    end else if (((icmp_ln1000_fu_266_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        p_076_0_i_i_reg_170 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln1000_reg_493 <= add_ln1000_fu_272_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln849_reg_498 <= icmp_ln849_fu_278_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln927_reg_527 <= icmp_ln927_fu_416_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln849_fu_278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_C_V_addr_1_reg_516 <= zext_ln321_fu_338_p1;
        trunc_ln1371_reg_512 <= trunc_ln1371_fu_326_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln849_fu_278_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln1371_2_reg_507 <= select_ln1371_2_fu_310_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln927_fu_416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln544_3_reg_536 <= select_ln544_3_fu_448_p3;
    end
end

always @ (*) begin
    if ((icmp_ln849_fu_278_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln927_fu_416_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1000_fu_266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln849_reg_498 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_p_062_0_i_i_phi_fu_163_p4 = select_ln1371_2_reg_507;
    end else begin
        ap_phi_mux_p_062_0_i_i_phi_fu_163_p4 = p_062_0_i_i_reg_159;
    end
end

always @ (*) begin
    if (((icmp_ln927_reg_527 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_p_064_0_i_i_0_phi_fu_248_p4 = select_ln544_3_reg_536;
    end else begin
        ap_phi_mux_p_064_0_i_i_0_phi_fu_248_p4 = p_064_0_i_i_0_reg_244;
    end
end

always @ (*) begin
    if ((((icmp_ln849_reg_498 == 1'd0) & (trunc_ln1371_reg_512 == 2'd0)) | ((icmp_ln849_reg_498 == 1'd0) & (trunc_ln1371_reg_512 == 2'd1)) | ((icmp_ln849_reg_498 == 1'd0) & (trunc_ln1371_reg_512 == 2'd2)))) begin
        ap_phi_mux_v1_V_phi_fu_184_p8 = {{local_C_V_q0[127:96]}};
    end else if (((icmp_ln849_reg_498 == 1'd0) & (trunc_ln1371_reg_512 == 2'd3))) begin
        ap_phi_mux_v1_V_phi_fu_184_p8 = data_split_0_V_4_fu_395_p1;
    end else begin
        ap_phi_mux_v1_V_phi_fu_184_p8 = ap_phi_reg_pp0_iter1_v1_V_reg_181;
    end
end

always @ (*) begin
    if (((icmp_ln849_reg_498 == 1'd0) & (trunc_ln1371_reg_512 == 2'd2))) begin
        ap_phi_mux_v2_V_10_phi_fu_197_p8 = data_split_0_V_4_fu_395_p1;
    end else if ((((icmp_ln849_reg_498 == 1'd0) & (trunc_ln1371_reg_512 == 2'd0)) | ((icmp_ln849_reg_498 == 1'd0) & (trunc_ln1371_reg_512 == 2'd1)) | ((icmp_ln849_reg_498 == 1'd0) & (trunc_ln1371_reg_512 == 2'd3)))) begin
        ap_phi_mux_v2_V_10_phi_fu_197_p8 = {{local_C_V_q0[95:64]}};
    end else begin
        ap_phi_mux_v2_V_10_phi_fu_197_p8 = ap_phi_reg_pp0_iter1_v2_V_10_reg_194;
    end
end

always @ (*) begin
    if (((icmp_ln849_reg_498 == 1'd0) & (trunc_ln1371_reg_512 == 2'd1))) begin
        ap_phi_mux_v2_V_9_phi_fu_210_p8 = data_split_0_V_4_fu_395_p1;
    end else if ((((icmp_ln849_reg_498 == 1'd0) & (trunc_ln1371_reg_512 == 2'd0)) | ((icmp_ln849_reg_498 == 1'd0) & (trunc_ln1371_reg_512 == 2'd2)) | ((icmp_ln849_reg_498 == 1'd0) & (trunc_ln1371_reg_512 == 2'd3)))) begin
        ap_phi_mux_v2_V_9_phi_fu_210_p8 = {{local_C_V_q0[63:32]}};
    end else begin
        ap_phi_mux_v2_V_9_phi_fu_210_p8 = ap_phi_reg_pp0_iter1_v2_V_9_reg_207;
    end
end

always @ (*) begin
    if (((icmp_ln849_reg_498 == 1'd0) & (trunc_ln1371_reg_512 == 2'd0))) begin
        ap_phi_mux_v2_V_phi_fu_223_p8 = data_split_0_V_4_fu_395_p1;
    end else if ((((icmp_ln849_reg_498 == 1'd0) & (trunc_ln1371_reg_512 == 2'd1)) | ((icmp_ln849_reg_498 == 1'd0) & (trunc_ln1371_reg_512 == 2'd2)) | ((icmp_ln849_reg_498 == 1'd0) & (trunc_ln1371_reg_512 == 2'd3)))) begin
        ap_phi_mux_v2_V_phi_fu_223_p8 = data_split_0_V_fu_349_p1;
    end else begin
        ap_phi_mux_v2_V_phi_fu_223_p8 = ap_phi_reg_pp0_iter1_v2_V_reg_220;
    end
end

always @ (*) begin
    if (((icmp_ln1000_fu_266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln849_reg_498 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fifo_C_drain_local_in_V_blk_n = fifo_C_drain_local_in_V_empty_n;
    end else begin
        fifo_C_drain_local_in_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln849_reg_498 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_C_drain_local_in_V_read = 1'b1;
    end else begin
        fifo_C_drain_local_in_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln927_reg_527 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        fifo_C_drain_out_V_V_blk_n = fifo_C_drain_out_V_V_full_n;
    end else begin
        fifo_C_drain_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln927_reg_527 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        fifo_C_drain_out_V_V_write = 1'b1;
    end else begin
        fifo_C_drain_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        local_C_V_address0 = zext_ln321_4_fu_478_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        local_C_V_address0 = zext_ln321_fu_338_p1;
    end else begin
        local_C_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        local_C_V_ce0 = 1'b1;
    end else begin
        local_C_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_C_V_ce1 = 1'b1;
    end else begin
        local_C_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln849_reg_498 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_C_V_we1 = 1'b1;
    end else begin
        local_C_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln1000_fu_266_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln849_fu_278_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln849_fu_278_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln927_fu_416_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln927_fu_416_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1000_fu_272_p2 = (indvar_flatten13_reg_137 + 5'd1);

assign add_ln321_fu_472_p2 = (zext_ln321_3_fu_468_p1 + zext_ln929_fu_464_p1);

assign add_ln700_5_fu_483_p2 = (select_ln544_fu_440_p3 + 2'd1);

assign add_ln700_fu_428_p2 = (ap_phi_mux_p_064_0_i_i_0_phi_fu_248_p4 + 4'd1);

assign add_ln849_fu_284_p2 = (indvar_flatten_reg_148 + 7'd1);

assign add_ln927_fu_422_p2 = (indvar_flatten6_reg_233 + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln849_reg_498 == 1'd0) & (fifo_C_drain_local_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln849_reg_498 == 1'd0) & (fifo_C_drain_local_in_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((icmp_ln927_reg_527 == 1'd0) & (fifo_C_drain_out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln927_reg_527 == 1'd0) & (fifo_C_drain_out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln927_reg_527 == 1'd0) & (fifo_C_drain_out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((icmp_ln849_reg_498 == 1'd0) & (fifo_C_drain_local_in_V_empty_n == 1'b0));
end

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp1_stage0_iter1 = ((icmp_ln927_reg_527 == 1'd0) & (fifo_C_drain_out_V_V_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp0_iter1_v1_V_reg_181 = 'bx;

assign ap_phi_reg_pp0_iter1_v2_V_10_reg_194 = 'bx;

assign ap_phi_reg_pp0_iter1_v2_V_9_reg_207 = 'bx;

assign ap_phi_reg_pp0_iter1_v2_V_reg_220 = 'bx;

assign c6_V_fu_290_p2 = (4'd1 + ap_phi_mux_p_062_0_i_i_phi_fu_163_p4);

assign c7_V_fu_343_p2 = (select_ln1371_fu_302_p3 + 4'd1);

assign data_split_0_V_4_fu_395_p1 = fifo_C_drain_local_in_V_dout;

assign data_split_0_V_fu_349_p1 = local_C_V_q0[31:0];

assign fifo_C_drain_out_V_V_din = local_C_V_q0;

assign icmp_ln1000_fu_266_p2 = ((indvar_flatten13_reg_137 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln849_fu_278_p2 = ((indvar_flatten_reg_148 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_296_p2 = ((p_076_0_i_i_reg_170 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln927_fu_416_p2 = ((indvar_flatten6_reg_233 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln929_fu_434_p2 = ((p_054_0_i_i_0_reg_255 == 2'd2) ? 1'b1 : 1'b0);

assign local_C_V_d1 = {{{{ap_phi_mux_v1_V_phi_fu_184_p8}, {ap_phi_mux_v2_V_10_phi_fu_197_p8}}, {ap_phi_mux_v2_V_9_phi_fu_210_p8}}, {ap_phi_mux_v2_V_phi_fu_223_p8}};

assign select_ln1371_2_fu_310_p3 = ((icmp_ln851_fu_296_p2[0:0] === 1'b1) ? c6_V_fu_290_p2 : ap_phi_mux_p_062_0_i_i_phi_fu_163_p4);

assign select_ln1371_fu_302_p3 = ((icmp_ln851_fu_296_p2[0:0] === 1'b1) ? 4'd0 : p_076_0_i_i_reg_170);

assign select_ln544_3_fu_448_p3 = ((icmp_ln929_fu_434_p2[0:0] === 1'b1) ? add_ln700_fu_428_p2 : ap_phi_mux_p_064_0_i_i_0_phi_fu_248_p4);

assign select_ln544_fu_440_p3 = ((icmp_ln929_fu_434_p2[0:0] === 1'b1) ? 2'd0 : p_054_0_i_i_0_reg_255);

assign tmp_9_fu_330_p3 = {{select_ln1371_fu_302_p3}, {tmp_fu_318_p3}};

assign tmp_fu_318_p3 = select_ln1371_2_fu_310_p3[32'd2];

assign tmp_s_fu_456_p3 = {{select_ln544_3_fu_448_p3}, {1'd0}};

assign trunc_ln1371_fu_326_p1 = select_ln1371_2_fu_310_p3[1:0];

assign zext_ln321_3_fu_468_p1 = select_ln544_fu_440_p3;

assign zext_ln321_4_fu_478_p1 = add_ln321_fu_472_p2;

assign zext_ln321_fu_338_p1 = tmp_9_fu_330_p3;

assign zext_ln929_fu_464_p1 = tmp_s_fu_456_p3;

endmodule //C_drain_IO_L1_out_boundary_wrapper
