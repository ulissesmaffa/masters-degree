// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _C_drain_IO_L1_out_HH_
#define _C_drain_IO_L1_out_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "C_drain_IO_L1_out_boundary_wrapper135_local_C_V.h"

namespace ap_rtl {

struct C_drain_IO_L1_out : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<128> > fifo_C_drain_in_V_V_dout;
    sc_in< sc_logic > fifo_C_drain_in_V_V_empty_n;
    sc_out< sc_logic > fifo_C_drain_in_V_V_read;
    sc_out< sc_lv<128> > fifo_C_drain_out_V_V_din;
    sc_in< sc_logic > fifo_C_drain_out_V_V_full_n;
    sc_out< sc_logic > fifo_C_drain_out_V_V_write;
    sc_in< sc_lv<32> > fifo_C_drain_local_in_V_dout;
    sc_in< sc_logic > fifo_C_drain_local_in_V_empty_n;
    sc_out< sc_logic > fifo_C_drain_local_in_V_read;


    // Module declarations
    C_drain_IO_L1_out(sc_module_name name);
    SC_HAS_PROCESS(C_drain_IO_L1_out);

    ~C_drain_IO_L1_out();

    sc_trace_file* mVcdFile;

    C_drain_IO_L1_out_boundary_wrapper135_local_C_V* local_C_V_U;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > fifo_C_drain_in_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > icmp_ln899_reg_607;
    sc_signal< sc_logic > fifo_C_drain_out_V_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< bool > ap_block_pp2_stage0;
    sc_signal< sc_lv<1> > icmp_ln885_reg_616;
    sc_signal< sc_logic > fifo_C_drain_local_in_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln849_reg_565;
    sc_signal< sc_lv<7> > indvar_flatten_reg_163;
    sc_signal< sc_lv<4> > p_062_0_i_reg_174;
    sc_signal< sc_lv<4> > p_076_0_i_reg_185;
    sc_signal< sc_lv<5> > indvar_flatten13_reg_259;
    sc_signal< sc_lv<5> > indvar_flatten6_reg_270;
    sc_signal< sc_lv<4> > p_044_0_i_reg_281;
    sc_signal< sc_lv<2> > p_068_0_i_reg_292;
    sc_signal< sc_lv<1> > icmp_ln953_fu_303_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > add_ln953_fu_309_p2;
    sc_signal< sc_lv<5> > add_ln953_reg_560;
    sc_signal< sc_lv<1> > icmp_ln849_fu_315_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<7> > add_ln849_fu_321_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<4> > select_ln1371_3_fu_347_p3;
    sc_signal< sc_lv<4> > select_ln1371_3_reg_574;
    sc_signal< sc_lv<2> > trunc_ln1371_fu_363_p1;
    sc_signal< sc_lv<2> > trunc_ln1371_reg_579;
    sc_signal< sc_lv<4> > local_C_V_addr_reg_583;
    sc_signal< sc_lv<4> > c7_V_fu_380_p2;
    sc_signal< sc_lv<1> > icmp_ln882_fu_453_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<2> > c4_V_fu_459_p2;
    sc_signal< sc_lv<2> > c4_V_reg_598;
    sc_signal< sc_lv<1> > icmp_ln879_fu_465_p2;
    sc_signal< sc_lv<1> > icmp_ln899_fu_471_p2;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<5> > add_ln899_fu_477_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<1> > icmp_ln885_fu_483_p2;
    sc_signal< bool > ap_block_state10_pp2_stage0_iter0;
    sc_signal< bool > ap_block_state11_pp2_stage0_iter1;
    sc_signal< bool > ap_block_pp2_stage0_11001;
    sc_signal< sc_lv<5> > add_ln885_fu_489_p2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<4> > select_ln544_4_fu_515_p3;
    sc_signal< sc_lv<4> > select_ln544_4_reg_625;
    sc_signal< sc_lv<2> > c6_V_1_fu_550_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state7;
    sc_signal< bool > ap_block_pp2_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp2_exit_iter0_state10;
    sc_signal< sc_lv<4> > local_C_V_address0;
    sc_signal< sc_logic > local_C_V_ce0;
    sc_signal< sc_lv<128> > local_C_V_q0;
    sc_signal< sc_logic > local_C_V_ce1;
    sc_signal< sc_logic > local_C_V_we1;
    sc_signal< sc_lv<128> > local_C_V_d1;
    sc_signal< sc_lv<5> > indvar_flatten20_reg_152;
    sc_signal< sc_lv<4> > ap_phi_mux_p_062_0_i_phi_fu_178_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_v1_V_phi_fu_199_p8;
    sc_signal< sc_lv<32> > data_split_0_V_6_fu_432_p1;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter1_v1_V_reg_196;
    sc_signal< sc_lv<32> > ap_phi_mux_v2_V_14_phi_fu_212_p8;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter1_v2_V_14_reg_209;
    sc_signal< sc_lv<32> > ap_phi_mux_v2_V_13_phi_fu_225_p8;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter1_v2_V_13_reg_222;
    sc_signal< sc_lv<32> > ap_phi_mux_v2_V_phi_fu_238_p8;
    sc_signal< sc_lv<32> > data_split_0_V_fu_386_p1;
    sc_signal< sc_lv<32> > ap_phi_reg_pp0_iter1_v2_V_reg_235;
    sc_signal< sc_lv<2> > p_075_0_i_reg_248;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > ap_phi_mux_p_044_0_i_phi_fu_285_p4;
    sc_signal< sc_lv<64> > zext_ln321_fu_375_p1;
    sc_signal< sc_lv<64> > zext_ln321_6_fu_545_p1;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< bool > ap_block_pp2_stage0_01001;
    sc_signal< sc_lv<1> > icmp_ln851_fu_333_p2;
    sc_signal< sc_lv<4> > c6_V_fu_327_p2;
    sc_signal< sc_lv<4> > select_ln1371_fu_339_p3;
    sc_signal< sc_lv<1> > tmp_fu_355_p3;
    sc_signal< sc_lv<5> > tmp_2_fu_367_p3;
    sc_signal< sc_lv<1> > icmp_ln887_fu_501_p2;
    sc_signal< sc_lv<4> > c5_V_fu_495_p2;
    sc_signal< sc_lv<5> > tmp_3_fu_523_p3;
    sc_signal< sc_lv<2> > select_ln544_fu_507_p3;
    sc_signal< sc_lv<6> > zext_ln321_5_fu_535_p1;
    sc_signal< sc_lv<6> > zext_ln887_fu_531_p1;
    sc_signal< sc_lv<6> > add_ln321_fu_539_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_logic > ap_idle_pp2;
    sc_signal< sc_logic > ap_enable_pp2;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_pp0_stage0;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_pp1_stage0;
    static const sc_lv<8> ap_ST_fsm_state9;
    static const sc_lv<8> ap_ST_fsm_pp2_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_5F;
    static const sc_lv<32> ap_const_lv32_60;
    static const sc_lv<32> ap_const_lv32_7F;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln321_fu_539_p2();
    void thread_add_ln849_fu_321_p2();
    void thread_add_ln885_fu_489_p2();
    void thread_add_ln899_fu_477_p2();
    void thread_add_ln953_fu_309_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp2_stage0();
    void thread_ap_block_pp2_stage0_01001();
    void thread_ap_block_pp2_stage0_11001();
    void thread_ap_block_pp2_stage0_subdone();
    void thread_ap_block_state10_pp2_stage0_iter0();
    void thread_ap_block_state11_pp2_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state7_pp1_stage0_iter0();
    void thread_ap_block_state8_pp1_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_condition_pp1_exit_iter0_state7();
    void thread_ap_condition_pp2_exit_iter0_state10();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_enable_pp2();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_idle_pp2();
    void thread_ap_phi_mux_p_044_0_i_phi_fu_285_p4();
    void thread_ap_phi_mux_p_062_0_i_phi_fu_178_p4();
    void thread_ap_phi_mux_v1_V_phi_fu_199_p8();
    void thread_ap_phi_mux_v2_V_13_phi_fu_225_p8();
    void thread_ap_phi_mux_v2_V_14_phi_fu_212_p8();
    void thread_ap_phi_mux_v2_V_phi_fu_238_p8();
    void thread_ap_phi_reg_pp0_iter1_v1_V_reg_196();
    void thread_ap_phi_reg_pp0_iter1_v2_V_13_reg_222();
    void thread_ap_phi_reg_pp0_iter1_v2_V_14_reg_209();
    void thread_ap_phi_reg_pp0_iter1_v2_V_reg_235();
    void thread_ap_ready();
    void thread_c4_V_fu_459_p2();
    void thread_c5_V_fu_495_p2();
    void thread_c6_V_1_fu_550_p2();
    void thread_c6_V_fu_327_p2();
    void thread_c7_V_fu_380_p2();
    void thread_data_split_0_V_6_fu_432_p1();
    void thread_data_split_0_V_fu_386_p1();
    void thread_fifo_C_drain_in_V_V_blk_n();
    void thread_fifo_C_drain_in_V_V_read();
    void thread_fifo_C_drain_local_in_V_blk_n();
    void thread_fifo_C_drain_local_in_V_read();
    void thread_fifo_C_drain_out_V_V_blk_n();
    void thread_fifo_C_drain_out_V_V_din();
    void thread_fifo_C_drain_out_V_V_write();
    void thread_icmp_ln849_fu_315_p2();
    void thread_icmp_ln851_fu_333_p2();
    void thread_icmp_ln879_fu_465_p2();
    void thread_icmp_ln882_fu_453_p2();
    void thread_icmp_ln885_fu_483_p2();
    void thread_icmp_ln887_fu_501_p2();
    void thread_icmp_ln899_fu_471_p2();
    void thread_icmp_ln953_fu_303_p2();
    void thread_local_C_V_address0();
    void thread_local_C_V_ce0();
    void thread_local_C_V_ce1();
    void thread_local_C_V_d1();
    void thread_local_C_V_we1();
    void thread_select_ln1371_3_fu_347_p3();
    void thread_select_ln1371_fu_339_p3();
    void thread_select_ln544_4_fu_515_p3();
    void thread_select_ln544_fu_507_p3();
    void thread_tmp_2_fu_367_p3();
    void thread_tmp_3_fu_523_p3();
    void thread_tmp_fu_355_p3();
    void thread_trunc_ln1371_fu_363_p1();
    void thread_zext_ln321_5_fu_535_p1();
    void thread_zext_ln321_6_fu_545_p1();
    void thread_zext_ln321_fu_375_p1();
    void thread_zext_ln887_fu_531_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
