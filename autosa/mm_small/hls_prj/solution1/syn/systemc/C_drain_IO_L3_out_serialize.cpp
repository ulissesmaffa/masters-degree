// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "C_drain_IO_L3_out_serialize.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic C_drain_IO_L3_out_serialize::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic C_drain_IO_L3_out_serialize::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> C_drain_IO_L3_out_serialize::ap_ST_fsm_state1 = "1";
const sc_lv<11> C_drain_IO_L3_out_serialize::ap_ST_fsm_state2 = "10";
const sc_lv<11> C_drain_IO_L3_out_serialize::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<11> C_drain_IO_L3_out_serialize::ap_ST_fsm_pp0_stage1 = "1000";
const sc_lv<11> C_drain_IO_L3_out_serialize::ap_ST_fsm_pp0_stage2 = "10000";
const sc_lv<11> C_drain_IO_L3_out_serialize::ap_ST_fsm_pp0_stage3 = "100000";
const sc_lv<11> C_drain_IO_L3_out_serialize::ap_ST_fsm_state9 = "1000000";
const sc_lv<11> C_drain_IO_L3_out_serialize::ap_ST_fsm_state10 = "10000000";
const sc_lv<11> C_drain_IO_L3_out_serialize::ap_ST_fsm_state11 = "100000000";
const sc_lv<11> C_drain_IO_L3_out_serialize::ap_ST_fsm_state12 = "1000000000";
const sc_lv<11> C_drain_IO_L3_out_serialize::ap_ST_fsm_state13 = "10000000000";
const sc_lv<32> C_drain_IO_L3_out_serialize::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool C_drain_IO_L3_out_serialize::ap_const_boolean_1 = true;
const sc_lv<1> C_drain_IO_L3_out_serialize::ap_const_lv1_0 = "0";
const sc_lv<3> C_drain_IO_L3_out_serialize::ap_const_lv3_0 = "000";
const sc_lv<2> C_drain_IO_L3_out_serialize::ap_const_lv2_0 = "00";
const sc_lv<4> C_drain_IO_L3_out_serialize::ap_const_lv4_0 = "0000";
const sc_lv<32> C_drain_IO_L3_out_serialize::ap_const_lv32_1 = "1";
const sc_lv<32> C_drain_IO_L3_out_serialize::ap_const_lv32_3 = "11";
const bool C_drain_IO_L3_out_serialize::ap_const_boolean_0 = false;
const sc_lv<32> C_drain_IO_L3_out_serialize::ap_const_lv32_A = "1010";
const sc_lv<32> C_drain_IO_L3_out_serialize::ap_const_lv32_4 = "100";
const sc_lv<32> C_drain_IO_L3_out_serialize::ap_const_lv32_5 = "101";
const sc_lv<32> C_drain_IO_L3_out_serialize::ap_const_lv32_2 = "10";
const sc_lv<1> C_drain_IO_L3_out_serialize::ap_const_lv1_1 = "1";
const sc_lv<9> C_drain_IO_L3_out_serialize::ap_const_lv9_0 = "000000000";
const sc_lv<32> C_drain_IO_L3_out_serialize::ap_const_lv32_100 = "100000000";
const sc_lv<64> C_drain_IO_L3_out_serialize::ap_const_lv64_FFFFFFFFFFFFFFFF = "1111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<32> C_drain_IO_L3_out_serialize::ap_const_lv32_6 = "110";
const sc_lv<32> C_drain_IO_L3_out_serialize::ap_const_lv32_1F = "11111";
const sc_lv<9> C_drain_IO_L3_out_serialize::ap_const_lv9_100 = "100000000";
const sc_lv<9> C_drain_IO_L3_out_serialize::ap_const_lv9_1 = "1";

C_drain_IO_L3_out_serialize::C_drain_IO_L3_out_serialize(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_C_V_blk_n_AW);
    sensitive << ( m_axi_C_V_AWREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_C_V_blk_n_B);
    sensitive << ( m_axi_C_V_BVALID );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_C_V_blk_n_W);
    sensitive << ( m_axi_C_V_WREADY );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( icmp_ln1164_reg_159_pp0_iter1_reg );

    SC_METHOD(thread_C_V_offset_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_V_offset_empty_n );

    SC_METHOD(thread_C_V_offset_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( C_V_offset_empty_n );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln1164_reg_159 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln1164_reg_159 );

    SC_METHOD(thread_ap_block_pp0_stage1);

    SC_METHOD(thread_ap_block_pp0_stage1_01001);
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( icmp_ln1164_reg_159 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_block_pp0_stage1_11001);
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln1164_reg_159 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_state8_io );

    SC_METHOD(thread_ap_block_pp0_stage1_subdone);
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln1164_reg_159 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_state8_io );

    SC_METHOD(thread_ap_block_pp0_stage2);

    SC_METHOD(thread_ap_block_pp0_stage2_11001);
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( icmp_ln1164_reg_159 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_block_pp0_stage2_subdone);
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( icmp_ln1164_reg_159 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_block_pp0_stage3);

    SC_METHOD(thread_ap_block_pp0_stage3_11001);
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( icmp_ln1164_reg_159 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_block_pp0_stage3_subdone);
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( icmp_ln1164_reg_159 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( C_V_offset_empty_n );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage1_iter0);
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( icmp_ln1164_reg_159 );

    SC_METHOD(thread_ap_block_state5_pp0_stage2_iter0);
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( icmp_ln1164_reg_159 );

    SC_METHOD(thread_ap_block_state6_pp0_stage3_iter0);
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( icmp_ln1164_reg_159 );

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter1);
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( icmp_ln1164_reg_159 );

    SC_METHOD(thread_ap_block_state8_io);
    sensitive << ( m_axi_C_V_WREADY );
    sensitive << ( icmp_ln1164_reg_159_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state8_pp0_stage1_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln1164_fu_127_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( m_axi_C_V_BVALID );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_phi_mux_t_V_phi_fu_100_p4);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln1164_reg_159 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( t_V_reg_96 );
    sensitive << ( i_V_reg_163 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( m_axi_C_V_BVALID );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_fifo_C_drain_local_in_V_V_blk_n);
    sensitive << ( fifo_C_drain_local_in_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage1 );
    sensitive << ( icmp_ln1164_reg_159 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_block_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_block_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_fifo_C_drain_local_in_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln1164_reg_159 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage2 );
    sensitive << ( ap_CS_fsm_pp0_stage3 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_block_pp0_stage1_11001 );
    sensitive << ( ap_block_pp0_stage2_11001 );
    sensitive << ( ap_block_pp0_stage3_11001 );

    SC_METHOD(thread_i_V_fu_133_p2);
    sensitive << ( ap_phi_mux_t_V_phi_fu_100_p4 );

    SC_METHOD(thread_icmp_ln1164_fu_127_p2);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_phi_mux_t_V_phi_fu_100_p4 );

    SC_METHOD(thread_m_axi_C_V_ARADDR);

    SC_METHOD(thread_m_axi_C_V_ARBURST);

    SC_METHOD(thread_m_axi_C_V_ARCACHE);

    SC_METHOD(thread_m_axi_C_V_ARID);

    SC_METHOD(thread_m_axi_C_V_ARLEN);

    SC_METHOD(thread_m_axi_C_V_ARLOCK);

    SC_METHOD(thread_m_axi_C_V_ARPROT);

    SC_METHOD(thread_m_axi_C_V_ARQOS);

    SC_METHOD(thread_m_axi_C_V_ARREGION);

    SC_METHOD(thread_m_axi_C_V_ARSIZE);

    SC_METHOD(thread_m_axi_C_V_ARUSER);

    SC_METHOD(thread_m_axi_C_V_ARVALID);

    SC_METHOD(thread_m_axi_C_V_AWADDR);
    sensitive << ( m_axi_C_V_AWREADY );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln1159_fu_117_p1 );

    SC_METHOD(thread_m_axi_C_V_AWBURST);

    SC_METHOD(thread_m_axi_C_V_AWCACHE);

    SC_METHOD(thread_m_axi_C_V_AWID);

    SC_METHOD(thread_m_axi_C_V_AWLEN);
    sensitive << ( m_axi_C_V_AWREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_C_V_AWLOCK);

    SC_METHOD(thread_m_axi_C_V_AWPROT);

    SC_METHOD(thread_m_axi_C_V_AWQOS);

    SC_METHOD(thread_m_axi_C_V_AWREGION);

    SC_METHOD(thread_m_axi_C_V_AWSIZE);

    SC_METHOD(thread_m_axi_C_V_AWUSER);

    SC_METHOD(thread_m_axi_C_V_AWVALID);
    sensitive << ( m_axi_C_V_AWREADY );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_m_axi_C_V_BREADY);
    sensitive << ( m_axi_C_V_BVALID );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_m_axi_C_V_RREADY);

    SC_METHOD(thread_m_axi_C_V_WDATA);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln1164_reg_159_pp0_iter1_reg );
    sensitive << ( tmp_V_reg_168 );
    sensitive << ( tmp_V_2_reg_173 );
    sensitive << ( tmp_V_3_reg_178 );
    sensitive << ( tmp_V_4_reg_183 );
    sensitive << ( ap_block_pp0_stage1_01001 );

    SC_METHOD(thread_m_axi_C_V_WID);

    SC_METHOD(thread_m_axi_C_V_WLAST);

    SC_METHOD(thread_m_axi_C_V_WSTRB);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln1164_reg_159_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage1_01001 );

    SC_METHOD(thread_m_axi_C_V_WUSER);

    SC_METHOD(thread_m_axi_C_V_WVALID);
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln1164_reg_159_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage1_11001 );

    SC_METHOD(thread_zext_ln1159_fu_117_p1);
    sensitive << ( C_V_offset1_i_reg_148 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_C_V_AWREADY );
    sensitive << ( m_axi_C_V_BVALID );
    sensitive << ( C_V_offset_empty_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp0_stage1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln1164_fu_127_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp0_stage3_subdone );
    sensitive << ( ap_block_pp0_stage1_subdone );
    sensitive << ( ap_block_pp0_stage2_subdone );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "C_drain_IO_L3_out_serialize_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, m_axi_C_V_AWVALID, "(port)m_axi_C_V_AWVALID");
    sc_trace(mVcdFile, m_axi_C_V_AWREADY, "(port)m_axi_C_V_AWREADY");
    sc_trace(mVcdFile, m_axi_C_V_AWADDR, "(port)m_axi_C_V_AWADDR");
    sc_trace(mVcdFile, m_axi_C_V_AWID, "(port)m_axi_C_V_AWID");
    sc_trace(mVcdFile, m_axi_C_V_AWLEN, "(port)m_axi_C_V_AWLEN");
    sc_trace(mVcdFile, m_axi_C_V_AWSIZE, "(port)m_axi_C_V_AWSIZE");
    sc_trace(mVcdFile, m_axi_C_V_AWBURST, "(port)m_axi_C_V_AWBURST");
    sc_trace(mVcdFile, m_axi_C_V_AWLOCK, "(port)m_axi_C_V_AWLOCK");
    sc_trace(mVcdFile, m_axi_C_V_AWCACHE, "(port)m_axi_C_V_AWCACHE");
    sc_trace(mVcdFile, m_axi_C_V_AWPROT, "(port)m_axi_C_V_AWPROT");
    sc_trace(mVcdFile, m_axi_C_V_AWQOS, "(port)m_axi_C_V_AWQOS");
    sc_trace(mVcdFile, m_axi_C_V_AWREGION, "(port)m_axi_C_V_AWREGION");
    sc_trace(mVcdFile, m_axi_C_V_AWUSER, "(port)m_axi_C_V_AWUSER");
    sc_trace(mVcdFile, m_axi_C_V_WVALID, "(port)m_axi_C_V_WVALID");
    sc_trace(mVcdFile, m_axi_C_V_WREADY, "(port)m_axi_C_V_WREADY");
    sc_trace(mVcdFile, m_axi_C_V_WDATA, "(port)m_axi_C_V_WDATA");
    sc_trace(mVcdFile, m_axi_C_V_WSTRB, "(port)m_axi_C_V_WSTRB");
    sc_trace(mVcdFile, m_axi_C_V_WLAST, "(port)m_axi_C_V_WLAST");
    sc_trace(mVcdFile, m_axi_C_V_WID, "(port)m_axi_C_V_WID");
    sc_trace(mVcdFile, m_axi_C_V_WUSER, "(port)m_axi_C_V_WUSER");
    sc_trace(mVcdFile, m_axi_C_V_ARVALID, "(port)m_axi_C_V_ARVALID");
    sc_trace(mVcdFile, m_axi_C_V_ARREADY, "(port)m_axi_C_V_ARREADY");
    sc_trace(mVcdFile, m_axi_C_V_ARADDR, "(port)m_axi_C_V_ARADDR");
    sc_trace(mVcdFile, m_axi_C_V_ARID, "(port)m_axi_C_V_ARID");
    sc_trace(mVcdFile, m_axi_C_V_ARLEN, "(port)m_axi_C_V_ARLEN");
    sc_trace(mVcdFile, m_axi_C_V_ARSIZE, "(port)m_axi_C_V_ARSIZE");
    sc_trace(mVcdFile, m_axi_C_V_ARBURST, "(port)m_axi_C_V_ARBURST");
    sc_trace(mVcdFile, m_axi_C_V_ARLOCK, "(port)m_axi_C_V_ARLOCK");
    sc_trace(mVcdFile, m_axi_C_V_ARCACHE, "(port)m_axi_C_V_ARCACHE");
    sc_trace(mVcdFile, m_axi_C_V_ARPROT, "(port)m_axi_C_V_ARPROT");
    sc_trace(mVcdFile, m_axi_C_V_ARQOS, "(port)m_axi_C_V_ARQOS");
    sc_trace(mVcdFile, m_axi_C_V_ARREGION, "(port)m_axi_C_V_ARREGION");
    sc_trace(mVcdFile, m_axi_C_V_ARUSER, "(port)m_axi_C_V_ARUSER");
    sc_trace(mVcdFile, m_axi_C_V_RVALID, "(port)m_axi_C_V_RVALID");
    sc_trace(mVcdFile, m_axi_C_V_RREADY, "(port)m_axi_C_V_RREADY");
    sc_trace(mVcdFile, m_axi_C_V_RDATA, "(port)m_axi_C_V_RDATA");
    sc_trace(mVcdFile, m_axi_C_V_RLAST, "(port)m_axi_C_V_RLAST");
    sc_trace(mVcdFile, m_axi_C_V_RID, "(port)m_axi_C_V_RID");
    sc_trace(mVcdFile, m_axi_C_V_RUSER, "(port)m_axi_C_V_RUSER");
    sc_trace(mVcdFile, m_axi_C_V_RRESP, "(port)m_axi_C_V_RRESP");
    sc_trace(mVcdFile, m_axi_C_V_BVALID, "(port)m_axi_C_V_BVALID");
    sc_trace(mVcdFile, m_axi_C_V_BREADY, "(port)m_axi_C_V_BREADY");
    sc_trace(mVcdFile, m_axi_C_V_BRESP, "(port)m_axi_C_V_BRESP");
    sc_trace(mVcdFile, m_axi_C_V_BID, "(port)m_axi_C_V_BID");
    sc_trace(mVcdFile, m_axi_C_V_BUSER, "(port)m_axi_C_V_BUSER");
    sc_trace(mVcdFile, C_V_offset_dout, "(port)C_V_offset_dout");
    sc_trace(mVcdFile, C_V_offset_empty_n, "(port)C_V_offset_empty_n");
    sc_trace(mVcdFile, C_V_offset_read, "(port)C_V_offset_read");
    sc_trace(mVcdFile, fifo_C_drain_local_in_V_V_dout, "(port)fifo_C_drain_local_in_V_V_dout");
    sc_trace(mVcdFile, fifo_C_drain_local_in_V_V_empty_n, "(port)fifo_C_drain_local_in_V_V_empty_n");
    sc_trace(mVcdFile, fifo_C_drain_local_in_V_V_read, "(port)fifo_C_drain_local_in_V_V_read");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, C_V_blk_n_AW, "C_V_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, C_V_blk_n_W, "C_V_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage1, "ap_CS_fsm_pp0_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage1, "ap_block_pp0_stage1");
    sc_trace(mVcdFile, icmp_ln1164_reg_159, "icmp_ln1164_reg_159");
    sc_trace(mVcdFile, icmp_ln1164_reg_159_pp0_iter1_reg, "icmp_ln1164_reg_159_pp0_iter1_reg");
    sc_trace(mVcdFile, C_V_blk_n_B, "C_V_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, C_V_offset_blk_n, "C_V_offset_blk_n");
    sc_trace(mVcdFile, fifo_C_drain_local_in_V_V_blk_n, "fifo_C_drain_local_in_V_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage2, "ap_CS_fsm_pp0_stage2");
    sc_trace(mVcdFile, ap_block_pp0_stage2, "ap_block_pp0_stage2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage3, "ap_CS_fsm_pp0_stage3");
    sc_trace(mVcdFile, ap_block_pp0_stage3, "ap_block_pp0_stage3");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, t_V_reg_96, "t_V_reg_96");
    sc_trace(mVcdFile, C_V_offset1_i_reg_148, "C_V_offset1_i_reg_148");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, icmp_ln1164_fu_127_p2, "icmp_ln1164_fu_127_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter1, "ap_block_state7_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_V_fu_133_p2, "i_V_fu_133_p2");
    sc_trace(mVcdFile, i_V_reg_163, "i_V_reg_163");
    sc_trace(mVcdFile, tmp_V_reg_168, "tmp_V_reg_168");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage1_iter0, "ap_block_state4_pp0_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage1_iter1, "ap_block_state8_pp0_stage1_iter1");
    sc_trace(mVcdFile, ap_block_state8_io, "ap_block_state8_io");
    sc_trace(mVcdFile, ap_block_pp0_stage1_11001, "ap_block_pp0_stage1_11001");
    sc_trace(mVcdFile, tmp_V_2_reg_173, "tmp_V_2_reg_173");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage2_iter0, "ap_block_state5_pp0_stage2_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage2_11001, "ap_block_pp0_stage2_11001");
    sc_trace(mVcdFile, tmp_V_3_reg_178, "tmp_V_3_reg_178");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage3_iter0, "ap_block_state6_pp0_stage3_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage3_11001, "ap_block_pp0_stage3_11001");
    sc_trace(mVcdFile, tmp_V_4_reg_183, "tmp_V_4_reg_183");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_block_pp0_stage3_subdone, "ap_block_pp0_stage3_subdone");
    sc_trace(mVcdFile, ap_block_pp0_stage1_subdone, "ap_block_pp0_stage1_subdone");
    sc_trace(mVcdFile, ap_phi_mux_t_V_phi_fu_100_p4, "ap_phi_mux_t_V_phi_fu_100_p4");
    sc_trace(mVcdFile, zext_ln1159_fu_117_p1, "zext_ln1159_fu_117_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage1_01001, "ap_block_pp0_stage1_01001");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp0_stage2_subdone, "ap_block_pp0_stage2_subdone");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

C_drain_IO_L3_out_serialize::~C_drain_IO_L3_out_serialize() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void C_drain_IO_L3_out_serialize::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
                    esl_seteq<1,1,1>(m_axi_C_V_BVALID.read(), ap_const_logic_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(m_axi_C_V_AWREADY.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
              esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0)))) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(m_axi_C_V_AWREADY.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        t_V_reg_96 = i_V_reg_163.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(m_axi_C_V_AWREADY.read(), ap_const_logic_1))) {
        t_V_reg_96 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read())))) {
        C_V_offset1_i_reg_148 = C_V_offset_dout.read().range(31, 6);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_V_reg_163 = i_V_fu_133_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln1164_reg_159 = icmp_ln1164_fu_127_p2.read();
        icmp_ln1164_reg_159_pp0_iter1_reg = icmp_ln1164_reg_159.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0))) {
        tmp_V_2_reg_173 = fifo_C_drain_local_in_V_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0))) {
        tmp_V_3_reg_178 = fifo_C_drain_local_in_V_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_V_4_reg_183 = fifo_C_drain_local_in_V_V_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        tmp_V_reg_168 = fifo_C_drain_local_in_V_V_dout.read();
    }
}

void C_drain_IO_L3_out_serialize::thread_C_V_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        C_V_blk_n_AW = m_axi_C_V_AWREADY.read();
    } else {
        C_V_blk_n_AW = ap_const_logic_1;
    }
}

void C_drain_IO_L3_out_serialize::thread_C_V_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        C_V_blk_n_B = m_axi_C_V_BVALID.read();
    } else {
        C_V_blk_n_B = ap_const_logic_1;
    }
}

void C_drain_IO_L3_out_serialize::thread_C_V_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159_pp0_iter1_reg.read()))) {
        C_V_blk_n_W = m_axi_C_V_WREADY.read();
    } else {
        C_V_blk_n_W = ap_const_logic_1;
    }
}

void C_drain_IO_L3_out_serialize::thread_C_V_offset_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_V_offset_blk_n = C_V_offset_empty_n.read();
    } else {
        C_V_offset_blk_n = ap_const_logic_1;
    }
}

void C_drain_IO_L3_out_serialize::thread_C_V_offset_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read())))) {
        C_V_offset_read = ap_const_logic_1;
    } else {
        C_V_offset_read = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out_serialize::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void C_drain_IO_L3_out_serialize::thread_ap_CS_fsm_pp0_stage1() {
    ap_CS_fsm_pp0_stage1 = ap_CS_fsm.read()[3];
}

void C_drain_IO_L3_out_serialize::thread_ap_CS_fsm_pp0_stage2() {
    ap_CS_fsm_pp0_stage2 = ap_CS_fsm.read()[4];
}

void C_drain_IO_L3_out_serialize::thread_ap_CS_fsm_pp0_stage3() {
    ap_CS_fsm_pp0_stage3 = ap_CS_fsm.read()[5];
}

void C_drain_IO_L3_out_serialize::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void C_drain_IO_L3_out_serialize::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[10];
}

void C_drain_IO_L3_out_serialize::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void C_drain_IO_L3_out_serialize::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void C_drain_IO_L3_out_serialize::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_local_in_V_V_empty_n.read()));
}

void C_drain_IO_L3_out_serialize::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_local_in_V_V_empty_n.read()));
}

void C_drain_IO_L3_out_serialize::thread_ap_block_pp0_stage1() {
    ap_block_pp0_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void C_drain_IO_L3_out_serialize::thread_ap_block_pp0_stage1_01001() {
    ap_block_pp0_stage1_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_local_in_V_V_empty_n.read()));
}

void C_drain_IO_L3_out_serialize::thread_ap_block_pp0_stage1_11001() {
    ap_block_pp0_stage1_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_local_in_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state8_io.read())));
}

void C_drain_IO_L3_out_serialize::thread_ap_block_pp0_stage1_subdone() {
    ap_block_pp0_stage1_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_local_in_V_V_empty_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state8_io.read())));
}

void C_drain_IO_L3_out_serialize::thread_ap_block_pp0_stage2() {
    ap_block_pp0_stage2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void C_drain_IO_L3_out_serialize::thread_ap_block_pp0_stage2_11001() {
    ap_block_pp0_stage2_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_local_in_V_V_empty_n.read()));
}

void C_drain_IO_L3_out_serialize::thread_ap_block_pp0_stage2_subdone() {
    ap_block_pp0_stage2_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_local_in_V_V_empty_n.read()));
}

void C_drain_IO_L3_out_serialize::thread_ap_block_pp0_stage3() {
    ap_block_pp0_stage3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void C_drain_IO_L3_out_serialize::thread_ap_block_pp0_stage3_11001() {
    ap_block_pp0_stage3_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_local_in_V_V_empty_n.read()));
}

void C_drain_IO_L3_out_serialize::thread_ap_block_pp0_stage3_subdone() {
    ap_block_pp0_stage3_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_local_in_V_V_empty_n.read()));
}

void C_drain_IO_L3_out_serialize::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read()));
}

void C_drain_IO_L3_out_serialize::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void C_drain_IO_L3_out_serialize::thread_ap_block_state4_pp0_stage1_iter0() {
    ap_block_state4_pp0_stage1_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_local_in_V_V_empty_n.read()));
}

void C_drain_IO_L3_out_serialize::thread_ap_block_state5_pp0_stage2_iter0() {
    ap_block_state5_pp0_stage2_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_local_in_V_V_empty_n.read()));
}

void C_drain_IO_L3_out_serialize::thread_ap_block_state6_pp0_stage3_iter0() {
    ap_block_state6_pp0_stage3_iter0 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_local_in_V_V_empty_n.read()));
}

void C_drain_IO_L3_out_serialize::thread_ap_block_state7_pp0_stage0_iter1() {
    ap_block_state7_pp0_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && esl_seteq<1,1,1>(ap_const_logic_0, fifo_C_drain_local_in_V_V_empty_n.read()));
}

void C_drain_IO_L3_out_serialize::thread_ap_block_state8_io() {
    ap_block_state8_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159_pp0_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_C_V_WREADY.read()));
}

void C_drain_IO_L3_out_serialize::thread_ap_block_state8_pp0_stage1_iter1() {
    ap_block_state8_pp0_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void C_drain_IO_L3_out_serialize::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(icmp_ln1164_fu_127_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out_serialize::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(m_axi_C_V_BVALID.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void C_drain_IO_L3_out_serialize::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void C_drain_IO_L3_out_serialize::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out_serialize::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out_serialize::thread_ap_phi_mux_t_V_phi_fu_100_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_t_V_phi_fu_100_p4 = i_V_reg_163.read();
    } else {
        ap_phi_mux_t_V_phi_fu_100_p4 = t_V_reg_96.read();
    }
}

void C_drain_IO_L3_out_serialize::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(m_axi_C_V_BVALID.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out_serialize::thread_fifo_C_drain_local_in_V_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)))) {
        fifo_C_drain_local_in_V_V_blk_n = fifo_C_drain_local_in_V_V_empty_n.read();
    } else {
        fifo_C_drain_local_in_V_V_blk_n = ap_const_logic_1;
    }
}

void C_drain_IO_L3_out_serialize::thread_fifo_C_drain_local_in_V_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage2.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage2_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage3.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage3_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)))) {
        fifo_C_drain_local_in_V_V_read = ap_const_logic_1;
    } else {
        fifo_C_drain_local_in_V_V_read = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out_serialize::thread_i_V_fu_133_p2() {
    i_V_fu_133_p2 = (!ap_phi_mux_t_V_phi_fu_100_p4.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(ap_phi_mux_t_V_phi_fu_100_p4.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void C_drain_IO_L3_out_serialize::thread_icmp_ln1164_fu_127_p2() {
    icmp_ln1164_fu_127_p2 = (!ap_phi_mux_t_V_phi_fu_100_p4.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_t_V_phi_fu_100_p4.read() == ap_const_lv9_100);
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_ARADDR() {
    m_axi_C_V_ARADDR = ap_const_lv32_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_ARBURST() {
    m_axi_C_V_ARBURST = ap_const_lv2_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_ARCACHE() {
    m_axi_C_V_ARCACHE = ap_const_lv4_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_ARID() {
    m_axi_C_V_ARID = ap_const_lv1_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_ARLEN() {
    m_axi_C_V_ARLEN = ap_const_lv32_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_ARLOCK() {
    m_axi_C_V_ARLOCK = ap_const_lv2_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_ARPROT() {
    m_axi_C_V_ARPROT = ap_const_lv3_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_ARQOS() {
    m_axi_C_V_ARQOS = ap_const_lv4_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_ARREGION() {
    m_axi_C_V_ARREGION = ap_const_lv4_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_ARSIZE() {
    m_axi_C_V_ARSIZE = ap_const_lv3_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_ARUSER() {
    m_axi_C_V_ARUSER = ap_const_lv1_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_ARVALID() {
    m_axi_C_V_ARVALID = ap_const_logic_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_AWADDR() {
    m_axi_C_V_AWADDR =  (sc_lv<32>) (zext_ln1159_fu_117_p1.read());
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_AWBURST() {
    m_axi_C_V_AWBURST = ap_const_lv2_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_AWCACHE() {
    m_axi_C_V_AWCACHE = ap_const_lv4_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_AWID() {
    m_axi_C_V_AWID = ap_const_lv1_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_AWLEN() {
    m_axi_C_V_AWLEN = ap_const_lv32_100;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_AWLOCK() {
    m_axi_C_V_AWLOCK = ap_const_lv2_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_AWPROT() {
    m_axi_C_V_AWPROT = ap_const_lv3_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_AWQOS() {
    m_axi_C_V_AWQOS = ap_const_lv4_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_AWREGION() {
    m_axi_C_V_AWREGION = ap_const_lv4_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_AWSIZE() {
    m_axi_C_V_AWSIZE = ap_const_lv3_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_AWUSER() {
    m_axi_C_V_AWUSER = ap_const_lv1_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(m_axi_C_V_AWREADY.read(), ap_const_logic_1))) {
        m_axi_C_V_AWVALID = ap_const_logic_1;
    } else {
        m_axi_C_V_AWVALID = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && 
         esl_seteq<1,1,1>(m_axi_C_V_BVALID.read(), ap_const_logic_1))) {
        m_axi_C_V_BREADY = ap_const_logic_1;
    } else {
        m_axi_C_V_BREADY = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_RREADY() {
    m_axi_C_V_RREADY = ap_const_logic_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_WDATA() {
    m_axi_C_V_WDATA = esl_concat<384,128>(esl_concat<256,128>(esl_concat<128,128>(tmp_V_4_reg_183.read(), tmp_V_3_reg_178.read()), tmp_V_2_reg_173.read()), tmp_V_reg_168.read());
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_WID() {
    m_axi_C_V_WID = ap_const_lv1_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_WLAST() {
    m_axi_C_V_WLAST = ap_const_logic_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_WSTRB() {
    m_axi_C_V_WSTRB = ap_const_lv64_FFFFFFFFFFFFFFFF;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_WUSER() {
    m_axi_C_V_WUSER = ap_const_lv1_0;
}

void C_drain_IO_L3_out_serialize::thread_m_axi_C_V_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln1164_reg_159_pp0_iter1_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage1_11001.read(), ap_const_boolean_0))) {
        m_axi_C_V_WVALID = ap_const_logic_1;
    } else {
        m_axi_C_V_WVALID = ap_const_logic_0;
    }
}

void C_drain_IO_L3_out_serialize::thread_zext_ln1159_fu_117_p1() {
    zext_ln1159_fu_117_p1 = esl_zext<64,26>(C_V_offset1_i_reg_148.read());
}

void C_drain_IO_L3_out_serialize::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, C_V_offset_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(m_axi_C_V_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln1164_fu_127_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln1164_fu_127_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            }
            break;
        case 16 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage2_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            }
            break;
        case 32 : 
            if (esl_seteq<1,1,1>(ap_block_pp0_stage3_subdone.read(), ap_const_boolean_0)) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()) && esl_seteq<1,1,1>(m_axi_C_V_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXX";
            break;
    }
}

}

