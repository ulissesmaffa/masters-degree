-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity A_IO_L2_in is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    fifo_A_in_V_V_empty_n : IN STD_LOGIC;
    fifo_A_in_V_V_read : OUT STD_LOGIC;
    fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    fifo_A_out_V_V_full_n : IN STD_LOGIC;
    fifo_A_out_V_V_write : OUT STD_LOGIC;
    fifo_A_local_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    fifo_A_local_out_V_V_full_n : IN STD_LOGIC;
    fifo_A_local_out_V_V_write : OUT STD_LOGIC );
end;


architecture behav of A_IO_L2_in is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal c0_V_fu_137_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal c0_V_reg_188 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal intra_trans_en_0_load_reg_193 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln173_fu_131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c1_V_fu_149_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal c1_V_reg_201 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal c2_V_fu_161_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal c2_V_reg_209 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal intra_trans_en_0_load_4_reg_214 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln175_fu_155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln221_fu_167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_A_IO_L2_in_inter_trans_fu_113_ap_ready : STD_LOGIC;
    signal grp_A_IO_L2_in_inter_trans_fu_113_ap_done : STD_LOGIC;
    signal arb_2_reg_93 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_A_IO_L2_in_intra_trans_fu_105_ap_ready : STD_LOGIC;
    signal grp_A_IO_L2_in_intra_trans_fu_105_ap_done : STD_LOGIC;
    signal ap_block_state5_on_subcall_done : BOOLEAN;
    signal local_A_ping_V_ce0 : STD_LOGIC;
    signal local_A_ping_V_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal local_A_ping_V_ce1 : STD_LOGIC;
    signal local_A_ping_V_we1 : STD_LOGIC;
    signal local_A_pong_V_ce0 : STD_LOGIC;
    signal local_A_pong_V_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal local_A_pong_V_ce1 : STD_LOGIC;
    signal local_A_pong_V_we1 : STD_LOGIC;
    signal grp_A_IO_L2_in_intra_trans_fu_105_ap_start : STD_LOGIC;
    signal grp_A_IO_L2_in_intra_trans_fu_105_ap_idle : STD_LOGIC;
    signal grp_A_IO_L2_in_intra_trans_fu_105_local_A_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_A_IO_L2_in_intra_trans_fu_105_local_A_V_ce0 : STD_LOGIC;
    signal grp_A_IO_L2_in_intra_trans_fu_105_local_A_V_q0 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_A_IO_L2_in_intra_trans_fu_105_fifo_A_local_out_V_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_A_IO_L2_in_intra_trans_fu_105_fifo_A_local_out_V_V_write : STD_LOGIC;
    signal grp_A_IO_L2_in_intra_trans_fu_105_intra_trans_en : STD_LOGIC;
    signal grp_A_IO_L2_in_inter_trans_fu_113_ap_start : STD_LOGIC;
    signal grp_A_IO_L2_in_inter_trans_fu_113_ap_idle : STD_LOGIC;
    signal grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_ce1 : STD_LOGIC;
    signal grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_we1 : STD_LOGIC;
    signal grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_d1 : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_A_IO_L2_in_inter_trans_fu_113_fifo_A_in_V_V_read : STD_LOGIC;
    signal grp_A_IO_L2_in_inter_trans_fu_113_fifo_A_out_V_V_din : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_A_IO_L2_in_inter_trans_fu_113_fifo_A_out_V_V_write : STD_LOGIC;
    signal p_016_0_reg_60 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal icmp_ln174_fu_143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_047_0_reg_71 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_060_0_reg_82 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_arb_2_phi_fu_97_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_A_IO_L2_in_intra_trans_fu_105_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_A_IO_L2_in_inter_trans_fu_113_ap_start_reg : STD_LOGIC := '0';
    signal intra_trans_en_0_fu_48 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);

    component A_IO_L2_in_intra_trans IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        local_A_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        local_A_V_ce0 : OUT STD_LOGIC;
        local_A_V_q0 : IN STD_LOGIC_VECTOR (511 downto 0);
        fifo_A_local_out_V_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_A_local_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_local_out_V_V_write : OUT STD_LOGIC;
        intra_trans_en : IN STD_LOGIC );
    end component;


    component A_IO_L2_in_inter_trans IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        local_A_V_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
        local_A_V_ce1 : OUT STD_LOGIC;
        local_A_V_we1 : OUT STD_LOGIC;
        local_A_V_d1 : OUT STD_LOGIC_VECTOR (511 downto 0);
        fifo_A_in_V_V_dout : IN STD_LOGIC_VECTOR (511 downto 0);
        fifo_A_in_V_V_empty_n : IN STD_LOGIC;
        fifo_A_in_V_V_read : OUT STD_LOGIC;
        fifo_A_out_V_V_din : OUT STD_LOGIC_VECTOR (511 downto 0);
        fifo_A_out_V_V_full_n : IN STD_LOGIC;
        fifo_A_out_V_V_write : OUT STD_LOGIC );
    end component;


    component A_IO_L2_in_local_A_ping_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (511 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (511 downto 0) );
    end component;



begin
    local_A_ping_V_U : component A_IO_L2_in_local_A_ping_V
    generic map (
        DataWidth => 512,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_A_IO_L2_in_intra_trans_fu_105_local_A_V_address0,
        ce0 => local_A_ping_V_ce0,
        q0 => local_A_ping_V_q0,
        address1 => grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_address1,
        ce1 => local_A_ping_V_ce1,
        we1 => local_A_ping_V_we1,
        d1 => grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_d1);

    local_A_pong_V_U : component A_IO_L2_in_local_A_ping_V
    generic map (
        DataWidth => 512,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_A_IO_L2_in_intra_trans_fu_105_local_A_V_address0,
        ce0 => local_A_pong_V_ce0,
        q0 => local_A_pong_V_q0,
        address1 => grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_address1,
        ce1 => local_A_pong_V_ce1,
        we1 => local_A_pong_V_we1,
        d1 => grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_d1);

    grp_A_IO_L2_in_intra_trans_fu_105 : component A_IO_L2_in_intra_trans
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_A_IO_L2_in_intra_trans_fu_105_ap_start,
        ap_done => grp_A_IO_L2_in_intra_trans_fu_105_ap_done,
        ap_idle => grp_A_IO_L2_in_intra_trans_fu_105_ap_idle,
        ap_ready => grp_A_IO_L2_in_intra_trans_fu_105_ap_ready,
        local_A_V_address0 => grp_A_IO_L2_in_intra_trans_fu_105_local_A_V_address0,
        local_A_V_ce0 => grp_A_IO_L2_in_intra_trans_fu_105_local_A_V_ce0,
        local_A_V_q0 => grp_A_IO_L2_in_intra_trans_fu_105_local_A_V_q0,
        fifo_A_local_out_V_V_din => grp_A_IO_L2_in_intra_trans_fu_105_fifo_A_local_out_V_V_din,
        fifo_A_local_out_V_V_full_n => fifo_A_local_out_V_V_full_n,
        fifo_A_local_out_V_V_write => grp_A_IO_L2_in_intra_trans_fu_105_fifo_A_local_out_V_V_write,
        intra_trans_en => grp_A_IO_L2_in_intra_trans_fu_105_intra_trans_en);

    grp_A_IO_L2_in_inter_trans_fu_113 : component A_IO_L2_in_inter_trans
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_A_IO_L2_in_inter_trans_fu_113_ap_start,
        ap_done => grp_A_IO_L2_in_inter_trans_fu_113_ap_done,
        ap_idle => grp_A_IO_L2_in_inter_trans_fu_113_ap_idle,
        ap_ready => grp_A_IO_L2_in_inter_trans_fu_113_ap_ready,
        local_A_V_address1 => grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_address1,
        local_A_V_ce1 => grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_ce1,
        local_A_V_we1 => grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_we1,
        local_A_V_d1 => grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_d1,
        fifo_A_in_V_V_dout => fifo_A_in_V_V_dout,
        fifo_A_in_V_V_empty_n => fifo_A_in_V_V_empty_n,
        fifo_A_in_V_V_read => grp_A_IO_L2_in_inter_trans_fu_113_fifo_A_in_V_V_read,
        fifo_A_out_V_V_din => grp_A_IO_L2_in_inter_trans_fu_113_fifo_A_out_V_V_din,
        fifo_A_out_V_V_full_n => fifo_A_out_V_V_full_n,
        fifo_A_out_V_V_write => grp_A_IO_L2_in_inter_trans_fu_113_fifo_A_out_V_V_write);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_A_IO_L2_in_intra_trans_fu_105_ap_done = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_A_IO_L2_in_inter_trans_fu_113_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_A_IO_L2_in_inter_trans_fu_113_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln175_fu_155_p2 = ap_const_lv1_0) and (ap_phi_mux_arb_2_phi_fu_97_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_phi_mux_arb_2_phi_fu_97_p4 = ap_const_lv1_0) and (icmp_ln175_fu_155_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
                    grp_A_IO_L2_in_inter_trans_fu_113_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_A_IO_L2_in_inter_trans_fu_113_ap_ready = ap_const_logic_1)) then 
                    grp_A_IO_L2_in_inter_trans_fu_113_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_A_IO_L2_in_intra_trans_fu_105_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_A_IO_L2_in_intra_trans_fu_105_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln175_fu_155_p2 = ap_const_lv1_0) and (ap_phi_mux_arb_2_phi_fu_97_p4 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((ap_phi_mux_arb_2_phi_fu_97_p4 = ap_const_lv1_0) and (icmp_ln175_fu_155_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((icmp_ln173_fu_131_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                    grp_A_IO_L2_in_intra_trans_fu_105_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_A_IO_L2_in_intra_trans_fu_105_ap_ready = ap_const_logic_1)) then 
                    grp_A_IO_L2_in_intra_trans_fu_105_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    arb_2_reg_93_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln174_fu_143_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                arb_2_reg_93 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5_on_subcall_done))) then 
                arb_2_reg_93 <= xor_ln221_fu_167_p2;
            end if; 
        end if;
    end process;

    intra_trans_en_0_fu_48_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5_on_subcall_done))) then 
                intra_trans_en_0_fu_48 <= ap_const_lv1_1;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                intra_trans_en_0_fu_48 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    p_016_0_reg_60_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln174_fu_143_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                p_016_0_reg_60 <= c0_V_reg_188;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_016_0_reg_60 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    p_047_0_reg_71_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln173_fu_131_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                p_047_0_reg_71 <= ap_const_lv3_0;
            elsif (((icmp_ln175_fu_155_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                p_047_0_reg_71 <= c1_V_reg_201;
            end if; 
        end if;
    end process;

    p_060_0_reg_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln174_fu_143_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                p_060_0_reg_82 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5_on_subcall_done))) then 
                p_060_0_reg_82 <= c2_V_reg_209;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                c0_V_reg_188 <= c0_V_fu_137_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                c1_V_reg_201 <= c1_V_fu_149_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                c2_V_reg_209 <= c2_V_fu_161_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln175_fu_155_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                intra_trans_en_0_load_4_reg_214 <= intra_trans_en_0_fu_48;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln173_fu_131_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                intra_trans_en_0_load_reg_193 <= intra_trans_en_0_fu_48;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln173_fu_131_p2, ap_CS_fsm_state3, ap_CS_fsm_state4, icmp_ln175_fu_155_p2, ap_CS_fsm_state5, grp_A_IO_L2_in_intra_trans_fu_105_ap_done, ap_block_state5_on_subcall_done, icmp_ln174_fu_143_p2, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln173_fu_131_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln174_fu_143_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln175_fu_155_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (ap_const_boolean_0 = ap_block_state5_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_A_IO_L2_in_intra_trans_fu_105_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state5_on_subcall_done_assign_proc : process(grp_A_IO_L2_in_inter_trans_fu_113_ap_done, arb_2_reg_93, grp_A_IO_L2_in_intra_trans_fu_105_ap_done)
    begin
                ap_block_state5_on_subcall_done <= (((arb_2_reg_93 = ap_const_lv1_0) and (grp_A_IO_L2_in_intra_trans_fu_105_ap_done = ap_const_logic_0)) or ((arb_2_reg_93 = ap_const_lv1_0) and (grp_A_IO_L2_in_inter_trans_fu_113_ap_done = ap_const_logic_0)) or ((arb_2_reg_93 = ap_const_lv1_1) and (grp_A_IO_L2_in_inter_trans_fu_113_ap_done = ap_const_logic_0)) or ((arb_2_reg_93 = ap_const_lv1_1) and (grp_A_IO_L2_in_intra_trans_fu_105_ap_done = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_A_IO_L2_in_intra_trans_fu_105_ap_done, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_A_IO_L2_in_intra_trans_fu_105_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_arb_2_phi_fu_97_p4 <= arb_2_reg_93;
    ap_ready <= internal_ap_ready;
    c0_V_fu_137_p2 <= std_logic_vector(unsigned(p_016_0_reg_60) + unsigned(ap_const_lv3_1));
    c1_V_fu_149_p2 <= std_logic_vector(unsigned(p_047_0_reg_71) + unsigned(ap_const_lv3_1));
    c2_V_fu_161_p2 <= std_logic_vector(unsigned(p_060_0_reg_82) + unsigned(ap_const_lv3_1));

    fifo_A_in_V_V_read_assign_proc : process(ap_CS_fsm_state5, arb_2_reg_93, grp_A_IO_L2_in_inter_trans_fu_113_fifo_A_in_V_V_read)
    begin
        if ((((arb_2_reg_93 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((arb_2_reg_93 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            fifo_A_in_V_V_read <= grp_A_IO_L2_in_inter_trans_fu_113_fifo_A_in_V_V_read;
        else 
            fifo_A_in_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    fifo_A_local_out_V_V_din <= grp_A_IO_L2_in_intra_trans_fu_105_fifo_A_local_out_V_V_din;

    fifo_A_local_out_V_V_write_assign_proc : process(ap_CS_fsm_state5, arb_2_reg_93, grp_A_IO_L2_in_intra_trans_fu_105_fifo_A_local_out_V_V_write, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((arb_2_reg_93 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((arb_2_reg_93 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            fifo_A_local_out_V_V_write <= grp_A_IO_L2_in_intra_trans_fu_105_fifo_A_local_out_V_V_write;
        else 
            fifo_A_local_out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    fifo_A_out_V_V_din <= grp_A_IO_L2_in_inter_trans_fu_113_fifo_A_out_V_V_din;

    fifo_A_out_V_V_write_assign_proc : process(ap_CS_fsm_state5, arb_2_reg_93, grp_A_IO_L2_in_inter_trans_fu_113_fifo_A_out_V_V_write)
    begin
        if ((((arb_2_reg_93 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((arb_2_reg_93 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            fifo_A_out_V_V_write <= grp_A_IO_L2_in_inter_trans_fu_113_fifo_A_out_V_V_write;
        else 
            fifo_A_out_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_A_IO_L2_in_inter_trans_fu_113_ap_start <= grp_A_IO_L2_in_inter_trans_fu_113_ap_start_reg;
    grp_A_IO_L2_in_intra_trans_fu_105_ap_start <= grp_A_IO_L2_in_intra_trans_fu_105_ap_start_reg;

    grp_A_IO_L2_in_intra_trans_fu_105_intra_trans_en_assign_proc : process(intra_trans_en_0_load_reg_193, intra_trans_en_0_load_4_reg_214, ap_CS_fsm_state5, arb_2_reg_93, ap_CS_fsm_state6)
    begin
        if ((((arb_2_reg_93 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((arb_2_reg_93 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            grp_A_IO_L2_in_intra_trans_fu_105_intra_trans_en <= intra_trans_en_0_load_4_reg_214(0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_A_IO_L2_in_intra_trans_fu_105_intra_trans_en <= intra_trans_en_0_load_reg_193(0);
        else 
            grp_A_IO_L2_in_intra_trans_fu_105_intra_trans_en <= 'X';
        end if; 
    end process;


    grp_A_IO_L2_in_intra_trans_fu_105_local_A_V_q0_assign_proc : process(ap_CS_fsm_state5, arb_2_reg_93, local_A_ping_V_q0, local_A_pong_V_q0, ap_CS_fsm_state6)
    begin
        if (((arb_2_reg_93 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_A_IO_L2_in_intra_trans_fu_105_local_A_V_q0 <= local_A_pong_V_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or ((arb_2_reg_93 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            grp_A_IO_L2_in_intra_trans_fu_105_local_A_V_q0 <= local_A_ping_V_q0;
        else 
            grp_A_IO_L2_in_intra_trans_fu_105_local_A_V_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln173_fu_131_p2 <= "1" when (p_016_0_reg_60 = ap_const_lv3_4) else "0";
    icmp_ln174_fu_143_p2 <= "1" when (p_047_0_reg_71 = ap_const_lv3_4) else "0";
    icmp_ln175_fu_155_p2 <= "1" when (p_060_0_reg_82 = ap_const_lv3_4) else "0";

    internal_ap_ready_assign_proc : process(grp_A_IO_L2_in_intra_trans_fu_105_ap_done, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_A_IO_L2_in_intra_trans_fu_105_ap_done = ap_const_logic_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    local_A_ping_V_ce0_assign_proc : process(ap_CS_fsm_state5, arb_2_reg_93, grp_A_IO_L2_in_intra_trans_fu_105_local_A_V_ce0, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((arb_2_reg_93 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            local_A_ping_V_ce0 <= grp_A_IO_L2_in_intra_trans_fu_105_local_A_V_ce0;
        else 
            local_A_ping_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_ping_V_ce1_assign_proc : process(ap_CS_fsm_state5, arb_2_reg_93, grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_ce1)
    begin
        if (((arb_2_reg_93 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            local_A_ping_V_ce1 <= grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_ce1;
        else 
            local_A_ping_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_ping_V_we1_assign_proc : process(ap_CS_fsm_state5, arb_2_reg_93, grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_we1)
    begin
        if (((arb_2_reg_93 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            local_A_ping_V_we1 <= grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_we1;
        else 
            local_A_ping_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_pong_V_ce0_assign_proc : process(ap_CS_fsm_state5, arb_2_reg_93, grp_A_IO_L2_in_intra_trans_fu_105_local_A_V_ce0)
    begin
        if (((arb_2_reg_93 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            local_A_pong_V_ce0 <= grp_A_IO_L2_in_intra_trans_fu_105_local_A_V_ce0;
        else 
            local_A_pong_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_pong_V_ce1_assign_proc : process(ap_CS_fsm_state5, arb_2_reg_93, grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_ce1)
    begin
        if (((arb_2_reg_93 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            local_A_pong_V_ce1 <= grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_ce1;
        else 
            local_A_pong_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    local_A_pong_V_we1_assign_proc : process(ap_CS_fsm_state5, arb_2_reg_93, grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_we1)
    begin
        if (((arb_2_reg_93 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            local_A_pong_V_we1 <= grp_A_IO_L2_in_inter_trans_fu_113_local_A_V_we1;
        else 
            local_A_pong_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln221_fu_167_p2 <= (arb_2_reg_93 xor ap_const_lv1_1);
end behav;
