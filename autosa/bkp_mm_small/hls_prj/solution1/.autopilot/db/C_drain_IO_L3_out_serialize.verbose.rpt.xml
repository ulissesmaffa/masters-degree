<profile>

<section name = "Vitis HLS Report for 'C_drain_IO_L3_out_serialize'" level="0">
<item name = "Date">Thu Sep 12 16:27:04 2024
</item>
<item name = "Version">2023.1.1 (Build 3869133 on Jun 15 2023)</item>
<item name = "Project">hls_prj</item>
<item name = "Solution">solution1 (Vivado IP Flow Target)</item>
<item name = "Product family">virtexuplus</item>
<item name = "Target device">xcu200-fsgd2104-2-e</item>
</section>

<section name = "Performance Estimates" level="0">
<item name = "Timing">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="4">Clock, Target, Estimated, Uncertainty</keys>
<column name="ap_clk">5.00 ns, 3.650 ns, 1.35 ns</column>
</table>
</item>
</section>
</item>
<item name = "Latency">
<section name = "" level="1">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="8">, min, max, min, max, min, max, Type</keys>
<column name="">1032, 1032, 5.160 us, 5.160 us, 1032, 1032, no</column>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="0">
<keys size="9">Instance, Module, min, max, min, max, min, max, Type</keys>
</table>
</item>
<item name = "Loop"><table name="" hasTotal="0">
<keys size="8">Loop Name, min, max, Latency, achieved, target, Count, Pipelined</keys>
<column name="- VITIS_LOOP_1164_1">1030, 1030, 11, 4, 1, 256, yes</column>
</table>
</item>
</section>
</item>
</section>
</item>
</section>

<section name = "Utilization Estimates" level="0">
<item name = "Summary"><table name="" hasTotal="1">
<keys size="6">Name, BRAM_18K, DSP, FF, LUT, URAM</keys>
<column name="DSP">-, -, -, -, -</column>
<column name="Expression">-, -, 0, 76, -</column>
<column name="FIFO">-, -, -, -, -</column>
<column name="Instance">-, -, -, -, -</column>
<column name="Memory">-, -, -, -, -</column>
<column name="Multiplexer">-, -, -, 134, -</column>
<column name="Register">-, -, 725, 64, -</column>
<specialColumn name="Available SLR">1440, 2280, 788160, 394080, 320</specialColumn>
<specialColumn name="Utilization SLR (%)">0, 0, ~0, ~0, 0</specialColumn>
<specialColumn name="Available">4320, 6840, 2364480, 1182240, 960</specialColumn>
<specialColumn name="Utilization (%)">0, 0, ~0, ~0, 0</specialColumn>
</table>
</item>
<item name = "Detail">
<section name = "" level="1">
<item name = "Instance"><table name="" hasTotal="1">
<keys size="7">Instance, Module, BRAM_18K, DSP, FF, LUT, URAM</keys>
</table>
</item>
<item name = "DSP"><table name="" hasTotal="0">
<keys size="3">Instance, Module, Expression</keys>
</table>
</item>
<item name = "Memory"><table name="" hasTotal="1">
<keys size="10">Memory, Module, BRAM_18K, FF, LUT, URAM, Words, Bits, Banks, W*Bits*Banks</keys>
</table>
</item>
<item name = "FIFO"><table name="" hasTotal="1">
<keys size="8">Name, BRAM_18K, FF, LUT, URAM, Depth, Bits, Size:D*B</keys>
</table>
</item>
<item name = "Expression"><table name="" hasTotal="1">
<keys size="7">Variable Name, Operation, DSP, FF, LUT, Bitwidth P0, Bitwidth P1</keys>
<column name="add_ln1164_fu_142_p2">+, 0, 0, 16, 9, 1</column>
<column name="ap_block_pp0_stage1_01001">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_state11_pp0_stage2_iter2">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_state3_io">and, 0, 0, 2, 1, 1</column>
<column name="ap_block_state3_pp0_stage2_iter0">and, 0, 0, 2, 1, 1</column>
<column name="ap_condition_303">and, 0, 0, 2, 1, 1</column>
<column name="ap_condition_400">and, 0, 0, 2, 1, 1</column>
<column name="ap_predicate_op31_read_state2">and, 0, 0, 2, 1, 1</column>
<column name="icmp_ln1164_1_fu_148_p2">icmp, 0, 0, 17, 9, 10</column>
<column name="icmp_ln1164_fu_136_p2">icmp, 0, 0, 17, 9, 10</column>
<column name="ap_block_pp0_stage0_11001">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage1_11001">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage2_11001">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_pp0_stage3_11001">or, 0, 0, 2, 1, 1</column>
<column name="ap_block_state2_pp0_stage1_iter0">or, 0, 0, 2, 1, 1</column>
<column name="ap_enable_pp0">xor, 0, 0, 2, 1, 2</column>
</table>
</item>
<item name = "Multiplexer"><table name="" hasTotal="1">
<keys size="5">Name, LUT, Input Size, Bits, Total Bits</keys>
<column name="C_blk_n">9, 2, 1, 2</column>
<column name="ap_NS_fsm">26, 5, 1, 5</column>
<column name="ap_done_int">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter0">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter1">9, 2, 1, 2</column>
<column name="ap_enable_reg_pp0_iter2">9, 2, 1, 2</column>
<column name="ap_loop_exit_ready_pp0_iter1_reg">9, 2, 1, 2</column>
<column name="ap_sig_allocacmp_i_1">9, 2, 9, 18</column>
<column name="fifo_C_drain_C_drain_IO_L3_out_serialize_blk_n">9, 2, 1, 2</column>
<column name="gmem_C_blk_n_AW">9, 2, 1, 2</column>
<column name="gmem_C_blk_n_B">9, 2, 1, 2</column>
<column name="gmem_C_blk_n_W">9, 2, 1, 2</column>
<column name="i_fu_76">9, 2, 9, 18</column>
</table>
</item>
<item name = "Register"><table name="" hasTotal="1">
<keys size="5">Name, FF, LUT, Bits, Const Bits</keys>
<column name="ap_CS_fsm">4, 0, 4, 0</column>
<column name="ap_done_reg">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter0_reg">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter1">1, 0, 1, 0</column>
<column name="ap_enable_reg_pp0_iter2">1, 0, 1, 0</column>
<column name="ap_loop_exit_ready_pp0_iter1_reg">1, 0, 1, 0</column>
<column name="fifo_C_drain_C_drain_IO_L3_out_serialize_read_1_reg_234">128, 0, 128, 0</column>
<column name="fifo_C_drain_C_drain_IO_L3_out_serialize_read_2_reg_239">128, 0, 128, 0</column>
<column name="fifo_C_drain_C_drain_IO_L3_out_serialize_read_3_reg_244">128, 0, 128, 0</column>
<column name="fifo_C_drain_C_drain_IO_L3_out_serialize_read_reg_229">128, 0, 128, 0</column>
<column name="first_iter_0_reg_116">1, 0, 1, 0</column>
<column name="i_fu_76">9, 0, 9, 0</column>
<column name="icmp_ln1164_1_reg_220">1, 0, 1, 0</column>
<column name="icmp_ln1164_reg_216">1, 0, 1, 0</column>
<column name="sext_ln1164_reg_224">64, 0, 64, 0</column>
<column name="icmp_ln1164_1_reg_220">64, 32, 1, 0</column>
<column name="icmp_ln1164_reg_216">64, 32, 1, 0</column>
</table>
</item>
</section>
</item>
</section>

<section name = "Interface" level="0">
<item name = "Summary"><table name="" hasTotal="0">
<keys size="6">RTL Ports, Dir, Bits, Protocol, Source Object, C Type</keys>
<column name="ap_clk">in, 1, ap_ctrl_hs, C_drain_IO_L3_out_serialize, return value</column>
<column name="ap_rst">in, 1, ap_ctrl_hs, C_drain_IO_L3_out_serialize, return value</column>
<column name="ap_start">in, 1, ap_ctrl_hs, C_drain_IO_L3_out_serialize, return value</column>
<column name="ap_done">out, 1, ap_ctrl_hs, C_drain_IO_L3_out_serialize, return value</column>
<column name="ap_continue">in, 1, ap_ctrl_hs, C_drain_IO_L3_out_serialize, return value</column>
<column name="ap_idle">out, 1, ap_ctrl_hs, C_drain_IO_L3_out_serialize, return value</column>
<column name="ap_ready">out, 1, ap_ctrl_hs, C_drain_IO_L3_out_serialize, return value</column>
<column name="fifo_C_drain_C_drain_IO_L3_out_serialize_dout">in, 128, ap_fifo, fifo_C_drain_C_drain_IO_L3_out_serialize, pointer</column>
<column name="fifo_C_drain_C_drain_IO_L3_out_serialize_num_data_valid">in, 2, ap_fifo, fifo_C_drain_C_drain_IO_L3_out_serialize, pointer</column>
<column name="fifo_C_drain_C_drain_IO_L3_out_serialize_fifo_cap">in, 2, ap_fifo, fifo_C_drain_C_drain_IO_L3_out_serialize, pointer</column>
<column name="fifo_C_drain_C_drain_IO_L3_out_serialize_empty_n">in, 1, ap_fifo, fifo_C_drain_C_drain_IO_L3_out_serialize, pointer</column>
<column name="fifo_C_drain_C_drain_IO_L3_out_serialize_read">out, 1, ap_fifo, fifo_C_drain_C_drain_IO_L3_out_serialize, pointer</column>
<column name="m_axi_gmem_C_AWVALID">out, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_AWREADY">in, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_AWADDR">out, 64, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_AWID">out, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_AWLEN">out, 32, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_AWSIZE">out, 3, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_AWBURST">out, 2, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_AWLOCK">out, 2, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_AWCACHE">out, 4, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_AWPROT">out, 3, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_AWQOS">out, 4, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_AWREGION">out, 4, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_AWUSER">out, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_WVALID">out, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_WREADY">in, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_WDATA">out, 512, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_WSTRB">out, 64, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_WLAST">out, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_WID">out, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_WUSER">out, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_ARVALID">out, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_ARREADY">in, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_ARADDR">out, 64, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_ARID">out, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_ARLEN">out, 32, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_ARSIZE">out, 3, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_ARBURST">out, 2, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_ARLOCK">out, 2, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_ARCACHE">out, 4, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_ARPROT">out, 3, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_ARQOS">out, 4, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_ARREGION">out, 4, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_ARUSER">out, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_RVALID">in, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_RREADY">out, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_RDATA">in, 512, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_RLAST">in, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_RID">in, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_RFIFONUM">in, 9, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_RUSER">in, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_RRESP">in, 2, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_BVALID">in, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_BREADY">out, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_BRESP">in, 2, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_BID">in, 1, m_axi, gmem_C, pointer</column>
<column name="m_axi_gmem_C_BUSER">in, 1, m_axi, gmem_C, pointer</column>
<column name="C_dout">in, 64, ap_fifo, C, pointer</column>
<column name="C_num_data_valid">in, 5, ap_fifo, C, pointer</column>
<column name="C_fifo_cap">in, 5, ap_fifo, C, pointer</column>
<column name="C_empty_n">in, 1, ap_fifo, C, pointer</column>
<column name="C_read">out, 1, ap_fifo, C, pointer</column>
</table>
</item>
</section>
</profile>
