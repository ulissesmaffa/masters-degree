// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module kernel0_B_IO_L2_in_boundary (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        fifo_B_B_IO_L2_in_1_dout,
        fifo_B_B_IO_L2_in_1_num_data_valid,
        fifo_B_B_IO_L2_in_1_fifo_cap,
        fifo_B_B_IO_L2_in_1_empty_n,
        fifo_B_B_IO_L2_in_1_read,
        fifo_B_PE_0_1_din,
        fifo_B_PE_0_1_num_data_valid,
        fifo_B_PE_0_1_fifo_cap,
        fifo_B_PE_0_1_full_n,
        fifo_B_PE_0_1_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [511:0] fifo_B_B_IO_L2_in_1_dout;
input  [1:0] fifo_B_B_IO_L2_in_1_num_data_valid;
input  [1:0] fifo_B_B_IO_L2_in_1_fifo_cap;
input   fifo_B_B_IO_L2_in_1_empty_n;
output   fifo_B_B_IO_L2_in_1_read;
output  [63:0] fifo_B_PE_0_1_din;
input  [1:0] fifo_B_PE_0_1_num_data_valid;
input  [1:0] fifo_B_PE_0_1_fifo_cap;
input   fifo_B_PE_0_1_full_n;
output   fifo_B_PE_0_1_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg fifo_B_B_IO_L2_in_1_read;
reg fifo_B_PE_0_1_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [2:0] c0_2_fu_171_p2;
reg   [2:0] c0_2_reg_221;
wire    ap_CS_fsm_state2;
wire   [2:0] c1_1_fu_183_p2;
reg   [2:0] c1_1_reg_229;
wire    ap_CS_fsm_state3;
wire   [2:0] c2_4_fu_199_p2;
reg   [2:0] c2_4_reg_237;
wire    ap_CS_fsm_state4;
wire   [0:0] arb_fu_205_p2;
wire    ap_CS_fsm_state5;
wire    grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_done;
reg   [0:0] arb_1_reg_104;
wire    grp_B_IO_L2_in_intra_trans_fu_140_ap_done;
reg    ap_block_state5_on_subcall_done;
reg    local_B_ping_ce0;
wire   [511:0] local_B_ping_q0;
reg    local_B_ping_ce1;
reg    local_B_ping_we1;
reg    local_B_pong_ce0;
wire   [511:0] local_B_pong_q0;
reg    local_B_pong_ce1;
reg    local_B_pong_we1;
wire    grp_B_IO_L2_in_intra_trans_fu_140_ap_start;
wire    grp_B_IO_L2_in_intra_trans_fu_140_ap_idle;
wire    grp_B_IO_L2_in_intra_trans_fu_140_ap_ready;
wire   [2:0] grp_B_IO_L2_in_intra_trans_fu_140_local_B_address0;
wire    grp_B_IO_L2_in_intra_trans_fu_140_local_B_ce0;
reg   [511:0] grp_B_IO_L2_in_intra_trans_fu_140_local_B_q0;
wire   [63:0] grp_B_IO_L2_in_intra_trans_fu_140_fifo_B_PE_0_1_din;
wire    grp_B_IO_L2_in_intra_trans_fu_140_fifo_B_PE_0_1_write;
reg   [0:0] grp_B_IO_L2_in_intra_trans_fu_140_intra_trans_en;
wire    grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_start;
wire    grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_idle;
wire    grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_ready;
wire    grp_B_IO_L2_in_inter_trans_boundary_fu_150_fifo_B_B_IO_L2_in_1_read;
wire   [2:0] grp_B_IO_L2_in_inter_trans_boundary_fu_150_local_B_address1;
wire    grp_B_IO_L2_in_inter_trans_boundary_fu_150_local_B_ce1;
wire    grp_B_IO_L2_in_inter_trans_boundary_fu_150_local_B_we1;
wire   [511:0] grp_B_IO_L2_in_inter_trans_boundary_fu_150_local_B_d1;
reg   [0:0] intra_trans_en_reg_66;
reg    ap_block_state1;
wire   [0:0] icmp_ln616_fu_177_p2;
reg   [0:0] intra_trans_en_1_reg_80;
wire   [0:0] icmp_ln615_fu_165_p2;
wire   [0:0] icmp_ln617_fu_193_p2;
reg   [2:0] c1_reg_93;
wire   [0:0] ap_phi_mux_arb_1_phi_fu_108_p4;
reg   [0:0] intra_trans_en_2_reg_116;
reg   [2:0] c2_reg_129;
reg    grp_B_IO_L2_in_intra_trans_fu_140_ap_start_reg;
wire    ap_CS_fsm_state6;
reg    grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_start_reg;
reg   [2:0] c0_fu_54;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 grp_B_IO_L2_in_intra_trans_fu_140_ap_start_reg = 1'b0;
#0 grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_start_reg = 1'b0;
end

kernel0_A_IO_L2_in_local_A_ping_RAM_2P_BRAM_1R1W #(
    .DataWidth( 512 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
local_B_ping_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_B_IO_L2_in_intra_trans_fu_140_local_B_address0),
    .ce0(local_B_ping_ce0),
    .q0(local_B_ping_q0),
    .address1(grp_B_IO_L2_in_inter_trans_boundary_fu_150_local_B_address1),
    .ce1(local_B_ping_ce1),
    .we1(local_B_ping_we1),
    .d1(grp_B_IO_L2_in_inter_trans_boundary_fu_150_local_B_d1)
);

kernel0_A_IO_L2_in_local_A_ping_RAM_2P_BRAM_1R1W #(
    .DataWidth( 512 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
local_B_pong_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_B_IO_L2_in_intra_trans_fu_140_local_B_address0),
    .ce0(local_B_pong_ce0),
    .q0(local_B_pong_q0),
    .address1(grp_B_IO_L2_in_inter_trans_boundary_fu_150_local_B_address1),
    .ce1(local_B_pong_ce1),
    .we1(local_B_pong_we1),
    .d1(grp_B_IO_L2_in_inter_trans_boundary_fu_150_local_B_d1)
);

kernel0_B_IO_L2_in_intra_trans grp_B_IO_L2_in_intra_trans_fu_140(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_B_IO_L2_in_intra_trans_fu_140_ap_start),
    .ap_done(grp_B_IO_L2_in_intra_trans_fu_140_ap_done),
    .ap_idle(grp_B_IO_L2_in_intra_trans_fu_140_ap_idle),
    .ap_ready(grp_B_IO_L2_in_intra_trans_fu_140_ap_ready),
    .local_B_address0(grp_B_IO_L2_in_intra_trans_fu_140_local_B_address0),
    .local_B_ce0(grp_B_IO_L2_in_intra_trans_fu_140_local_B_ce0),
    .local_B_q0(grp_B_IO_L2_in_intra_trans_fu_140_local_B_q0),
    .fifo_B_PE_0_1_din(grp_B_IO_L2_in_intra_trans_fu_140_fifo_B_PE_0_1_din),
    .fifo_B_PE_0_1_num_data_valid(2'd0),
    .fifo_B_PE_0_1_fifo_cap(2'd0),
    .fifo_B_PE_0_1_full_n(fifo_B_PE_0_1_full_n),
    .fifo_B_PE_0_1_write(grp_B_IO_L2_in_intra_trans_fu_140_fifo_B_PE_0_1_write),
    .intra_trans_en(grp_B_IO_L2_in_intra_trans_fu_140_intra_trans_en)
);

kernel0_B_IO_L2_in_inter_trans_boundary grp_B_IO_L2_in_inter_trans_boundary_fu_150(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_start),
    .ap_done(grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_done),
    .ap_idle(grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_idle),
    .ap_ready(grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_ready),
    .fifo_B_B_IO_L2_in_1_dout(fifo_B_B_IO_L2_in_1_dout),
    .fifo_B_B_IO_L2_in_1_num_data_valid(2'd0),
    .fifo_B_B_IO_L2_in_1_fifo_cap(2'd0),
    .fifo_B_B_IO_L2_in_1_empty_n(fifo_B_B_IO_L2_in_1_empty_n),
    .fifo_B_B_IO_L2_in_1_read(grp_B_IO_L2_in_inter_trans_boundary_fu_150_fifo_B_B_IO_L2_in_1_read),
    .local_B_address1(grp_B_IO_L2_in_inter_trans_boundary_fu_150_local_B_address1),
    .local_B_ce1(grp_B_IO_L2_in_inter_trans_boundary_fu_150_local_B_ce1),
    .local_B_we1(grp_B_IO_L2_in_inter_trans_boundary_fu_150_local_B_we1),
    .local_B_d1(grp_B_IO_L2_in_inter_trans_boundary_fu_150_local_B_d1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_B_IO_L2_in_intra_trans_fu_140_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state4) & (ap_phi_mux_arb_1_phi_fu_108_p4 == 1'd1) & (icmp_ln617_fu_193_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (ap_phi_mux_arb_1_phi_fu_108_p4 == 1'd0) & (icmp_ln617_fu_193_p2 == 1'd0)))) begin
            grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_start_reg <= 1'b1;
        end else if ((grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_ready == 1'b1)) begin
            grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_B_IO_L2_in_intra_trans_fu_140_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state4) & (ap_phi_mux_arb_1_phi_fu_108_p4 == 1'd1) & (icmp_ln617_fu_193_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (ap_phi_mux_arb_1_phi_fu_108_p4 == 1'd0) & (icmp_ln617_fu_193_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln615_fu_165_p2 == 1'd1)))) begin
            grp_B_IO_L2_in_intra_trans_fu_140_ap_start_reg <= 1'b1;
        end else if ((grp_B_IO_L2_in_intra_trans_fu_140_ap_ready == 1'b1)) begin
            grp_B_IO_L2_in_intra_trans_fu_140_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
        arb_1_reg_104 <= arb_fu_205_p2;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln616_fu_177_p2 == 1'd0))) begin
        arb_1_reg_104 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        c0_fu_54 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln616_fu_177_p2 == 1'd1))) begin
        c0_fu_54 <= c0_2_reg_221;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln617_fu_193_p2 == 1'd1))) begin
        c1_reg_93 <= c1_1_reg_229;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln615_fu_165_p2 == 1'd0))) begin
        c1_reg_93 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
        c2_reg_129 <= c2_4_reg_237;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln616_fu_177_p2 == 1'd0))) begin
        c2_reg_129 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln617_fu_193_p2 == 1'd1))) begin
        intra_trans_en_1_reg_80 <= 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln615_fu_165_p2 == 1'd0))) begin
        intra_trans_en_1_reg_80 <= intra_trans_en_reg_66;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
        intra_trans_en_2_reg_116 <= 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln616_fu_177_p2 == 1'd0))) begin
        intra_trans_en_2_reg_116 <= intra_trans_en_1_reg_80;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln616_fu_177_p2 == 1'd1))) begin
        intra_trans_en_reg_66 <= 1'd1;
    end else if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        intra_trans_en_reg_66 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        c0_2_reg_221 <= c0_2_fu_171_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        c1_1_reg_229 <= c1_1_fu_183_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        c2_4_reg_237 <= c2_4_fu_199_p2;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (real_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state5_on_subcall_done)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_B_IO_L2_in_intra_trans_fu_140_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_B_IO_L2_in_intra_trans_fu_140_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((arb_1_reg_104 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((arb_1_reg_104 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        fifo_B_B_IO_L2_in_1_read = grp_B_IO_L2_in_inter_trans_boundary_fu_150_fifo_B_B_IO_L2_in_1_read;
    end else begin
        fifo_B_B_IO_L2_in_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((arb_1_reg_104 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((arb_1_reg_104 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        fifo_B_PE_0_1_write = grp_B_IO_L2_in_intra_trans_fu_140_fifo_B_PE_0_1_write;
    end else begin
        fifo_B_PE_0_1_write = 1'b0;
    end
end

always @ (*) begin
    if ((((arb_1_reg_104 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((arb_1_reg_104 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        grp_B_IO_L2_in_intra_trans_fu_140_intra_trans_en = intra_trans_en_2_reg_116;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_B_IO_L2_in_intra_trans_fu_140_intra_trans_en = 1'd1;
    end else begin
        grp_B_IO_L2_in_intra_trans_fu_140_intra_trans_en = 'bx;
    end
end

always @ (*) begin
    if (((arb_1_reg_104 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        grp_B_IO_L2_in_intra_trans_fu_140_local_B_q0 = local_B_pong_q0;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((arb_1_reg_104 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        grp_B_IO_L2_in_intra_trans_fu_140_local_B_q0 = local_B_ping_q0;
    end else begin
        grp_B_IO_L2_in_intra_trans_fu_140_local_B_q0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_B_IO_L2_in_intra_trans_fu_140_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | ((arb_1_reg_104 == 1'd0) & (1'b1 == ap_CS_fsm_state5)))) begin
        local_B_ping_ce0 = grp_B_IO_L2_in_intra_trans_fu_140_local_B_ce0;
    end else begin
        local_B_ping_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((arb_1_reg_104 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        local_B_ping_ce1 = grp_B_IO_L2_in_inter_trans_boundary_fu_150_local_B_ce1;
    end else begin
        local_B_ping_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arb_1_reg_104 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        local_B_ping_we1 = grp_B_IO_L2_in_inter_trans_boundary_fu_150_local_B_we1;
    end else begin
        local_B_ping_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((arb_1_reg_104 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        local_B_pong_ce0 = grp_B_IO_L2_in_intra_trans_fu_140_local_B_ce0;
    end else begin
        local_B_pong_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((arb_1_reg_104 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        local_B_pong_ce1 = grp_B_IO_L2_in_inter_trans_boundary_fu_150_local_B_ce1;
    end else begin
        local_B_pong_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((arb_1_reg_104 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        local_B_pong_we1 = grp_B_IO_L2_in_inter_trans_boundary_fu_150_local_B_we1;
    end else begin
        local_B_pong_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln615_fu_165_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln616_fu_177_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln617_fu_193_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((grp_B_IO_L2_in_intra_trans_fu_140_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state5_on_subcall_done = (((arb_1_reg_104 == 1'd1) & (grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_done == 1'b0)) | ((grp_B_IO_L2_in_intra_trans_fu_140_ap_done == 1'b0) & (arb_1_reg_104 == 1'd1)) | ((grp_B_IO_L2_in_intra_trans_fu_140_ap_done == 1'b0) & (arb_1_reg_104 == 1'd0)) | ((arb_1_reg_104 == 1'd0) & (grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_done == 1'b0)));
end

assign ap_phi_mux_arb_1_phi_fu_108_p4 = arb_1_reg_104;

assign ap_ready = internal_ap_ready;

assign arb_fu_205_p2 = (arb_1_reg_104 ^ 1'd1);

assign c0_2_fu_171_p2 = (c0_fu_54 + 3'd1);

assign c1_1_fu_183_p2 = (c1_reg_93 + 3'd1);

assign c2_4_fu_199_p2 = (c2_reg_129 + 3'd1);

assign fifo_B_PE_0_1_din = grp_B_IO_L2_in_intra_trans_fu_140_fifo_B_PE_0_1_din;

assign grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_start = grp_B_IO_L2_in_inter_trans_boundary_fu_150_ap_start_reg;

assign grp_B_IO_L2_in_intra_trans_fu_140_ap_start = grp_B_IO_L2_in_intra_trans_fu_140_ap_start_reg;

assign icmp_ln615_fu_165_p2 = ((c0_fu_54 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln616_fu_177_p2 = ((c1_reg_93 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln617_fu_193_p2 = ((c2_reg_129 == 3'd4) ? 1'b1 : 1'b0);

assign start_out = real_start;

endmodule //kernel0_B_IO_L2_in_boundary
