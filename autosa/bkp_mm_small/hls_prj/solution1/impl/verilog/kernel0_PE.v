// ==============================================================
// Generated by Vitis HLS v2023.1.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module kernel0_PE (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fifo_A_PE_1_12_dout,
        fifo_A_PE_1_12_num_data_valid,
        fifo_A_PE_1_12_fifo_cap,
        fifo_A_PE_1_12_empty_n,
        fifo_A_PE_1_12_read,
        fifo_B_PE_1_1_dout,
        fifo_B_PE_1_1_num_data_valid,
        fifo_B_PE_1_1_fifo_cap,
        fifo_B_PE_1_1_empty_n,
        fifo_B_PE_1_1_read,
        fifo_B_PE_2_1_din,
        fifo_B_PE_2_1_num_data_valid,
        fifo_B_PE_2_1_fifo_cap,
        fifo_B_PE_2_1_full_n,
        fifo_B_PE_2_1_write,
        fifo_A_PE_1_2_din,
        fifo_A_PE_1_2_num_data_valid,
        fifo_A_PE_1_2_fifo_cap,
        fifo_A_PE_1_2_full_n,
        fifo_A_PE_1_2_write,
        fifo_C_drain_PE_1_1_din,
        fifo_C_drain_PE_1_1_num_data_valid,
        fifo_C_drain_PE_1_1_fifo_cap,
        fifo_C_drain_PE_1_1_full_n,
        fifo_C_drain_PE_1_1_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] fifo_A_PE_1_12_dout;
input  [1:0] fifo_A_PE_1_12_num_data_valid;
input  [1:0] fifo_A_PE_1_12_fifo_cap;
input   fifo_A_PE_1_12_empty_n;
output   fifo_A_PE_1_12_read;
input  [63:0] fifo_B_PE_1_1_dout;
input  [1:0] fifo_B_PE_1_1_num_data_valid;
input  [1:0] fifo_B_PE_1_1_fifo_cap;
input   fifo_B_PE_1_1_empty_n;
output   fifo_B_PE_1_1_read;
output  [63:0] fifo_B_PE_2_1_din;
input  [1:0] fifo_B_PE_2_1_num_data_valid;
input  [1:0] fifo_B_PE_2_1_fifo_cap;
input   fifo_B_PE_2_1_full_n;
output   fifo_B_PE_2_1_write;
output  [63:0] fifo_A_PE_1_2_din;
input  [1:0] fifo_A_PE_1_2_num_data_valid;
input  [1:0] fifo_A_PE_1_2_fifo_cap;
input   fifo_A_PE_1_2_full_n;
output   fifo_A_PE_1_2_write;
output  [31:0] fifo_C_drain_PE_1_1_din;
input  [1:0] fifo_C_drain_PE_1_1_num_data_valid;
input  [1:0] fifo_C_drain_PE_1_1_fifo_cap;
input   fifo_C_drain_PE_1_1_full_n;
output   fifo_C_drain_PE_1_1_write;

reg ap_idle;
reg fifo_A_PE_1_12_read;
reg fifo_B_PE_1_1_read;
reg fifo_B_PE_2_1_write;
reg fifo_A_PE_1_2_write;
reg fifo_C_drain_PE_1_1_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln705_reg_879;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
reg   [0:0] select_ln710_1_reg_928;
reg   [0:0] select_ln710_1_reg_928_pp0_iter15_reg;
reg    ap_block_state17_pp0_stage0_iter16;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln705_fu_271_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fifo_A_PE_1_12_blk_n;
wire    ap_block_pp0_stage0;
reg    fifo_A_PE_1_2_blk_n;
reg    fifo_B_PE_1_1_blk_n;
reg    fifo_B_PE_2_1_blk_n;
reg    fifo_C_drain_PE_1_1_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln705_reg_879_pp0_iter1_reg;
reg   [0:0] icmp_ln705_reg_879_pp0_iter2_reg;
wire   [31:0] u_fu_288_p1;
reg   [31:0] u_reg_883;
reg   [31:0] u_1_reg_888;
wire   [31:0] u_2_fu_302_p1;
reg   [31:0] u_2_reg_893;
reg   [31:0] u_3_reg_898;
wire   [0:0] or_ln710_1_fu_583_p2;
reg   [0:0] or_ln710_1_reg_923;
wire   [0:0] select_ln710_1_fu_601_p3;
reg   [0:0] select_ln710_1_reg_928_pp0_iter4_reg;
reg   [0:0] select_ln710_1_reg_928_pp0_iter5_reg;
reg   [0:0] select_ln710_1_reg_928_pp0_iter6_reg;
reg   [0:0] select_ln710_1_reg_928_pp0_iter7_reg;
reg   [0:0] select_ln710_1_reg_928_pp0_iter8_reg;
reg   [0:0] select_ln710_1_reg_928_pp0_iter9_reg;
reg   [0:0] select_ln710_1_reg_928_pp0_iter10_reg;
reg   [0:0] select_ln710_1_reg_928_pp0_iter11_reg;
reg   [0:0] select_ln710_1_reg_928_pp0_iter12_reg;
reg   [0:0] select_ln710_1_reg_928_pp0_iter13_reg;
reg   [0:0] select_ln710_1_reg_928_pp0_iter14_reg;
wire   [0:0] and_ln710_fu_621_p2;
reg   [0:0] and_ln710_reg_932;
wire   [2:0] trunc_ln712_fu_661_p1;
reg   [2:0] trunc_ln712_reg_937;
reg   [5:0] local_C_addr_reg_942;
reg   [5:0] local_C_addr_reg_942_pp0_iter5_reg;
reg   [5:0] local_C_addr_reg_942_pp0_iter6_reg;
reg   [5:0] local_C_addr_reg_942_pp0_iter7_reg;
reg   [5:0] local_C_addr_reg_942_pp0_iter8_reg;
reg   [5:0] local_C_addr_reg_942_pp0_iter9_reg;
reg   [5:0] local_C_addr_reg_942_pp0_iter10_reg;
reg   [5:0] local_C_addr_reg_942_pp0_iter11_reg;
reg   [5:0] local_C_addr_reg_942_pp0_iter12_reg;
reg   [5:0] local_C_addr_reg_942_pp0_iter13_reg;
reg   [5:0] local_C_addr_reg_942_pp0_iter14_reg;
reg   [5:0] local_C_addr_reg_942_pp0_iter15_reg;
wire   [31:0] local_C_q0;
reg   [31:0] local_C_load_reg_948;
wire   [31:0] grp_fu_215_p2;
reg   [31:0] mul_reg_953;
wire   [31:0] grp_fu_219_p2;
reg   [31:0] mul_1_reg_958;
reg   [31:0] mul_1_reg_958_pp0_iter6_reg;
reg   [31:0] mul_1_reg_958_pp0_iter7_reg;
reg   [31:0] mul_1_reg_958_pp0_iter8_reg;
reg   [31:0] mul_1_reg_958_pp0_iter9_reg;
reg   [31:0] mul_1_reg_958_pp0_iter10_reg;
wire   [31:0] grp_fu_207_p2;
reg   [31:0] add_reg_963;
wire   [31:0] grp_fu_211_p2;
reg   [31:0] add_1_reg_968;
reg    ap_condition_exit_pp0_iter3_stage0;
wire   [5:0] local_C_address0;
reg    local_C_ce0;
reg    local_C_ce1;
reg    local_C_we1;
wire   [63:0] p_cast_fu_802_p1;
reg   [3:0] c7_fu_116;
wire   [3:0] add_ln714_fu_665_p2;
wire    ap_loop_init;
reg   [3:0] c6_fu_120;
wire   [3:0] select_ln712_1_fu_778_p3;
reg   [7:0] indvar_flatten_fu_124;
wire   [7:0] select_ln712_2_fu_677_p3;
reg   [3:0] c5_fu_128;
wire   [3:0] select_ln710_2_fu_627_p3;
reg   [10:0] indvar_flatten12_fu_132;
wire   [10:0] select_ln710_3_fu_691_p3;
reg   [2:0] c2_fu_136;
wire   [2:0] select_ln707_2_fu_563_p3;
reg   [12:0] indvar_flatten37_fu_140;
wire   [12:0] select_ln707_3_fu_705_p3;
reg   [14:0] indvar_flatten72_fu_144;
wire   [14:0] select_ln706_1_fu_719_p3;
reg   [15:0] indvar_flatten115_fu_148;
wire   [15:0] add_ln705_fu_277_p2;
reg   [15:0] ap_sig_allocacmp_indvar_flatten115_load;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_215_p0;
wire   [31:0] grp_fu_215_p1;
wire   [31:0] grp_fu_219_p0;
wire   [31:0] grp_fu_219_p1;
wire   [0:0] cmp_i_i99_not_fu_350_p2;
wire   [0:0] cmp_i_i_not_fu_356_p2;
wire   [0:0] icmp_ln706_fu_371_p2;
wire   [0:0] brmerge_fu_362_p2;
wire   [0:0] icmp_ln714_fu_395_p2;
wire   [0:0] xor_ln705_fu_389_p2;
wire   [0:0] icmp_ln712_fu_407_p2;
wire   [0:0] icmp_ln707_fu_425_p2;
wire   [0:0] and_ln705_3_fu_431_p2;
wire   [0:0] or_ln706_fu_437_p2;
wire   [0:0] or_ln705_fu_377_p2;
wire   [0:0] or_ln705_1_fu_383_p2;
wire   [0:0] xor_ln706_fu_463_p2;
wire   [0:0] and_ln705_fu_401_p2;
wire   [0:0] or_ln706_3_fu_469_p2;
wire   [0:0] and_ln705_1_fu_413_p2;
wire   [0:0] icmp_ln710_fu_419_p2;
wire   [0:0] and_ln705_2_fu_487_p2;
wire   [2:0] select_ln706_fu_443_p3;
wire   [0:0] and_ln706_2_fu_493_p2;
wire   [0:0] or_ln707_fu_505_p2;
wire   [0:0] or_ln707_1_fu_511_p2;
wire   [2:0] c2_3_fu_499_p2;
wire   [0:0] cmp_i_i99_not_mid1_fu_525_p2;
wire   [0:0] or_ln706_1_fu_451_p2;
wire   [0:0] or_ln706_2_fu_457_p2;
wire   [0:0] and_ln706_fu_475_p2;
wire   [0:0] xor_ln707_fu_545_p2;
wire   [0:0] and_ln706_1_fu_481_p2;
wire   [3:0] select_ln707_fu_517_p3;
wire   [0:0] and_ln707_1_fu_557_p2;
wire   [0:0] or_ln710_fu_577_p2;
wire   [3:0] c5_3_fu_571_p2;
wire   [0:0] select_ln707_1_fu_531_p3;
wire   [0:0] cmp_i_i_not_mid1_fu_589_p2;
wire   [0:0] brmerge_mid1_fu_595_p2;
wire   [0:0] or_ln707_2_fu_539_p2;
wire   [0:0] xor_ln710_fu_609_p2;
wire   [0:0] and_ln707_fu_551_p2;
wire   [0:0] or_ln710_2_fu_615_p2;
wire   [0:0] or_ln712_fu_635_p2;
wire   [0:0] or_ln712_1_fu_641_p2;
wire   [0:0] or_ln712_2_fu_647_p2;
wire   [3:0] select_ln712_fu_653_p3;
wire   [7:0] add_ln712_1_fu_671_p2;
wire   [10:0] add_ln710_1_fu_685_p2;
wire   [12:0] add_ln707_1_fu_699_p2;
wire   [14:0] add_ln706_fu_713_p2;
wire   [3:0] select_ln710_fu_765_p3;
wire   [3:0] add_ln712_fu_772_p2;
wire   [5:0] tmp_fu_789_p3;
wire   [5:0] zext_ln712_fu_785_p1;
wire   [5:0] empty_fu_796_p2;
reg    grp_fu_207_ce;
reg    grp_fu_211_ce;
reg    grp_fu_215_ce;
reg    grp_fu_219_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_done_reg = 1'b0;
end

kernel0_PE_local_C_RAM_2P_BRAM_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
local_C_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(local_C_address0),
    .ce0(local_C_ce0),
    .q0(local_C_q0),
    .address1(local_C_addr_reg_942_pp0_iter15_reg),
    .ce1(local_C_ce1),
    .we1(local_C_we1),
    .d1(add_1_reg_968)
);

kernel0_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(local_C_load_reg_948),
    .din1(mul_reg_953),
    .ce(grp_fu_207_ce),
    .dout(grp_fu_207_p2)
);

kernel0_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_reg_963),
    .din1(mul_1_reg_958_pp0_iter10_reg),
    .ce(grp_fu_211_ce),
    .dout(grp_fu_211_p2)
);

kernel0_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_215_p0),
    .din1(grp_fu_215_p1),
    .ce(grp_fu_215_ce),
    .dout(grp_fu_215_p2)
);

kernel0_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_219_p0),
    .din1(grp_fu_219_p1),
    .ce(grp_fu_219_ce),
    .dout(grp_fu_219_p2)
);

kernel0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter15_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter3_stage0)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            c2_fu_136 <= 3'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln705_reg_879_pp0_iter2_reg == 1'd0))) begin
            c2_fu_136 <= select_ln707_2_fu_563_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            c5_fu_128 <= 4'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln705_reg_879_pp0_iter2_reg == 1'd0))) begin
            c5_fu_128 <= select_ln710_2_fu_627_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            c6_fu_120 <= 4'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            c6_fu_120 <= select_ln712_1_fu_778_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            c7_fu_116 <= 4'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln705_reg_879_pp0_iter2_reg == 1'd0))) begin
            c7_fu_116 <= add_ln714_fu_665_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln705_fu_271_p2 == 1'd0))) begin
            indvar_flatten115_fu_148 <= add_ln705_fu_277_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten115_fu_148 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            indvar_flatten12_fu_132 <= 11'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln705_reg_879_pp0_iter2_reg == 1'd0))) begin
            indvar_flatten12_fu_132 <= select_ln710_3_fu_691_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            indvar_flatten37_fu_140 <= 13'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln705_reg_879_pp0_iter2_reg == 1'd0))) begin
            indvar_flatten37_fu_140 <= select_ln707_3_fu_705_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            indvar_flatten72_fu_144 <= 15'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln705_reg_879_pp0_iter2_reg == 1'd0))) begin
            indvar_flatten72_fu_144 <= select_ln706_1_fu_719_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            indvar_flatten_fu_124 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln705_reg_879_pp0_iter2_reg == 1'd0))) begin
            indvar_flatten_fu_124 <= select_ln712_2_fu_677_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_1_reg_968 <= grp_fu_211_p2;
        add_reg_963 <= grp_fu_207_p2;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln705_reg_879_pp0_iter2_reg <= icmp_ln705_reg_879_pp0_iter1_reg;
        local_C_addr_reg_942 <= p_cast_fu_802_p1;
        local_C_addr_reg_942_pp0_iter10_reg <= local_C_addr_reg_942_pp0_iter9_reg;
        local_C_addr_reg_942_pp0_iter11_reg <= local_C_addr_reg_942_pp0_iter10_reg;
        local_C_addr_reg_942_pp0_iter12_reg <= local_C_addr_reg_942_pp0_iter11_reg;
        local_C_addr_reg_942_pp0_iter13_reg <= local_C_addr_reg_942_pp0_iter12_reg;
        local_C_addr_reg_942_pp0_iter14_reg <= local_C_addr_reg_942_pp0_iter13_reg;
        local_C_addr_reg_942_pp0_iter15_reg <= local_C_addr_reg_942_pp0_iter14_reg;
        local_C_addr_reg_942_pp0_iter5_reg <= local_C_addr_reg_942;
        local_C_addr_reg_942_pp0_iter6_reg <= local_C_addr_reg_942_pp0_iter5_reg;
        local_C_addr_reg_942_pp0_iter7_reg <= local_C_addr_reg_942_pp0_iter6_reg;
        local_C_addr_reg_942_pp0_iter8_reg <= local_C_addr_reg_942_pp0_iter7_reg;
        local_C_addr_reg_942_pp0_iter9_reg <= local_C_addr_reg_942_pp0_iter8_reg;
        mul_1_reg_958 <= grp_fu_219_p2;
        mul_1_reg_958_pp0_iter10_reg <= mul_1_reg_958_pp0_iter9_reg;
        mul_1_reg_958_pp0_iter6_reg <= mul_1_reg_958;
        mul_1_reg_958_pp0_iter7_reg <= mul_1_reg_958_pp0_iter6_reg;
        mul_1_reg_958_pp0_iter8_reg <= mul_1_reg_958_pp0_iter7_reg;
        mul_1_reg_958_pp0_iter9_reg <= mul_1_reg_958_pp0_iter8_reg;
        mul_reg_953 <= grp_fu_215_p2;
        select_ln710_1_reg_928_pp0_iter10_reg <= select_ln710_1_reg_928_pp0_iter9_reg;
        select_ln710_1_reg_928_pp0_iter11_reg <= select_ln710_1_reg_928_pp0_iter10_reg;
        select_ln710_1_reg_928_pp0_iter12_reg <= select_ln710_1_reg_928_pp0_iter11_reg;
        select_ln710_1_reg_928_pp0_iter13_reg <= select_ln710_1_reg_928_pp0_iter12_reg;
        select_ln710_1_reg_928_pp0_iter14_reg <= select_ln710_1_reg_928_pp0_iter13_reg;
        select_ln710_1_reg_928_pp0_iter15_reg <= select_ln710_1_reg_928_pp0_iter14_reg;
        select_ln710_1_reg_928_pp0_iter4_reg <= select_ln710_1_reg_928;
        select_ln710_1_reg_928_pp0_iter5_reg <= select_ln710_1_reg_928_pp0_iter4_reg;
        select_ln710_1_reg_928_pp0_iter6_reg <= select_ln710_1_reg_928_pp0_iter5_reg;
        select_ln710_1_reg_928_pp0_iter7_reg <= select_ln710_1_reg_928_pp0_iter6_reg;
        select_ln710_1_reg_928_pp0_iter8_reg <= select_ln710_1_reg_928_pp0_iter7_reg;
        select_ln710_1_reg_928_pp0_iter9_reg <= select_ln710_1_reg_928_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_reg_879_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln710_reg_932 <= and_ln710_fu_621_p2;
        or_ln710_1_reg_923 <= or_ln710_1_fu_583_p2;
        select_ln710_1_reg_928 <= select_ln710_1_fu_601_p3;
        trunc_ln712_reg_937 <= trunc_ln712_fu_661_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln705_reg_879 <= icmp_ln705_fu_271_p2;
        icmp_ln705_reg_879_pp0_iter1_reg <= icmp_ln705_reg_879;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_C_load_reg_948 <= local_C_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln705_reg_879 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        u_1_reg_888 <= {{fifo_A_PE_1_12_dout[63:32]}};
        u_2_reg_893 <= u_2_fu_302_p1;
        u_3_reg_898 <= {{fifo_B_PE_1_1_dout[63:32]}};
        u_reg_883 <= u_fu_288_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln705_fu_271_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln705_reg_879_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter15_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten115_load = 16'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten115_load = indvar_flatten115_fu_148;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_879 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_A_PE_1_12_blk_n = fifo_A_PE_1_12_empty_n;
    end else begin
        fifo_A_PE_1_12_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_879 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_A_PE_1_12_read = 1'b1;
    end else begin
        fifo_A_PE_1_12_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_879 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_A_PE_1_2_blk_n = fifo_A_PE_1_2_full_n;
    end else begin
        fifo_A_PE_1_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_879 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_A_PE_1_2_write = 1'b1;
    end else begin
        fifo_A_PE_1_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_879 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_B_PE_1_1_blk_n = fifo_B_PE_1_1_empty_n;
    end else begin
        fifo_B_PE_1_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_879 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_B_PE_1_1_read = 1'b1;
    end else begin
        fifo_B_PE_1_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_879 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        fifo_B_PE_2_1_blk_n = fifo_B_PE_2_1_full_n;
    end else begin
        fifo_B_PE_2_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln705_reg_879 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_B_PE_2_1_write = 1'b1;
    end else begin
        fifo_B_PE_2_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (select_ln710_1_reg_928_pp0_iter15_reg == 1'd0))) begin
        fifo_C_drain_PE_1_1_blk_n = fifo_C_drain_PE_1_1_full_n;
    end else begin
        fifo_C_drain_PE_1_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln710_1_reg_928_pp0_iter15_reg == 1'd0))) begin
        fifo_C_drain_PE_1_1_write = 1'b1;
    end else begin
        fifo_C_drain_PE_1_1_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_207_ce = 1'b1;
    end else begin
        grp_fu_207_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_211_ce = 1'b1;
    end else begin
        grp_fu_211_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_215_ce = 1'b1;
    end else begin
        grp_fu_215_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_219_ce = 1'b1;
    end else begin
        grp_fu_219_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_C_ce0 = 1'b1;
    end else begin
        local_C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_C_ce1 = 1'b1;
    end else begin
        local_C_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        local_C_we1 = 1'b1;
    end else begin
        local_C_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln705_fu_277_p2 = (ap_sig_allocacmp_indvar_flatten115_load + 16'd1);

assign add_ln706_fu_713_p2 = (indvar_flatten72_fu_144 + 15'd1);

assign add_ln707_1_fu_699_p2 = (indvar_flatten37_fu_140 + 13'd1);

assign add_ln710_1_fu_685_p2 = (indvar_flatten12_fu_132 + 11'd1);

assign add_ln712_1_fu_671_p2 = (indvar_flatten_fu_124 + 8'd1);

assign add_ln712_fu_772_p2 = (select_ln710_fu_765_p3 + 4'd1);

assign add_ln714_fu_665_p2 = (select_ln712_fu_653_p3 + 4'd1);

assign and_ln705_1_fu_413_p2 = (xor_ln705_fu_389_p2 & icmp_ln712_fu_407_p2);

assign and_ln705_2_fu_487_p2 = (xor_ln705_fu_389_p2 & icmp_ln710_fu_419_p2);

assign and_ln705_3_fu_431_p2 = (xor_ln705_fu_389_p2 & icmp_ln707_fu_425_p2);

assign and_ln705_fu_401_p2 = (xor_ln705_fu_389_p2 & icmp_ln714_fu_395_p2);

assign and_ln706_1_fu_481_p2 = (or_ln706_3_fu_469_p2 & and_ln705_1_fu_413_p2);

assign and_ln706_2_fu_493_p2 = (or_ln706_3_fu_469_p2 & and_ln705_2_fu_487_p2);

assign and_ln706_fu_475_p2 = (or_ln706_3_fu_469_p2 & and_ln705_fu_401_p2);

assign and_ln707_1_fu_557_p2 = (xor_ln707_fu_545_p2 & and_ln706_1_fu_481_p2);

assign and_ln707_fu_551_p2 = (xor_ln707_fu_545_p2 & and_ln706_fu_475_p2);

assign and_ln710_fu_621_p2 = (or_ln710_2_fu_615_p2 & and_ln707_fu_551_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter16 == 1'b1) & (select_ln710_1_reg_928_pp0_iter15_reg == 1'd0) & (fifo_C_drain_PE_1_1_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fifo_B_PE_1_1_empty_n == 1'b0) & (icmp_ln705_reg_879 == 1'd0)) | ((icmp_ln705_reg_879 == 1'd0) & (fifo_A_PE_1_12_empty_n == 1'b0)) | ((icmp_ln705_reg_879 == 1'd0) & (fifo_A_PE_1_2_full_n == 1'b0)) | ((fifo_B_PE_2_1_full_n == 1'b0) & (icmp_ln705_reg_879 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter16 == 1'b1) & (select_ln710_1_reg_928_pp0_iter15_reg == 1'd0) & (fifo_C_drain_PE_1_1_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fifo_B_PE_1_1_empty_n == 1'b0) & (icmp_ln705_reg_879 == 1'd0)) | ((icmp_ln705_reg_879 == 1'd0) & (fifo_A_PE_1_12_empty_n == 1'b0)) | ((icmp_ln705_reg_879 == 1'd0) & (fifo_A_PE_1_2_full_n == 1'b0)) | ((fifo_B_PE_2_1_full_n == 1'b0) & (icmp_ln705_reg_879 == 1'd0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter16 == 1'b1) & (select_ln710_1_reg_928_pp0_iter15_reg == 1'd0) & (fifo_C_drain_PE_1_1_full_n == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((fifo_B_PE_1_1_empty_n == 1'b0) & (icmp_ln705_reg_879 == 1'd0)) | ((icmp_ln705_reg_879 == 1'd0) & (fifo_A_PE_1_12_empty_n == 1'b0)) | ((icmp_ln705_reg_879 == 1'd0) & (fifo_A_PE_1_2_full_n == 1'b0)) | ((fifo_B_PE_2_1_full_n == 1'b0) & (icmp_ln705_reg_879 == 1'd0)))));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp0_stage0_iter16 = ((select_ln710_1_reg_928_pp0_iter15_reg == 1'd0) & (fifo_C_drain_PE_1_1_full_n == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((fifo_B_PE_1_1_empty_n == 1'b0) & (icmp_ln705_reg_879 == 1'd0)) | ((icmp_ln705_reg_879 == 1'd0) & (fifo_A_PE_1_12_empty_n == 1'b0)) | ((icmp_ln705_reg_879 == 1'd0) & (fifo_A_PE_1_2_full_n == 1'b0)) | ((fifo_B_PE_2_1_full_n == 1'b0) & (icmp_ln705_reg_879 == 1'd0)));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign brmerge_fu_362_p2 = (cmp_i_i_not_fu_356_p2 | cmp_i_i99_not_fu_350_p2);

assign brmerge_mid1_fu_595_p2 = (select_ln707_1_fu_531_p3 | cmp_i_i_not_mid1_fu_589_p2);

assign c2_3_fu_499_p2 = (select_ln706_fu_443_p3 + 3'd1);

assign c5_3_fu_571_p2 = (select_ln707_fu_517_p3 + 4'd1);

assign cmp_i_i99_not_fu_350_p2 = ((c2_fu_136 != 3'd3) ? 1'b1 : 1'b0);

assign cmp_i_i99_not_mid1_fu_525_p2 = ((c2_3_fu_499_p2 != 3'd3) ? 1'b1 : 1'b0);

assign cmp_i_i_not_fu_356_p2 = ((c5_fu_128 != 4'd7) ? 1'b1 : 1'b0);

assign cmp_i_i_not_mid1_fu_589_p2 = ((c5_3_fu_571_p2 != 4'd7) ? 1'b1 : 1'b0);

assign empty_fu_796_p2 = (tmp_fu_789_p3 + zext_ln712_fu_785_p1);

assign fifo_A_PE_1_2_din = fifo_A_PE_1_12_dout;

assign fifo_B_PE_2_1_din = fifo_B_PE_1_1_dout;

assign fifo_C_drain_PE_1_1_din = add_1_reg_968;

assign grp_fu_215_p0 = u_reg_883;

assign grp_fu_215_p1 = u_2_reg_893;

assign grp_fu_219_p0 = u_1_reg_888;

assign grp_fu_219_p1 = u_3_reg_898;

assign icmp_ln705_fu_271_p2 = ((ap_sig_allocacmp_indvar_flatten115_load == 16'd32768) ? 1'b1 : 1'b0);

assign icmp_ln706_fu_371_p2 = ((indvar_flatten72_fu_144 == 15'd8192) ? 1'b1 : 1'b0);

assign icmp_ln707_fu_425_p2 = ((indvar_flatten37_fu_140 == 13'd2048) ? 1'b1 : 1'b0);

assign icmp_ln710_fu_419_p2 = ((indvar_flatten12_fu_132 == 11'd512) ? 1'b1 : 1'b0);

assign icmp_ln712_fu_407_p2 = ((indvar_flatten_fu_124 == 8'd64) ? 1'b1 : 1'b0);

assign icmp_ln714_fu_395_p2 = ((c7_fu_116 == 4'd8) ? 1'b1 : 1'b0);

assign local_C_address0 = p_cast_fu_802_p1;

assign or_ln705_1_fu_383_p2 = (icmp_ln706_fu_371_p2 | brmerge_fu_362_p2);

assign or_ln705_fu_377_p2 = (icmp_ln706_fu_371_p2 | cmp_i_i99_not_fu_350_p2);

assign or_ln706_1_fu_451_p2 = (or_ln705_fu_377_p2 | and_ln705_3_fu_431_p2);

assign or_ln706_2_fu_457_p2 = (or_ln705_1_fu_383_p2 | and_ln705_3_fu_431_p2);

assign or_ln706_3_fu_469_p2 = (xor_ln706_fu_463_p2 | icmp_ln706_fu_371_p2);

assign or_ln706_fu_437_p2 = (icmp_ln706_fu_371_p2 | and_ln705_3_fu_431_p2);

assign or_ln707_1_fu_511_p2 = (or_ln707_fu_505_p2 | icmp_ln706_fu_371_p2);

assign or_ln707_2_fu_539_p2 = (or_ln706_2_fu_457_p2 | and_ln706_2_fu_493_p2);

assign or_ln707_fu_505_p2 = (and_ln706_2_fu_493_p2 | and_ln705_3_fu_431_p2);

assign or_ln710_1_fu_583_p2 = (or_ln710_fu_577_p2 | or_ln706_fu_437_p2);

assign or_ln710_2_fu_615_p2 = (xor_ln710_fu_609_p2 | and_ln706_2_fu_493_p2);

assign or_ln710_fu_577_p2 = (and_ln707_1_fu_557_p2 | and_ln706_2_fu_493_p2);

assign or_ln712_1_fu_641_p2 = (or_ln712_fu_635_p2 | or_ln707_fu_505_p2);

assign or_ln712_2_fu_647_p2 = (or_ln712_1_fu_641_p2 | icmp_ln706_fu_371_p2);

assign or_ln712_fu_635_p2 = (and_ln710_fu_621_p2 | and_ln707_1_fu_557_p2);

assign p_cast_fu_802_p1 = empty_fu_796_p2;

assign select_ln706_1_fu_719_p3 = ((icmp_ln706_fu_371_p2[0:0] == 1'b1) ? 15'd1 : add_ln706_fu_713_p2);

assign select_ln706_fu_443_p3 = ((or_ln706_fu_437_p2[0:0] == 1'b1) ? 3'd0 : c2_fu_136);

assign select_ln707_1_fu_531_p3 = ((and_ln706_2_fu_493_p2[0:0] == 1'b1) ? cmp_i_i99_not_mid1_fu_525_p2 : or_ln706_1_fu_451_p2);

assign select_ln707_2_fu_563_p3 = ((and_ln706_2_fu_493_p2[0:0] == 1'b1) ? c2_3_fu_499_p2 : select_ln706_fu_443_p3);

assign select_ln707_3_fu_705_p3 = ((or_ln706_fu_437_p2[0:0] == 1'b1) ? 13'd1 : add_ln707_1_fu_699_p2);

assign select_ln707_fu_517_p3 = ((or_ln707_1_fu_511_p2[0:0] == 1'b1) ? 4'd0 : c5_fu_128);

assign select_ln710_1_fu_601_p3 = ((and_ln707_1_fu_557_p2[0:0] == 1'b1) ? brmerge_mid1_fu_595_p2 : or_ln707_2_fu_539_p2);

assign select_ln710_2_fu_627_p3 = ((and_ln707_1_fu_557_p2[0:0] == 1'b1) ? c5_3_fu_571_p2 : select_ln707_fu_517_p3);

assign select_ln710_3_fu_691_p3 = ((or_ln707_1_fu_511_p2[0:0] == 1'b1) ? 11'd1 : add_ln710_1_fu_685_p2);

assign select_ln710_fu_765_p3 = ((or_ln710_1_reg_923[0:0] == 1'b1) ? 4'd0 : c6_fu_120);

assign select_ln712_1_fu_778_p3 = ((and_ln710_reg_932[0:0] == 1'b1) ? add_ln712_fu_772_p2 : select_ln710_fu_765_p3);

assign select_ln712_2_fu_677_p3 = ((or_ln710_1_fu_583_p2[0:0] == 1'b1) ? 8'd1 : add_ln712_1_fu_671_p2);

assign select_ln712_fu_653_p3 = ((or_ln712_2_fu_647_p2[0:0] == 1'b1) ? 4'd0 : c7_fu_116);

assign tmp_fu_789_p3 = {{trunc_ln712_reg_937}, {3'd0}};

assign trunc_ln712_fu_661_p1 = select_ln712_fu_653_p3[2:0];

assign u_2_fu_302_p1 = fifo_B_PE_1_1_dout[31:0];

assign u_fu_288_p1 = fifo_A_PE_1_12_dout[31:0];

assign xor_ln705_fu_389_p2 = (icmp_ln706_fu_371_p2 ^ 1'd1);

assign xor_ln706_fu_463_p2 = (icmp_ln707_fu_425_p2 ^ 1'd1);

assign xor_ln707_fu_545_p2 = (1'd1 ^ and_ln706_2_fu_493_p2);

assign xor_ln710_fu_609_p2 = (1'd1 ^ and_ln706_1_fu_481_p2);

assign zext_ln712_fu_785_p1 = select_ln712_1_fu_778_p3;

endmodule //kernel0_PE
